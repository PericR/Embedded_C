
stm32f446_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000008e4  080001c4  080001c4  000101c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000aa8  08000ab0  00010ab0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000aa8  08000aa8  00010ab0  2**0
                  CONTENTS
  4 .ARM          00000000  08000aa8  08000aa8  00010ab0  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000aa8  08000ab0  00010ab0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000aa8  08000aa8  00010aa8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000aac  08000aac  00010aac  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010ab0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000ab0  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000ab0  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00010ab0  2**0
                  CONTENTS, READONLY
 12 .debug_info   000011aa  00000000  00000000  00010ada  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 0000031a  00000000  00000000  00011c84  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 000000c8  00000000  00000000  00011fa0  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 000000a0  00000000  00000000  00012068  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00002640  00000000  00000000  00012108  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00000cd5  00000000  00000000  00014748  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    000099e2  00000000  00000000  0001541d  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0001edff  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000288  00000000  00000000  0001ee7c  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	; (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	08000a90 	.word	0x08000a90

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	; (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	; (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	; (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	08000a90 	.word	0x08000a90

08000204 <delay>:
#include <string.h>
#include "stm32f446re.h"

#define BTN_PRESSED LOW

void delay(void){
 8000204:	b480      	push	{r7}
 8000206:	b083      	sub	sp, #12
 8000208:	af00      	add	r7, sp, #0
	for(uint32_t i = 0; i < 3000000; i++);
 800020a:	2300      	movs	r3, #0
 800020c:	607b      	str	r3, [r7, #4]
 800020e:	e002      	b.n	8000216 <delay+0x12>
 8000210:	687b      	ldr	r3, [r7, #4]
 8000212:	3301      	adds	r3, #1
 8000214:	607b      	str	r3, [r7, #4]
 8000216:	687b      	ldr	r3, [r7, #4]
 8000218:	4a03      	ldr	r2, [pc, #12]	; (8000228 <delay+0x24>)
 800021a:	4293      	cmp	r3, r2
 800021c:	d9f8      	bls.n	8000210 <delay+0xc>
}
 800021e:	bf00      	nop
 8000220:	370c      	adds	r7, #12
 8000222:	46bd      	mov	sp, r7
 8000224:	bc80      	pop	{r7}
 8000226:	4770      	bx	lr
 8000228:	002dc6bf 	.word	0x002dc6bf

0800022c <main>:

int main(void)
{
 800022c:	b580      	push	{r7, lr}
 800022e:	b086      	sub	sp, #24
 8000230:	af00      	add	r7, sp, #0
	GPIO_handle_t gpio_led;
	memset(&gpio_led, 0, sizeof(gpio_led));
 8000232:	f107 030c 	add.w	r3, r7, #12
 8000236:	220c      	movs	r2, #12
 8000238:	2100      	movs	r1, #0
 800023a:	4618      	mov	r0, r3
 800023c:	f000 fc20 	bl	8000a80 <memset>

	gpio_led.pGPIOx = GPIOA;
 8000240:	4b1a      	ldr	r3, [pc, #104]	; (80002ac <main+0x80>)
 8000242:	60fb      	str	r3, [r7, #12]
	gpio_led.GPIO_pin_config.GPIO_pin_num = GPIO_PIN_NO_10;
 8000244:	230a      	movs	r3, #10
 8000246:	743b      	strb	r3, [r7, #16]
	gpio_led.GPIO_pin_config.GPIO_pin_mode = GPIO_MODE_OUT;
 8000248:	2301      	movs	r3, #1
 800024a:	747b      	strb	r3, [r7, #17]
	gpio_led.GPIO_pin_config.GPIO_pin_speed = GPIO_OP_SPEED_FAST;
 800024c:	2302      	movs	r3, #2
 800024e:	74bb      	strb	r3, [r7, #18]
	gpio_led.GPIO_pin_config.GPIO_pin_op_type = GPIO_OP_TYPE_PP;
 8000250:	2300      	movs	r3, #0
 8000252:	753b      	strb	r3, [r7, #20]
	gpio_led.GPIO_pin_config.GPIO_pin_pu_pd = GPIO_PIN_NO_PUPD;
 8000254:	2300      	movs	r3, #0
 8000256:	74fb      	strb	r3, [r7, #19]

	GPIO_handle_t gpio_button;
	memset(&gpio_button, 0, sizeof(gpio_button));
 8000258:	463b      	mov	r3, r7
 800025a:	220c      	movs	r2, #12
 800025c:	2100      	movs	r1, #0
 800025e:	4618      	mov	r0, r3
 8000260:	f000 fc0e 	bl	8000a80 <memset>

	gpio_button.pGPIOx = GPIOB;
 8000264:	4b12      	ldr	r3, [pc, #72]	; (80002b0 <main+0x84>)
 8000266:	603b      	str	r3, [r7, #0]
	gpio_button.GPIO_pin_config.GPIO_pin_num = GPIO_PIN_NO_12;
 8000268:	230c      	movs	r3, #12
 800026a:	713b      	strb	r3, [r7, #4]
	gpio_button.GPIO_pin_config.GPIO_pin_mode = GPIO_MODE_IT_FT;
 800026c:	2304      	movs	r3, #4
 800026e:	717b      	strb	r3, [r7, #5]
	gpio_button.GPIO_pin_config.GPIO_pin_speed = GPIO_OP_SPEED_FAST;
 8000270:	2302      	movs	r3, #2
 8000272:	71bb      	strb	r3, [r7, #6]
	gpio_button.GPIO_pin_config.GPIO_pin_pu_pd = GPIO_PIN_PU;
 8000274:	2301      	movs	r3, #1
 8000276:	71fb      	strb	r3, [r7, #7]

	GPIO_peri_clock_control(GPIOA, ENABLE);
 8000278:	2101      	movs	r1, #1
 800027a:	480c      	ldr	r0, [pc, #48]	; (80002ac <main+0x80>)
 800027c:	f000 f854 	bl	8000328 <GPIO_peri_clock_control>
	GPIO_peri_clock_control(GPIOB, ENABLE);
 8000280:	2101      	movs	r1, #1
 8000282:	480b      	ldr	r0, [pc, #44]	; (80002b0 <main+0x84>)
 8000284:	f000 f850 	bl	8000328 <GPIO_peri_clock_control>

	GPIO_init(&gpio_led);
 8000288:	f107 030c 	add.w	r3, r7, #12
 800028c:	4618      	mov	r0, r3
 800028e:	f000 f91b 	bl	80004c8 <GPIO_init>
	GPIO_init(&gpio_button);
 8000292:	463b      	mov	r3, r7
 8000294:	4618      	mov	r0, r3
 8000296:	f000 f917 	bl	80004c8 <GPIO_init>

	//IRQ configurations
	GPIO_IRQ_priority_config(IRQ_NO_EXTI_15_10, IRQ_PR_15);
 800029a:	210f      	movs	r1, #15
 800029c:	2028      	movs	r0, #40	; 0x28
 800029e:	f000 fb81 	bl	80009a4 <GPIO_IRQ_priority_config>
	GPIO_IRQ_interrupt_config(IRQ_NO_EXTI_15_10, ENABLE);
 80002a2:	2101      	movs	r1, #1
 80002a4:	2028      	movs	r0, #40	; 0x28
 80002a6:	f000 faf5 	bl	8000894 <GPIO_IRQ_interrupt_config>

	for(;;);
 80002aa:	e7fe      	b.n	80002aa <main+0x7e>
 80002ac:	40020000 	.word	0x40020000
 80002b0:	40020400 	.word	0x40020400

080002b4 <EXTI15_10_IRQHandler>:
}

void EXTI15_10_IRQHandler(void){
 80002b4:	b580      	push	{r7, lr}
 80002b6:	af00      	add	r7, sp, #0

	GPIO_IRQ_handling(GPIO_PIN_NO_12);
 80002b8:	200c      	movs	r0, #12
 80002ba:	f000 fb9d 	bl	80009f8 <GPIO_IRQ_handling>
	GPIO_toggle_output_pin(GPIOA, GPIO_PIN_NO_10);
 80002be:	210a      	movs	r1, #10
 80002c0:	4803      	ldr	r0, [pc, #12]	; (80002d0 <EXTI15_10_IRQHandler+0x1c>)
 80002c2:	f000 fad3 	bl	800086c <GPIO_toggle_output_pin>
	delay();
 80002c6:	f7ff ff9d 	bl	8000204 <delay>
}
 80002ca:	bf00      	nop
 80002cc:	bd80      	pop	{r7, pc}
 80002ce:	bf00      	nop
 80002d0:	40020000 	.word	0x40020000

080002d4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002d4:	480d      	ldr	r0, [pc, #52]	; (800030c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002d6:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002d8:	480d      	ldr	r0, [pc, #52]	; (8000310 <LoopForever+0x6>)
  ldr r1, =_edata
 80002da:	490e      	ldr	r1, [pc, #56]	; (8000314 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002dc:	4a0e      	ldr	r2, [pc, #56]	; (8000318 <LoopForever+0xe>)
  movs r3, #0
 80002de:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002e0:	e002      	b.n	80002e8 <LoopCopyDataInit>

080002e2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002e2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002e4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002e6:	3304      	adds	r3, #4

080002e8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002e8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002ea:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002ec:	d3f9      	bcc.n	80002e2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002ee:	4a0b      	ldr	r2, [pc, #44]	; (800031c <LoopForever+0x12>)
  ldr r4, =_ebss
 80002f0:	4c0b      	ldr	r4, [pc, #44]	; (8000320 <LoopForever+0x16>)
  movs r3, #0
 80002f2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002f4:	e001      	b.n	80002fa <LoopFillZerobss>

080002f6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002f6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002f8:	3204      	adds	r2, #4

080002fa <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002fa:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002fc:	d3fb      	bcc.n	80002f6 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 80002fe:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 8000302:	f000 fb99 	bl	8000a38 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000306:	f7ff ff91 	bl	800022c <main>

0800030a <LoopForever>:

LoopForever:
    b LoopForever
 800030a:	e7fe      	b.n	800030a <LoopForever>
  ldr   r0, =_estack
 800030c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000310:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000314:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000318:	08000ab0 	.word	0x08000ab0
  ldr r2, =_sbss
 800031c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000320:	2000001c 	.word	0x2000001c

08000324 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000324:	e7fe      	b.n	8000324 <ADC_IRQHandler>
	...

08000328 <GPIO_peri_clock_control>:
 * @return				- none
 *
 * @note				- none
 *
 */
void GPIO_peri_clock_control(GPIO_reg_def_t *pGPIOx, uint8_t en_or_di) {
 8000328:	b480      	push	{r7}
 800032a:	b083      	sub	sp, #12
 800032c:	af00      	add	r7, sp, #0
 800032e:	6078      	str	r0, [r7, #4]
 8000330:	460b      	mov	r3, r1
 8000332:	70fb      	strb	r3, [r7, #3]
	if (en_or_di == ENABLE) {
 8000334:	78fb      	ldrb	r3, [r7, #3]
 8000336:	2b01      	cmp	r3, #1
 8000338:	d157      	bne.n	80003ea <GPIO_peri_clock_control+0xc2>
		if (pGPIOx == GPIOA) {
 800033a:	687b      	ldr	r3, [r7, #4]
 800033c:	4a59      	ldr	r2, [pc, #356]	; (80004a4 <GPIO_peri_clock_control+0x17c>)
 800033e:	4293      	cmp	r3, r2
 8000340:	d106      	bne.n	8000350 <GPIO_peri_clock_control+0x28>
			GPIOA_PCLK_EN();
 8000342:	4b59      	ldr	r3, [pc, #356]	; (80004a8 <GPIO_peri_clock_control+0x180>)
 8000344:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000346:	4a58      	ldr	r2, [pc, #352]	; (80004a8 <GPIO_peri_clock_control+0x180>)
 8000348:	f043 0301 	orr.w	r3, r3, #1
 800034c:	6313      	str	r3, [r2, #48]	; 0x30
			GPIOG_PCLK_DI();
		} else if (pGPIOx == GPIOH) {
			GPIOH_PCLK_DI();
		}
	}
}
 800034e:	e0a3      	b.n	8000498 <GPIO_peri_clock_control+0x170>
		} else if (pGPIOx == GPIOB) {
 8000350:	687b      	ldr	r3, [r7, #4]
 8000352:	4a56      	ldr	r2, [pc, #344]	; (80004ac <GPIO_peri_clock_control+0x184>)
 8000354:	4293      	cmp	r3, r2
 8000356:	d106      	bne.n	8000366 <GPIO_peri_clock_control+0x3e>
			GPIOB_PCLK_EN();
 8000358:	4b53      	ldr	r3, [pc, #332]	; (80004a8 <GPIO_peri_clock_control+0x180>)
 800035a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800035c:	4a52      	ldr	r2, [pc, #328]	; (80004a8 <GPIO_peri_clock_control+0x180>)
 800035e:	f043 0302 	orr.w	r3, r3, #2
 8000362:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000364:	e098      	b.n	8000498 <GPIO_peri_clock_control+0x170>
		} else if (pGPIOx == GPIOC) {
 8000366:	687b      	ldr	r3, [r7, #4]
 8000368:	4a51      	ldr	r2, [pc, #324]	; (80004b0 <GPIO_peri_clock_control+0x188>)
 800036a:	4293      	cmp	r3, r2
 800036c:	d106      	bne.n	800037c <GPIO_peri_clock_control+0x54>
			GPIOC_PCLK_EN();
 800036e:	4b4e      	ldr	r3, [pc, #312]	; (80004a8 <GPIO_peri_clock_control+0x180>)
 8000370:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000372:	4a4d      	ldr	r2, [pc, #308]	; (80004a8 <GPIO_peri_clock_control+0x180>)
 8000374:	f043 0304 	orr.w	r3, r3, #4
 8000378:	6313      	str	r3, [r2, #48]	; 0x30
}
 800037a:	e08d      	b.n	8000498 <GPIO_peri_clock_control+0x170>
		} else if (pGPIOx == GPIOD) {
 800037c:	687b      	ldr	r3, [r7, #4]
 800037e:	4a4d      	ldr	r2, [pc, #308]	; (80004b4 <GPIO_peri_clock_control+0x18c>)
 8000380:	4293      	cmp	r3, r2
 8000382:	d106      	bne.n	8000392 <GPIO_peri_clock_control+0x6a>
			GPIOD_PCLK_EN();
 8000384:	4b48      	ldr	r3, [pc, #288]	; (80004a8 <GPIO_peri_clock_control+0x180>)
 8000386:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000388:	4a47      	ldr	r2, [pc, #284]	; (80004a8 <GPIO_peri_clock_control+0x180>)
 800038a:	f043 0308 	orr.w	r3, r3, #8
 800038e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000390:	e082      	b.n	8000498 <GPIO_peri_clock_control+0x170>
		} else if (pGPIOx == GPIOE) {
 8000392:	687b      	ldr	r3, [r7, #4]
 8000394:	4a48      	ldr	r2, [pc, #288]	; (80004b8 <GPIO_peri_clock_control+0x190>)
 8000396:	4293      	cmp	r3, r2
 8000398:	d106      	bne.n	80003a8 <GPIO_peri_clock_control+0x80>
			GPIOE_PCLK_EN();
 800039a:	4b43      	ldr	r3, [pc, #268]	; (80004a8 <GPIO_peri_clock_control+0x180>)
 800039c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800039e:	4a42      	ldr	r2, [pc, #264]	; (80004a8 <GPIO_peri_clock_control+0x180>)
 80003a0:	f043 0310 	orr.w	r3, r3, #16
 80003a4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003a6:	e077      	b.n	8000498 <GPIO_peri_clock_control+0x170>
		} else if (pGPIOx == GPIOF) {
 80003a8:	687b      	ldr	r3, [r7, #4]
 80003aa:	4a44      	ldr	r2, [pc, #272]	; (80004bc <GPIO_peri_clock_control+0x194>)
 80003ac:	4293      	cmp	r3, r2
 80003ae:	d106      	bne.n	80003be <GPIO_peri_clock_control+0x96>
			GPIOF_PCLK_EN();
 80003b0:	4b3d      	ldr	r3, [pc, #244]	; (80004a8 <GPIO_peri_clock_control+0x180>)
 80003b2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003b4:	4a3c      	ldr	r2, [pc, #240]	; (80004a8 <GPIO_peri_clock_control+0x180>)
 80003b6:	f043 0320 	orr.w	r3, r3, #32
 80003ba:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003bc:	e06c      	b.n	8000498 <GPIO_peri_clock_control+0x170>
		} else if (pGPIOx == GPIOG) {
 80003be:	687b      	ldr	r3, [r7, #4]
 80003c0:	4a3f      	ldr	r2, [pc, #252]	; (80004c0 <GPIO_peri_clock_control+0x198>)
 80003c2:	4293      	cmp	r3, r2
 80003c4:	d106      	bne.n	80003d4 <GPIO_peri_clock_control+0xac>
			GPIOG_PCLK_EN();
 80003c6:	4b38      	ldr	r3, [pc, #224]	; (80004a8 <GPIO_peri_clock_control+0x180>)
 80003c8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003ca:	4a37      	ldr	r2, [pc, #220]	; (80004a8 <GPIO_peri_clock_control+0x180>)
 80003cc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80003d0:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003d2:	e061      	b.n	8000498 <GPIO_peri_clock_control+0x170>
		} else if (pGPIOx == GPIOH) {
 80003d4:	687b      	ldr	r3, [r7, #4]
 80003d6:	4a3b      	ldr	r2, [pc, #236]	; (80004c4 <GPIO_peri_clock_control+0x19c>)
 80003d8:	4293      	cmp	r3, r2
 80003da:	d15d      	bne.n	8000498 <GPIO_peri_clock_control+0x170>
			GPIOH_PCLK_EN();
 80003dc:	4b32      	ldr	r3, [pc, #200]	; (80004a8 <GPIO_peri_clock_control+0x180>)
 80003de:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003e0:	4a31      	ldr	r2, [pc, #196]	; (80004a8 <GPIO_peri_clock_control+0x180>)
 80003e2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80003e6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003e8:	e056      	b.n	8000498 <GPIO_peri_clock_control+0x170>
		if (pGPIOx == GPIOA) {
 80003ea:	687b      	ldr	r3, [r7, #4]
 80003ec:	4a2d      	ldr	r2, [pc, #180]	; (80004a4 <GPIO_peri_clock_control+0x17c>)
 80003ee:	4293      	cmp	r3, r2
 80003f0:	d106      	bne.n	8000400 <GPIO_peri_clock_control+0xd8>
			GPIOA_PCLK_DI();
 80003f2:	4b2d      	ldr	r3, [pc, #180]	; (80004a8 <GPIO_peri_clock_control+0x180>)
 80003f4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003f6:	4a2c      	ldr	r2, [pc, #176]	; (80004a8 <GPIO_peri_clock_control+0x180>)
 80003f8:	f023 0301 	bic.w	r3, r3, #1
 80003fc:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003fe:	e04b      	b.n	8000498 <GPIO_peri_clock_control+0x170>
		} else if (pGPIOx == GPIOB) {
 8000400:	687b      	ldr	r3, [r7, #4]
 8000402:	4a2a      	ldr	r2, [pc, #168]	; (80004ac <GPIO_peri_clock_control+0x184>)
 8000404:	4293      	cmp	r3, r2
 8000406:	d106      	bne.n	8000416 <GPIO_peri_clock_control+0xee>
			GPIOB_PCLK_DI();
 8000408:	4b27      	ldr	r3, [pc, #156]	; (80004a8 <GPIO_peri_clock_control+0x180>)
 800040a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800040c:	4a26      	ldr	r2, [pc, #152]	; (80004a8 <GPIO_peri_clock_control+0x180>)
 800040e:	f023 0302 	bic.w	r3, r3, #2
 8000412:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000414:	e040      	b.n	8000498 <GPIO_peri_clock_control+0x170>
		} else if (pGPIOx == GPIOC) {
 8000416:	687b      	ldr	r3, [r7, #4]
 8000418:	4a25      	ldr	r2, [pc, #148]	; (80004b0 <GPIO_peri_clock_control+0x188>)
 800041a:	4293      	cmp	r3, r2
 800041c:	d106      	bne.n	800042c <GPIO_peri_clock_control+0x104>
			GPIOC_PCLK_DI();
 800041e:	4b22      	ldr	r3, [pc, #136]	; (80004a8 <GPIO_peri_clock_control+0x180>)
 8000420:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000422:	4a21      	ldr	r2, [pc, #132]	; (80004a8 <GPIO_peri_clock_control+0x180>)
 8000424:	f023 0304 	bic.w	r3, r3, #4
 8000428:	6313      	str	r3, [r2, #48]	; 0x30
}
 800042a:	e035      	b.n	8000498 <GPIO_peri_clock_control+0x170>
		} else if (pGPIOx == GPIOD) {
 800042c:	687b      	ldr	r3, [r7, #4]
 800042e:	4a21      	ldr	r2, [pc, #132]	; (80004b4 <GPIO_peri_clock_control+0x18c>)
 8000430:	4293      	cmp	r3, r2
 8000432:	d106      	bne.n	8000442 <GPIO_peri_clock_control+0x11a>
			GPIOD_PCLK_DI();
 8000434:	4b1c      	ldr	r3, [pc, #112]	; (80004a8 <GPIO_peri_clock_control+0x180>)
 8000436:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000438:	4a1b      	ldr	r2, [pc, #108]	; (80004a8 <GPIO_peri_clock_control+0x180>)
 800043a:	f023 0308 	bic.w	r3, r3, #8
 800043e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000440:	e02a      	b.n	8000498 <GPIO_peri_clock_control+0x170>
		} else if (pGPIOx == GPIOE) {
 8000442:	687b      	ldr	r3, [r7, #4]
 8000444:	4a1c      	ldr	r2, [pc, #112]	; (80004b8 <GPIO_peri_clock_control+0x190>)
 8000446:	4293      	cmp	r3, r2
 8000448:	d106      	bne.n	8000458 <GPIO_peri_clock_control+0x130>
			GPIOE_PCLK_DI();
 800044a:	4b17      	ldr	r3, [pc, #92]	; (80004a8 <GPIO_peri_clock_control+0x180>)
 800044c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800044e:	4a16      	ldr	r2, [pc, #88]	; (80004a8 <GPIO_peri_clock_control+0x180>)
 8000450:	f023 0310 	bic.w	r3, r3, #16
 8000454:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000456:	e01f      	b.n	8000498 <GPIO_peri_clock_control+0x170>
		} else if (pGPIOx == GPIOF) {
 8000458:	687b      	ldr	r3, [r7, #4]
 800045a:	4a18      	ldr	r2, [pc, #96]	; (80004bc <GPIO_peri_clock_control+0x194>)
 800045c:	4293      	cmp	r3, r2
 800045e:	d106      	bne.n	800046e <GPIO_peri_clock_control+0x146>
			GPIOF_PCLK_DI();
 8000460:	4b11      	ldr	r3, [pc, #68]	; (80004a8 <GPIO_peri_clock_control+0x180>)
 8000462:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000464:	4a10      	ldr	r2, [pc, #64]	; (80004a8 <GPIO_peri_clock_control+0x180>)
 8000466:	f023 0320 	bic.w	r3, r3, #32
 800046a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800046c:	e014      	b.n	8000498 <GPIO_peri_clock_control+0x170>
		} else if (pGPIOx == GPIOG) {
 800046e:	687b      	ldr	r3, [r7, #4]
 8000470:	4a13      	ldr	r2, [pc, #76]	; (80004c0 <GPIO_peri_clock_control+0x198>)
 8000472:	4293      	cmp	r3, r2
 8000474:	d106      	bne.n	8000484 <GPIO_peri_clock_control+0x15c>
			GPIOG_PCLK_DI();
 8000476:	4b0c      	ldr	r3, [pc, #48]	; (80004a8 <GPIO_peri_clock_control+0x180>)
 8000478:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800047a:	4a0b      	ldr	r2, [pc, #44]	; (80004a8 <GPIO_peri_clock_control+0x180>)
 800047c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000480:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000482:	e009      	b.n	8000498 <GPIO_peri_clock_control+0x170>
		} else if (pGPIOx == GPIOH) {
 8000484:	687b      	ldr	r3, [r7, #4]
 8000486:	4a0f      	ldr	r2, [pc, #60]	; (80004c4 <GPIO_peri_clock_control+0x19c>)
 8000488:	4293      	cmp	r3, r2
 800048a:	d105      	bne.n	8000498 <GPIO_peri_clock_control+0x170>
			GPIOH_PCLK_DI();
 800048c:	4b06      	ldr	r3, [pc, #24]	; (80004a8 <GPIO_peri_clock_control+0x180>)
 800048e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000490:	4a05      	ldr	r2, [pc, #20]	; (80004a8 <GPIO_peri_clock_control+0x180>)
 8000492:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000496:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000498:	bf00      	nop
 800049a:	370c      	adds	r7, #12
 800049c:	46bd      	mov	sp, r7
 800049e:	bc80      	pop	{r7}
 80004a0:	4770      	bx	lr
 80004a2:	bf00      	nop
 80004a4:	40020000 	.word	0x40020000
 80004a8:	40023800 	.word	0x40023800
 80004ac:	40020400 	.word	0x40020400
 80004b0:	40020800 	.word	0x40020800
 80004b4:	40020c00 	.word	0x40020c00
 80004b8:	40021000 	.word	0x40021000
 80004bc:	40021400 	.word	0x40021400
 80004c0:	40021800 	.word	0x40021800
 80004c4:	40021c00 	.word	0x40021c00

080004c8 <GPIO_init>:
 * @return				- none
 *
 * @note				- none
 *
 */
void GPIO_init(GPIO_handle_t *pGPIO_handle) {
 80004c8:	b480      	push	{r7}
 80004ca:	b087      	sub	sp, #28
 80004cc:	af00      	add	r7, sp, #0
 80004ce:	6078      	str	r0, [r7, #4]
	uint32_t reset = 0;
 80004d0:	2300      	movs	r3, #0
 80004d2:	617b      	str	r3, [r7, #20]
	uint32_t set = 0;
 80004d4:	2300      	movs	r3, #0
 80004d6:	613b      	str	r3, [r7, #16]

	//configure the mode of GPIO pin
	if(pGPIO_handle->GPIO_pin_config.GPIO_pin_mode <= GPIO_MODE_ANALOG){
 80004d8:	687b      	ldr	r3, [r7, #4]
 80004da:	795b      	ldrb	r3, [r3, #5]
 80004dc:	2b03      	cmp	r3, #3
 80004de:	d825      	bhi.n	800052c <GPIO_init+0x64>
		//the non interrupt mode
		reset = (11 << (2 * pGPIO_handle->GPIO_pin_config.GPIO_pin_num));
 80004e0:	687b      	ldr	r3, [r7, #4]
 80004e2:	791b      	ldrb	r3, [r3, #4]
 80004e4:	005b      	lsls	r3, r3, #1
 80004e6:	220b      	movs	r2, #11
 80004e8:	fa02 f303 	lsl.w	r3, r2, r3
 80004ec:	617b      	str	r3, [r7, #20]
		pGPIO_handle->pGPIOx->MODER &= ~(reset);
 80004ee:	687b      	ldr	r3, [r7, #4]
 80004f0:	681b      	ldr	r3, [r3, #0]
 80004f2:	6819      	ldr	r1, [r3, #0]
 80004f4:	697b      	ldr	r3, [r7, #20]
 80004f6:	43da      	mvns	r2, r3
 80004f8:	687b      	ldr	r3, [r7, #4]
 80004fa:	681b      	ldr	r3, [r3, #0]
 80004fc:	400a      	ands	r2, r1
 80004fe:	601a      	str	r2, [r3, #0]
		reset = 0;
 8000500:	2300      	movs	r3, #0
 8000502:	617b      	str	r3, [r7, #20]

		set = (pGPIO_handle->GPIO_pin_config.GPIO_pin_mode << (2 * pGPIO_handle->GPIO_pin_config.GPIO_pin_num));
 8000504:	687b      	ldr	r3, [r7, #4]
 8000506:	795b      	ldrb	r3, [r3, #5]
 8000508:	461a      	mov	r2, r3
 800050a:	687b      	ldr	r3, [r7, #4]
 800050c:	791b      	ldrb	r3, [r3, #4]
 800050e:	005b      	lsls	r3, r3, #1
 8000510:	fa02 f303 	lsl.w	r3, r2, r3
 8000514:	613b      	str	r3, [r7, #16]
		pGPIO_handle->pGPIOx->MODER |= set;
 8000516:	687b      	ldr	r3, [r7, #4]
 8000518:	681b      	ldr	r3, [r3, #0]
 800051a:	6819      	ldr	r1, [r3, #0]
 800051c:	687b      	ldr	r3, [r7, #4]
 800051e:	681b      	ldr	r3, [r3, #0]
 8000520:	693a      	ldr	r2, [r7, #16]
 8000522:	430a      	orrs	r2, r1
 8000524:	601a      	str	r2, [r3, #0]
		set = 0;
 8000526:	2300      	movs	r3, #0
 8000528:	613b      	str	r3, [r7, #16]
 800052a:	e0ca      	b.n	80006c2 <GPIO_init+0x1fa>
	}else{
		//interrupt mode
		if(pGPIO_handle->GPIO_pin_config.GPIO_pin_mode == GPIO_MODE_IT_FT){
 800052c:	687b      	ldr	r3, [r7, #4]
 800052e:	795b      	ldrb	r3, [r3, #5]
 8000530:	2b04      	cmp	r3, #4
 8000532:	d117      	bne.n	8000564 <GPIO_init+0x9c>
			//Configure the FTSR
			EXTI->FTSR |= (1 << pGPIO_handle->GPIO_pin_config.GPIO_pin_num);
 8000534:	4b48      	ldr	r3, [pc, #288]	; (8000658 <GPIO_init+0x190>)
 8000536:	68db      	ldr	r3, [r3, #12]
 8000538:	687a      	ldr	r2, [r7, #4]
 800053a:	7912      	ldrb	r2, [r2, #4]
 800053c:	4611      	mov	r1, r2
 800053e:	2201      	movs	r2, #1
 8000540:	408a      	lsls	r2, r1
 8000542:	4611      	mov	r1, r2
 8000544:	4a44      	ldr	r2, [pc, #272]	; (8000658 <GPIO_init+0x190>)
 8000546:	430b      	orrs	r3, r1
 8000548:	60d3      	str	r3, [r2, #12]
			//Clear RTSR
			EXTI->RTSR &= ~(1 << pGPIO_handle->GPIO_pin_config.GPIO_pin_num);
 800054a:	4b43      	ldr	r3, [pc, #268]	; (8000658 <GPIO_init+0x190>)
 800054c:	689b      	ldr	r3, [r3, #8]
 800054e:	687a      	ldr	r2, [r7, #4]
 8000550:	7912      	ldrb	r2, [r2, #4]
 8000552:	4611      	mov	r1, r2
 8000554:	2201      	movs	r2, #1
 8000556:	408a      	lsls	r2, r1
 8000558:	43d2      	mvns	r2, r2
 800055a:	4611      	mov	r1, r2
 800055c:	4a3e      	ldr	r2, [pc, #248]	; (8000658 <GPIO_init+0x190>)
 800055e:	400b      	ands	r3, r1
 8000560:	6093      	str	r3, [r2, #8]
 8000562:	e035      	b.n	80005d0 <GPIO_init+0x108>
		} else if(pGPIO_handle->GPIO_pin_config.GPIO_pin_mode == GPIO_MODE_IT_RT){
 8000564:	687b      	ldr	r3, [r7, #4]
 8000566:	795b      	ldrb	r3, [r3, #5]
 8000568:	2b05      	cmp	r3, #5
 800056a:	d117      	bne.n	800059c <GPIO_init+0xd4>
			//Configure the RTSR
			EXTI->RTSR |= (1 << pGPIO_handle->GPIO_pin_config.GPIO_pin_num);
 800056c:	4b3a      	ldr	r3, [pc, #232]	; (8000658 <GPIO_init+0x190>)
 800056e:	689b      	ldr	r3, [r3, #8]
 8000570:	687a      	ldr	r2, [r7, #4]
 8000572:	7912      	ldrb	r2, [r2, #4]
 8000574:	4611      	mov	r1, r2
 8000576:	2201      	movs	r2, #1
 8000578:	408a      	lsls	r2, r1
 800057a:	4611      	mov	r1, r2
 800057c:	4a36      	ldr	r2, [pc, #216]	; (8000658 <GPIO_init+0x190>)
 800057e:	430b      	orrs	r3, r1
 8000580:	6093      	str	r3, [r2, #8]
			//Clear FTSR
			EXTI->FTSR &= ~(1 << pGPIO_handle->GPIO_pin_config.GPIO_pin_num);
 8000582:	4b35      	ldr	r3, [pc, #212]	; (8000658 <GPIO_init+0x190>)
 8000584:	68db      	ldr	r3, [r3, #12]
 8000586:	687a      	ldr	r2, [r7, #4]
 8000588:	7912      	ldrb	r2, [r2, #4]
 800058a:	4611      	mov	r1, r2
 800058c:	2201      	movs	r2, #1
 800058e:	408a      	lsls	r2, r1
 8000590:	43d2      	mvns	r2, r2
 8000592:	4611      	mov	r1, r2
 8000594:	4a30      	ldr	r2, [pc, #192]	; (8000658 <GPIO_init+0x190>)
 8000596:	400b      	ands	r3, r1
 8000598:	60d3      	str	r3, [r2, #12]
 800059a:	e019      	b.n	80005d0 <GPIO_init+0x108>
		} else if(pGPIO_handle->GPIO_pin_config.GPIO_pin_mode == GPIO_MODE_IT_RFT){
 800059c:	687b      	ldr	r3, [r7, #4]
 800059e:	795b      	ldrb	r3, [r3, #5]
 80005a0:	2b06      	cmp	r3, #6
 80005a2:	d115      	bne.n	80005d0 <GPIO_init+0x108>
			//Configure both the FTSR and RTSR
			EXTI->FTSR |= (1 << pGPIO_handle->GPIO_pin_config.GPIO_pin_num);
 80005a4:	4b2c      	ldr	r3, [pc, #176]	; (8000658 <GPIO_init+0x190>)
 80005a6:	68db      	ldr	r3, [r3, #12]
 80005a8:	687a      	ldr	r2, [r7, #4]
 80005aa:	7912      	ldrb	r2, [r2, #4]
 80005ac:	4611      	mov	r1, r2
 80005ae:	2201      	movs	r2, #1
 80005b0:	408a      	lsls	r2, r1
 80005b2:	4611      	mov	r1, r2
 80005b4:	4a28      	ldr	r2, [pc, #160]	; (8000658 <GPIO_init+0x190>)
 80005b6:	430b      	orrs	r3, r1
 80005b8:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR |= (1 << pGPIO_handle->GPIO_pin_config.GPIO_pin_num);
 80005ba:	4b27      	ldr	r3, [pc, #156]	; (8000658 <GPIO_init+0x190>)
 80005bc:	689b      	ldr	r3, [r3, #8]
 80005be:	687a      	ldr	r2, [r7, #4]
 80005c0:	7912      	ldrb	r2, [r2, #4]
 80005c2:	4611      	mov	r1, r2
 80005c4:	2201      	movs	r2, #1
 80005c6:	408a      	lsls	r2, r1
 80005c8:	4611      	mov	r1, r2
 80005ca:	4a23      	ldr	r2, [pc, #140]	; (8000658 <GPIO_init+0x190>)
 80005cc:	430b      	orrs	r3, r1
 80005ce:	6093      	str	r3, [r2, #8]
		}

		//Configure GPIO port selection in SYSCFG_EXTICR
		uint8_t EXTI_register = (pGPIO_handle->GPIO_pin_config.GPIO_pin_num / 4);
 80005d0:	687b      	ldr	r3, [r7, #4]
 80005d2:	791b      	ldrb	r3, [r3, #4]
 80005d4:	089b      	lsrs	r3, r3, #2
 80005d6:	73fb      	strb	r3, [r7, #15]
		uint8_t EXTI_pin_position = ((pGPIO_handle->GPIO_pin_config.GPIO_pin_num % 4) * 4);
 80005d8:	687b      	ldr	r3, [r7, #4]
 80005da:	791b      	ldrb	r3, [r3, #4]
 80005dc:	f003 0303 	and.w	r3, r3, #3
 80005e0:	b2db      	uxtb	r3, r3
 80005e2:	009b      	lsls	r3, r3, #2
 80005e4:	73bb      	strb	r3, [r7, #14]
		uint8_t portcode = GPIO_EXTI_CODE(pGPIO_handle->pGPIOx);
 80005e6:	687b      	ldr	r3, [r7, #4]
 80005e8:	681b      	ldr	r3, [r3, #0]
 80005ea:	4a1c      	ldr	r2, [pc, #112]	; (800065c <GPIO_init+0x194>)
 80005ec:	4293      	cmp	r3, r2
 80005ee:	d045      	beq.n	800067c <GPIO_init+0x1b4>
 80005f0:	687b      	ldr	r3, [r7, #4]
 80005f2:	681b      	ldr	r3, [r3, #0]
 80005f4:	4a1a      	ldr	r2, [pc, #104]	; (8000660 <GPIO_init+0x198>)
 80005f6:	4293      	cmp	r3, r2
 80005f8:	d02b      	beq.n	8000652 <GPIO_init+0x18a>
 80005fa:	687b      	ldr	r3, [r7, #4]
 80005fc:	681b      	ldr	r3, [r3, #0]
 80005fe:	4a19      	ldr	r2, [pc, #100]	; (8000664 <GPIO_init+0x19c>)
 8000600:	4293      	cmp	r3, r2
 8000602:	d024      	beq.n	800064e <GPIO_init+0x186>
 8000604:	687b      	ldr	r3, [r7, #4]
 8000606:	681b      	ldr	r3, [r3, #0]
 8000608:	4a17      	ldr	r2, [pc, #92]	; (8000668 <GPIO_init+0x1a0>)
 800060a:	4293      	cmp	r3, r2
 800060c:	d01d      	beq.n	800064a <GPIO_init+0x182>
 800060e:	687b      	ldr	r3, [r7, #4]
 8000610:	681b      	ldr	r3, [r3, #0]
 8000612:	4a16      	ldr	r2, [pc, #88]	; (800066c <GPIO_init+0x1a4>)
 8000614:	4293      	cmp	r3, r2
 8000616:	d016      	beq.n	8000646 <GPIO_init+0x17e>
 8000618:	687b      	ldr	r3, [r7, #4]
 800061a:	681b      	ldr	r3, [r3, #0]
 800061c:	4a14      	ldr	r2, [pc, #80]	; (8000670 <GPIO_init+0x1a8>)
 800061e:	4293      	cmp	r3, r2
 8000620:	d00f      	beq.n	8000642 <GPIO_init+0x17a>
 8000622:	687b      	ldr	r3, [r7, #4]
 8000624:	681b      	ldr	r3, [r3, #0]
 8000626:	4a13      	ldr	r2, [pc, #76]	; (8000674 <GPIO_init+0x1ac>)
 8000628:	4293      	cmp	r3, r2
 800062a:	d008      	beq.n	800063e <GPIO_init+0x176>
 800062c:	687b      	ldr	r3, [r7, #4]
 800062e:	681b      	ldr	r3, [r3, #0]
 8000630:	4a11      	ldr	r2, [pc, #68]	; (8000678 <GPIO_init+0x1b0>)
 8000632:	4293      	cmp	r3, r2
 8000634:	d101      	bne.n	800063a <GPIO_init+0x172>
 8000636:	2307      	movs	r3, #7
 8000638:	e021      	b.n	800067e <GPIO_init+0x1b6>
 800063a:	2300      	movs	r3, #0
 800063c:	e01f      	b.n	800067e <GPIO_init+0x1b6>
 800063e:	2306      	movs	r3, #6
 8000640:	e01d      	b.n	800067e <GPIO_init+0x1b6>
 8000642:	2305      	movs	r3, #5
 8000644:	e01b      	b.n	800067e <GPIO_init+0x1b6>
 8000646:	2304      	movs	r3, #4
 8000648:	e019      	b.n	800067e <GPIO_init+0x1b6>
 800064a:	2303      	movs	r3, #3
 800064c:	e017      	b.n	800067e <GPIO_init+0x1b6>
 800064e:	2302      	movs	r3, #2
 8000650:	e015      	b.n	800067e <GPIO_init+0x1b6>
 8000652:	2301      	movs	r3, #1
 8000654:	e013      	b.n	800067e <GPIO_init+0x1b6>
 8000656:	bf00      	nop
 8000658:	40013c00 	.word	0x40013c00
 800065c:	40020000 	.word	0x40020000
 8000660:	40020400 	.word	0x40020400
 8000664:	40020800 	.word	0x40020800
 8000668:	40020c00 	.word	0x40020c00
 800066c:	40021000 	.word	0x40021000
 8000670:	40021400 	.word	0x40021400
 8000674:	40021800 	.word	0x40021800
 8000678:	40021c00 	.word	0x40021c00
 800067c:	2300      	movs	r3, #0
 800067e:	737b      	strb	r3, [r7, #13]
		SYSCFG_PCLK_EN();
 8000680:	4b77      	ldr	r3, [pc, #476]	; (8000860 <GPIO_init+0x398>)
 8000682:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000684:	4a76      	ldr	r2, [pc, #472]	; (8000860 <GPIO_init+0x398>)
 8000686:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800068a:	6453      	str	r3, [r2, #68]	; 0x44
		SYSCFG->EXTICR[EXTI_register] |= (portcode << EXTI_pin_position);
 800068c:	4a75      	ldr	r2, [pc, #468]	; (8000864 <GPIO_init+0x39c>)
 800068e:	7bfb      	ldrb	r3, [r7, #15]
 8000690:	3302      	adds	r3, #2
 8000692:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8000696:	7b79      	ldrb	r1, [r7, #13]
 8000698:	7bbb      	ldrb	r3, [r7, #14]
 800069a:	fa01 f303 	lsl.w	r3, r1, r3
 800069e:	4618      	mov	r0, r3
 80006a0:	4970      	ldr	r1, [pc, #448]	; (8000864 <GPIO_init+0x39c>)
 80006a2:	7bfb      	ldrb	r3, [r7, #15]
 80006a4:	4302      	orrs	r2, r0
 80006a6:	3302      	adds	r3, #2
 80006a8:	f841 2023 	str.w	r2, [r1, r3, lsl #2]


		//Enable the EXTI interrupt delivery using IMR
		EXTI->IMR |= (1 << pGPIO_handle->GPIO_pin_config.GPIO_pin_num);
 80006ac:	4b6e      	ldr	r3, [pc, #440]	; (8000868 <GPIO_init+0x3a0>)
 80006ae:	681b      	ldr	r3, [r3, #0]
 80006b0:	687a      	ldr	r2, [r7, #4]
 80006b2:	7912      	ldrb	r2, [r2, #4]
 80006b4:	4611      	mov	r1, r2
 80006b6:	2201      	movs	r2, #1
 80006b8:	408a      	lsls	r2, r1
 80006ba:	4611      	mov	r1, r2
 80006bc:	4a6a      	ldr	r2, [pc, #424]	; (8000868 <GPIO_init+0x3a0>)
 80006be:	430b      	orrs	r3, r1
 80006c0:	6013      	str	r3, [r2, #0]
	}

	//configure the speed of GPIO pin
	reset = (11 << (2 * pGPIO_handle->GPIO_pin_config.GPIO_pin_num));
 80006c2:	687b      	ldr	r3, [r7, #4]
 80006c4:	791b      	ldrb	r3, [r3, #4]
 80006c6:	005b      	lsls	r3, r3, #1
 80006c8:	220b      	movs	r2, #11
 80006ca:	fa02 f303 	lsl.w	r3, r2, r3
 80006ce:	617b      	str	r3, [r7, #20]
	pGPIO_handle->pGPIOx->OSPEEDR &= ~(reset);
 80006d0:	687b      	ldr	r3, [r7, #4]
 80006d2:	681b      	ldr	r3, [r3, #0]
 80006d4:	6899      	ldr	r1, [r3, #8]
 80006d6:	697b      	ldr	r3, [r7, #20]
 80006d8:	43da      	mvns	r2, r3
 80006da:	687b      	ldr	r3, [r7, #4]
 80006dc:	681b      	ldr	r3, [r3, #0]
 80006de:	400a      	ands	r2, r1
 80006e0:	609a      	str	r2, [r3, #8]
	reset = 0;
 80006e2:	2300      	movs	r3, #0
 80006e4:	617b      	str	r3, [r7, #20]

	set = (pGPIO_handle->GPIO_pin_config.GPIO_pin_speed << (2 * pGPIO_handle->GPIO_pin_config.GPIO_pin_num));
 80006e6:	687b      	ldr	r3, [r7, #4]
 80006e8:	799b      	ldrb	r3, [r3, #6]
 80006ea:	461a      	mov	r2, r3
 80006ec:	687b      	ldr	r3, [r7, #4]
 80006ee:	791b      	ldrb	r3, [r3, #4]
 80006f0:	005b      	lsls	r3, r3, #1
 80006f2:	fa02 f303 	lsl.w	r3, r2, r3
 80006f6:	613b      	str	r3, [r7, #16]
	pGPIO_handle->pGPIOx->OSPEEDR |= set;
 80006f8:	687b      	ldr	r3, [r7, #4]
 80006fa:	681b      	ldr	r3, [r3, #0]
 80006fc:	6899      	ldr	r1, [r3, #8]
 80006fe:	687b      	ldr	r3, [r7, #4]
 8000700:	681b      	ldr	r3, [r3, #0]
 8000702:	693a      	ldr	r2, [r7, #16]
 8000704:	430a      	orrs	r2, r1
 8000706:	609a      	str	r2, [r3, #8]
	set = 0;
 8000708:	2300      	movs	r3, #0
 800070a:	613b      	str	r3, [r7, #16]


	//configure the pull up and pull down resistor of GPIO pin
	reset = (11 << (2 * pGPIO_handle->GPIO_pin_config.GPIO_pin_num));
 800070c:	687b      	ldr	r3, [r7, #4]
 800070e:	791b      	ldrb	r3, [r3, #4]
 8000710:	005b      	lsls	r3, r3, #1
 8000712:	220b      	movs	r2, #11
 8000714:	fa02 f303 	lsl.w	r3, r2, r3
 8000718:	617b      	str	r3, [r7, #20]
	pGPIO_handle->pGPIOx->PUPDR &= ~(reset);
 800071a:	687b      	ldr	r3, [r7, #4]
 800071c:	681b      	ldr	r3, [r3, #0]
 800071e:	68d9      	ldr	r1, [r3, #12]
 8000720:	697b      	ldr	r3, [r7, #20]
 8000722:	43da      	mvns	r2, r3
 8000724:	687b      	ldr	r3, [r7, #4]
 8000726:	681b      	ldr	r3, [r3, #0]
 8000728:	400a      	ands	r2, r1
 800072a:	60da      	str	r2, [r3, #12]
	reset = 0;
 800072c:	2300      	movs	r3, #0
 800072e:	617b      	str	r3, [r7, #20]

	set = (pGPIO_handle->GPIO_pin_config.GPIO_pin_pu_pd << (2 * pGPIO_handle->GPIO_pin_config.GPIO_pin_num));
 8000730:	687b      	ldr	r3, [r7, #4]
 8000732:	79db      	ldrb	r3, [r3, #7]
 8000734:	461a      	mov	r2, r3
 8000736:	687b      	ldr	r3, [r7, #4]
 8000738:	791b      	ldrb	r3, [r3, #4]
 800073a:	005b      	lsls	r3, r3, #1
 800073c:	fa02 f303 	lsl.w	r3, r2, r3
 8000740:	613b      	str	r3, [r7, #16]
	pGPIO_handle->pGPIOx->PUPDR |= set;
 8000742:	687b      	ldr	r3, [r7, #4]
 8000744:	681b      	ldr	r3, [r3, #0]
 8000746:	68d9      	ldr	r1, [r3, #12]
 8000748:	687b      	ldr	r3, [r7, #4]
 800074a:	681b      	ldr	r3, [r3, #0]
 800074c:	693a      	ldr	r2, [r7, #16]
 800074e:	430a      	orrs	r2, r1
 8000750:	60da      	str	r2, [r3, #12]
	set = 0;
 8000752:	2300      	movs	r3, #0
 8000754:	613b      	str	r3, [r7, #16]


	//configure the output type register of GPIO pin
	if(pGPIO_handle->GPIO_pin_config.GPIO_pin_mode == GPIO_MODE_OUT){
 8000756:	687b      	ldr	r3, [r7, #4]
 8000758:	795b      	ldrb	r3, [r3, #5]
 800075a:	2b01      	cmp	r3, #1
 800075c:	d123      	bne.n	80007a6 <GPIO_init+0x2de>
		reset = (11 << (2 * pGPIO_handle->GPIO_pin_config.GPIO_pin_num));
 800075e:	687b      	ldr	r3, [r7, #4]
 8000760:	791b      	ldrb	r3, [r3, #4]
 8000762:	005b      	lsls	r3, r3, #1
 8000764:	220b      	movs	r2, #11
 8000766:	fa02 f303 	lsl.w	r3, r2, r3
 800076a:	617b      	str	r3, [r7, #20]
		pGPIO_handle->pGPIOx->OTYPER &= ~(reset);
 800076c:	687b      	ldr	r3, [r7, #4]
 800076e:	681b      	ldr	r3, [r3, #0]
 8000770:	6859      	ldr	r1, [r3, #4]
 8000772:	697b      	ldr	r3, [r7, #20]
 8000774:	43da      	mvns	r2, r3
 8000776:	687b      	ldr	r3, [r7, #4]
 8000778:	681b      	ldr	r3, [r3, #0]
 800077a:	400a      	ands	r2, r1
 800077c:	605a      	str	r2, [r3, #4]
		reset = 0;
 800077e:	2300      	movs	r3, #0
 8000780:	617b      	str	r3, [r7, #20]

		set = (pGPIO_handle->GPIO_pin_config.GPIO_pin_op_type << pGPIO_handle->GPIO_pin_config.GPIO_pin_num);
 8000782:	687b      	ldr	r3, [r7, #4]
 8000784:	7a1b      	ldrb	r3, [r3, #8]
 8000786:	461a      	mov	r2, r3
 8000788:	687b      	ldr	r3, [r7, #4]
 800078a:	791b      	ldrb	r3, [r3, #4]
 800078c:	fa02 f303 	lsl.w	r3, r2, r3
 8000790:	613b      	str	r3, [r7, #16]
		pGPIO_handle->pGPIOx->OTYPER |= set;
 8000792:	687b      	ldr	r3, [r7, #4]
 8000794:	681b      	ldr	r3, [r3, #0]
 8000796:	6859      	ldr	r1, [r3, #4]
 8000798:	687b      	ldr	r3, [r7, #4]
 800079a:	681b      	ldr	r3, [r3, #0]
 800079c:	693a      	ldr	r2, [r7, #16]
 800079e:	430a      	orrs	r2, r1
 80007a0:	605a      	str	r2, [r3, #4]
		set = 0;
 80007a2:	2300      	movs	r3, #0
 80007a4:	613b      	str	r3, [r7, #16]
	}

	//configure the alternative functionality register of GPIO pin
	if(pGPIO_handle->GPIO_pin_config.GPIO_pin_mode == GPIO_MODE_ALTFN){
 80007a6:	687b      	ldr	r3, [r7, #4]
 80007a8:	795b      	ldrb	r3, [r3, #5]
 80007aa:	2b02      	cmp	r3, #2
 80007ac:	d152      	bne.n	8000854 <GPIO_init+0x38c>
		if(pGPIO_handle->GPIO_pin_config.GPIO_pin_num <= 7){
 80007ae:	687b      	ldr	r3, [r7, #4]
 80007b0:	791b      	ldrb	r3, [r3, #4]
 80007b2:	2b07      	cmp	r3, #7
 80007b4:	d826      	bhi.n	8000804 <GPIO_init+0x33c>
			reset = (1111 << (4 * pGPIO_handle->GPIO_pin_config.GPIO_pin_num));
 80007b6:	687b      	ldr	r3, [r7, #4]
 80007b8:	791b      	ldrb	r3, [r3, #4]
 80007ba:	009b      	lsls	r3, r3, #2
 80007bc:	f240 4257 	movw	r2, #1111	; 0x457
 80007c0:	fa02 f303 	lsl.w	r3, r2, r3
 80007c4:	617b      	str	r3, [r7, #20]
			pGPIO_handle->pGPIOx->AFRLOW &= ~(reset);
 80007c6:	687b      	ldr	r3, [r7, #4]
 80007c8:	681b      	ldr	r3, [r3, #0]
 80007ca:	6a19      	ldr	r1, [r3, #32]
 80007cc:	697b      	ldr	r3, [r7, #20]
 80007ce:	43da      	mvns	r2, r3
 80007d0:	687b      	ldr	r3, [r7, #4]
 80007d2:	681b      	ldr	r3, [r3, #0]
 80007d4:	400a      	ands	r2, r1
 80007d6:	621a      	str	r2, [r3, #32]
			reset = 0;
 80007d8:	2300      	movs	r3, #0
 80007da:	617b      	str	r3, [r7, #20]

			set = (pGPIO_handle->GPIO_pin_config.GPIO_pin_alt_fun_mode << (4 * pGPIO_handle->GPIO_pin_config.GPIO_pin_num));
 80007dc:	687b      	ldr	r3, [r7, #4]
 80007de:	7a5b      	ldrb	r3, [r3, #9]
 80007e0:	461a      	mov	r2, r3
 80007e2:	687b      	ldr	r3, [r7, #4]
 80007e4:	791b      	ldrb	r3, [r3, #4]
 80007e6:	009b      	lsls	r3, r3, #2
 80007e8:	fa02 f303 	lsl.w	r3, r2, r3
 80007ec:	613b      	str	r3, [r7, #16]
			pGPIO_handle->pGPIOx->AFRLOW |= set;
 80007ee:	687b      	ldr	r3, [r7, #4]
 80007f0:	681b      	ldr	r3, [r3, #0]
 80007f2:	6a19      	ldr	r1, [r3, #32]
 80007f4:	687b      	ldr	r3, [r7, #4]
 80007f6:	681b      	ldr	r3, [r3, #0]
 80007f8:	693a      	ldr	r2, [r7, #16]
 80007fa:	430a      	orrs	r2, r1
 80007fc:	621a      	str	r2, [r3, #32]
			set = 0;
 80007fe:	2300      	movs	r3, #0
 8000800:	613b      	str	r3, [r7, #16]
			set = (pGPIO_handle->GPIO_pin_config.GPIO_pin_alt_fun_mode << (4 * (pGPIO_handle->GPIO_pin_config.GPIO_pin_num % 8)));
			pGPIO_handle->pGPIOx->AFRHIGH |= set;
			set = 0;
		}
	}
}
 8000802:	e027      	b.n	8000854 <GPIO_init+0x38c>
			reset = (1111 << (4 * pGPIO_handle->GPIO_pin_config.GPIO_pin_num));
 8000804:	687b      	ldr	r3, [r7, #4]
 8000806:	791b      	ldrb	r3, [r3, #4]
 8000808:	009b      	lsls	r3, r3, #2
 800080a:	f240 4257 	movw	r2, #1111	; 0x457
 800080e:	fa02 f303 	lsl.w	r3, r2, r3
 8000812:	617b      	str	r3, [r7, #20]
			pGPIO_handle->pGPIOx->AFRHIGH &= ~(reset);
 8000814:	687b      	ldr	r3, [r7, #4]
 8000816:	681b      	ldr	r3, [r3, #0]
 8000818:	6a59      	ldr	r1, [r3, #36]	; 0x24
 800081a:	697b      	ldr	r3, [r7, #20]
 800081c:	43da      	mvns	r2, r3
 800081e:	687b      	ldr	r3, [r7, #4]
 8000820:	681b      	ldr	r3, [r3, #0]
 8000822:	400a      	ands	r2, r1
 8000824:	625a      	str	r2, [r3, #36]	; 0x24
			reset = 0;
 8000826:	2300      	movs	r3, #0
 8000828:	617b      	str	r3, [r7, #20]
			set = (pGPIO_handle->GPIO_pin_config.GPIO_pin_alt_fun_mode << (4 * (pGPIO_handle->GPIO_pin_config.GPIO_pin_num % 8)));
 800082a:	687b      	ldr	r3, [r7, #4]
 800082c:	7a5b      	ldrb	r3, [r3, #9]
 800082e:	461a      	mov	r2, r3
 8000830:	687b      	ldr	r3, [r7, #4]
 8000832:	791b      	ldrb	r3, [r3, #4]
 8000834:	f003 0307 	and.w	r3, r3, #7
 8000838:	009b      	lsls	r3, r3, #2
 800083a:	fa02 f303 	lsl.w	r3, r2, r3
 800083e:	613b      	str	r3, [r7, #16]
			pGPIO_handle->pGPIOx->AFRHIGH |= set;
 8000840:	687b      	ldr	r3, [r7, #4]
 8000842:	681b      	ldr	r3, [r3, #0]
 8000844:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8000846:	687b      	ldr	r3, [r7, #4]
 8000848:	681b      	ldr	r3, [r3, #0]
 800084a:	693a      	ldr	r2, [r7, #16]
 800084c:	430a      	orrs	r2, r1
 800084e:	625a      	str	r2, [r3, #36]	; 0x24
			set = 0;
 8000850:	2300      	movs	r3, #0
 8000852:	613b      	str	r3, [r7, #16]
}
 8000854:	bf00      	nop
 8000856:	371c      	adds	r7, #28
 8000858:	46bd      	mov	sp, r7
 800085a:	bc80      	pop	{r7}
 800085c:	4770      	bx	lr
 800085e:	bf00      	nop
 8000860:	40023800 	.word	0x40023800
 8000864:	40013800 	.word	0x40013800
 8000868:	40013c00 	.word	0x40013c00

0800086c <GPIO_toggle_output_pin>:
 * @return				- none
 *
 * @note				- none
 *
 */
void GPIO_toggle_output_pin(GPIO_reg_def_t *pGPIOx, uint8_t pin_number) {
 800086c:	b480      	push	{r7}
 800086e:	b083      	sub	sp, #12
 8000870:	af00      	add	r7, sp, #0
 8000872:	6078      	str	r0, [r7, #4]
 8000874:	460b      	mov	r3, r1
 8000876:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1 << pin_number);
 8000878:	687b      	ldr	r3, [r7, #4]
 800087a:	695b      	ldr	r3, [r3, #20]
 800087c:	78fa      	ldrb	r2, [r7, #3]
 800087e:	2101      	movs	r1, #1
 8000880:	fa01 f202 	lsl.w	r2, r1, r2
 8000884:	405a      	eors	r2, r3
 8000886:	687b      	ldr	r3, [r7, #4]
 8000888:	615a      	str	r2, [r3, #20]
}
 800088a:	bf00      	nop
 800088c:	370c      	adds	r7, #12
 800088e:	46bd      	mov	sp, r7
 8000890:	bc80      	pop	{r7}
 8000892:	4770      	bx	lr

08000894 <GPIO_IRQ_interrupt_config>:
 * @return				- none
 *
 * @note				- none
 *
 */
void GPIO_IRQ_interrupt_config(uint8_t IRQ_number, uint8_t en_or_di) {
 8000894:	b480      	push	{r7}
 8000896:	b083      	sub	sp, #12
 8000898:	af00      	add	r7, sp, #0
 800089a:	4603      	mov	r3, r0
 800089c:	460a      	mov	r2, r1
 800089e:	71fb      	strb	r3, [r7, #7]
 80008a0:	4613      	mov	r3, r2
 80008a2:	71bb      	strb	r3, [r7, #6]
	if(en_or_di == ENABLE){//configure ISER
 80008a4:	79bb      	ldrb	r3, [r7, #6]
 80008a6:	2b01      	cmp	r3, #1
 80008a8:	d135      	bne.n	8000916 <GPIO_IRQ_interrupt_config+0x82>
		if(IRQ_number < 32){
 80008aa:	79fb      	ldrb	r3, [r7, #7]
 80008ac:	2b1f      	cmp	r3, #31
 80008ae:	d80c      	bhi.n	80008ca <GPIO_IRQ_interrupt_config+0x36>
			*NVIC_ISER0 |= (1 << (IRQ_number % 32));
 80008b0:	4b36      	ldr	r3, [pc, #216]	; (800098c <GPIO_IRQ_interrupt_config+0xf8>)
 80008b2:	681b      	ldr	r3, [r3, #0]
 80008b4:	79fa      	ldrb	r2, [r7, #7]
 80008b6:	f002 021f 	and.w	r2, r2, #31
 80008ba:	2101      	movs	r1, #1
 80008bc:	fa01 f202 	lsl.w	r2, r1, r2
 80008c0:	4611      	mov	r1, r2
 80008c2:	4a32      	ldr	r2, [pc, #200]	; (800098c <GPIO_IRQ_interrupt_config+0xf8>)
 80008c4:	430b      	orrs	r3, r1
 80008c6:	6013      	str	r3, [r2, #0]
			*NVIC_ICER1 |= (1 << (IRQ_number % 32));
		} else if(IRQ_number >=64 && IRQ_number < 96){
			*NVIC_ICER2 |= (1 << (IRQ_number % 32));
		}
	}
}
 80008c8:	e05b      	b.n	8000982 <GPIO_IRQ_interrupt_config+0xee>
		} else if(IRQ_number >= 32 && IRQ_number < 64){
 80008ca:	79fb      	ldrb	r3, [r7, #7]
 80008cc:	2b1f      	cmp	r3, #31
 80008ce:	d90f      	bls.n	80008f0 <GPIO_IRQ_interrupt_config+0x5c>
 80008d0:	79fb      	ldrb	r3, [r7, #7]
 80008d2:	2b3f      	cmp	r3, #63	; 0x3f
 80008d4:	d80c      	bhi.n	80008f0 <GPIO_IRQ_interrupt_config+0x5c>
			*NVIC_ISER1 |= (1 << (IRQ_number % 32));
 80008d6:	4b2e      	ldr	r3, [pc, #184]	; (8000990 <GPIO_IRQ_interrupt_config+0xfc>)
 80008d8:	681b      	ldr	r3, [r3, #0]
 80008da:	79fa      	ldrb	r2, [r7, #7]
 80008dc:	f002 021f 	and.w	r2, r2, #31
 80008e0:	2101      	movs	r1, #1
 80008e2:	fa01 f202 	lsl.w	r2, r1, r2
 80008e6:	4611      	mov	r1, r2
 80008e8:	4a29      	ldr	r2, [pc, #164]	; (8000990 <GPIO_IRQ_interrupt_config+0xfc>)
 80008ea:	430b      	orrs	r3, r1
 80008ec:	6013      	str	r3, [r2, #0]
 80008ee:	e048      	b.n	8000982 <GPIO_IRQ_interrupt_config+0xee>
		} else if(IRQ_number >=64 && IRQ_number < 96){
 80008f0:	79fb      	ldrb	r3, [r7, #7]
 80008f2:	2b3f      	cmp	r3, #63	; 0x3f
 80008f4:	d945      	bls.n	8000982 <GPIO_IRQ_interrupt_config+0xee>
 80008f6:	79fb      	ldrb	r3, [r7, #7]
 80008f8:	2b5f      	cmp	r3, #95	; 0x5f
 80008fa:	d842      	bhi.n	8000982 <GPIO_IRQ_interrupt_config+0xee>
			*NVIC_ISER2 |= (1 << (IRQ_number % 32));
 80008fc:	4b25      	ldr	r3, [pc, #148]	; (8000994 <GPIO_IRQ_interrupt_config+0x100>)
 80008fe:	681b      	ldr	r3, [r3, #0]
 8000900:	79fa      	ldrb	r2, [r7, #7]
 8000902:	f002 021f 	and.w	r2, r2, #31
 8000906:	2101      	movs	r1, #1
 8000908:	fa01 f202 	lsl.w	r2, r1, r2
 800090c:	4611      	mov	r1, r2
 800090e:	4a21      	ldr	r2, [pc, #132]	; (8000994 <GPIO_IRQ_interrupt_config+0x100>)
 8000910:	430b      	orrs	r3, r1
 8000912:	6013      	str	r3, [r2, #0]
}
 8000914:	e035      	b.n	8000982 <GPIO_IRQ_interrupt_config+0xee>
		if(IRQ_number < 32){
 8000916:	79fb      	ldrb	r3, [r7, #7]
 8000918:	2b1f      	cmp	r3, #31
 800091a:	d80c      	bhi.n	8000936 <GPIO_IRQ_interrupt_config+0xa2>
			*NVIC_ICER0 |= (1 << (IRQ_number % 32));
 800091c:	4b1e      	ldr	r3, [pc, #120]	; (8000998 <GPIO_IRQ_interrupt_config+0x104>)
 800091e:	681b      	ldr	r3, [r3, #0]
 8000920:	79fa      	ldrb	r2, [r7, #7]
 8000922:	f002 021f 	and.w	r2, r2, #31
 8000926:	2101      	movs	r1, #1
 8000928:	fa01 f202 	lsl.w	r2, r1, r2
 800092c:	4611      	mov	r1, r2
 800092e:	4a1a      	ldr	r2, [pc, #104]	; (8000998 <GPIO_IRQ_interrupt_config+0x104>)
 8000930:	430b      	orrs	r3, r1
 8000932:	6013      	str	r3, [r2, #0]
}
 8000934:	e025      	b.n	8000982 <GPIO_IRQ_interrupt_config+0xee>
		} else if(IRQ_number >= 32 && IRQ_number < 64){
 8000936:	79fb      	ldrb	r3, [r7, #7]
 8000938:	2b1f      	cmp	r3, #31
 800093a:	d90f      	bls.n	800095c <GPIO_IRQ_interrupt_config+0xc8>
 800093c:	79fb      	ldrb	r3, [r7, #7]
 800093e:	2b3f      	cmp	r3, #63	; 0x3f
 8000940:	d80c      	bhi.n	800095c <GPIO_IRQ_interrupt_config+0xc8>
			*NVIC_ICER1 |= (1 << (IRQ_number % 32));
 8000942:	4b16      	ldr	r3, [pc, #88]	; (800099c <GPIO_IRQ_interrupt_config+0x108>)
 8000944:	681b      	ldr	r3, [r3, #0]
 8000946:	79fa      	ldrb	r2, [r7, #7]
 8000948:	f002 021f 	and.w	r2, r2, #31
 800094c:	2101      	movs	r1, #1
 800094e:	fa01 f202 	lsl.w	r2, r1, r2
 8000952:	4611      	mov	r1, r2
 8000954:	4a11      	ldr	r2, [pc, #68]	; (800099c <GPIO_IRQ_interrupt_config+0x108>)
 8000956:	430b      	orrs	r3, r1
 8000958:	6013      	str	r3, [r2, #0]
 800095a:	e012      	b.n	8000982 <GPIO_IRQ_interrupt_config+0xee>
		} else if(IRQ_number >=64 && IRQ_number < 96){
 800095c:	79fb      	ldrb	r3, [r7, #7]
 800095e:	2b3f      	cmp	r3, #63	; 0x3f
 8000960:	d90f      	bls.n	8000982 <GPIO_IRQ_interrupt_config+0xee>
 8000962:	79fb      	ldrb	r3, [r7, #7]
 8000964:	2b5f      	cmp	r3, #95	; 0x5f
 8000966:	d80c      	bhi.n	8000982 <GPIO_IRQ_interrupt_config+0xee>
			*NVIC_ICER2 |= (1 << (IRQ_number % 32));
 8000968:	4b0d      	ldr	r3, [pc, #52]	; (80009a0 <GPIO_IRQ_interrupt_config+0x10c>)
 800096a:	681b      	ldr	r3, [r3, #0]
 800096c:	79fa      	ldrb	r2, [r7, #7]
 800096e:	f002 021f 	and.w	r2, r2, #31
 8000972:	2101      	movs	r1, #1
 8000974:	fa01 f202 	lsl.w	r2, r1, r2
 8000978:	4611      	mov	r1, r2
 800097a:	4a09      	ldr	r2, [pc, #36]	; (80009a0 <GPIO_IRQ_interrupt_config+0x10c>)
 800097c:	430b      	orrs	r3, r1
 800097e:	6013      	str	r3, [r2, #0]
}
 8000980:	e7ff      	b.n	8000982 <GPIO_IRQ_interrupt_config+0xee>
 8000982:	bf00      	nop
 8000984:	370c      	adds	r7, #12
 8000986:	46bd      	mov	sp, r7
 8000988:	bc80      	pop	{r7}
 800098a:	4770      	bx	lr
 800098c:	e000e100 	.word	0xe000e100
 8000990:	e000e104 	.word	0xe000e104
 8000994:	e000e108 	.word	0xe000e108
 8000998:	e000e180 	.word	0xe000e180
 800099c:	e000e184 	.word	0xe000e184
 80009a0:	e000e188 	.word	0xe000e188

080009a4 <GPIO_IRQ_priority_config>:
 * @return				- none
 *
 * @note				- none
 *
 */
void GPIO_IRQ_priority_config(uint8_t IRQ_number, uint32_t IRQ_priority){
 80009a4:	b480      	push	{r7}
 80009a6:	b085      	sub	sp, #20
 80009a8:	af00      	add	r7, sp, #0
 80009aa:	4603      	mov	r3, r0
 80009ac:	6039      	str	r1, [r7, #0]
 80009ae:	71fb      	strb	r3, [r7, #7]
	uint8_t IPRx_register_offset = (IRQ_number/4);
 80009b0:	79fb      	ldrb	r3, [r7, #7]
 80009b2:	089b      	lsrs	r3, r3, #2
 80009b4:	73fb      	strb	r3, [r7, #15]
	uint8_t IPRx_position = (IRQ_number % 4) * 8;
 80009b6:	79fb      	ldrb	r3, [r7, #7]
 80009b8:	f003 0303 	and.w	r3, r3, #3
 80009bc:	b2db      	uxtb	r3, r3
 80009be:	00db      	lsls	r3, r3, #3
 80009c0:	73bb      	strb	r3, [r7, #14]

	uint8_t shift_amount = (IPRx_position) + (8 - NO_PR_BITS_IMPLEMENTED);
 80009c2:	7bbb      	ldrb	r3, [r7, #14]
 80009c4:	3304      	adds	r3, #4
 80009c6:	737b      	strb	r3, [r7, #13]
	*(NVIC_IPRO_BASSE_ADDR + IPRx_register_offset) |= (IRQ_priority << shift_amount);
 80009c8:	7bfb      	ldrb	r3, [r7, #15]
 80009ca:	009b      	lsls	r3, r3, #2
 80009cc:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 80009d0:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 80009d4:	6819      	ldr	r1, [r3, #0]
 80009d6:	7b7b      	ldrb	r3, [r7, #13]
 80009d8:	683a      	ldr	r2, [r7, #0]
 80009da:	409a      	lsls	r2, r3
 80009dc:	7bfb      	ldrb	r3, [r7, #15]
 80009de:	009b      	lsls	r3, r3, #2
 80009e0:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 80009e4:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 80009e8:	430a      	orrs	r2, r1
 80009ea:	601a      	str	r2, [r3, #0]
}
 80009ec:	bf00      	nop
 80009ee:	3714      	adds	r7, #20
 80009f0:	46bd      	mov	sp, r7
 80009f2:	bc80      	pop	{r7}
 80009f4:	4770      	bx	lr
	...

080009f8 <GPIO_IRQ_handling>:
 * @return				- none
 *
 * @note				- none
 *
 */
void GPIO_IRQ_handling(uint8_t pin_number) {
 80009f8:	b480      	push	{r7}
 80009fa:	b083      	sub	sp, #12
 80009fc:	af00      	add	r7, sp, #0
 80009fe:	4603      	mov	r3, r0
 8000a00:	71fb      	strb	r3, [r7, #7]
	//clear the EXTI pr register corresponding to the pin number
	if(EXTI->PR & (1 << pin_number)){
 8000a02:	4b0c      	ldr	r3, [pc, #48]	; (8000a34 <GPIO_IRQ_handling+0x3c>)
 8000a04:	695b      	ldr	r3, [r3, #20]
 8000a06:	79fa      	ldrb	r2, [r7, #7]
 8000a08:	2101      	movs	r1, #1
 8000a0a:	fa01 f202 	lsl.w	r2, r1, r2
 8000a0e:	4013      	ands	r3, r2
 8000a10:	2b00      	cmp	r3, #0
 8000a12:	d009      	beq.n	8000a28 <GPIO_IRQ_handling+0x30>
		EXTI->PR |= (1 << pin_number);
 8000a14:	4b07      	ldr	r3, [pc, #28]	; (8000a34 <GPIO_IRQ_handling+0x3c>)
 8000a16:	695b      	ldr	r3, [r3, #20]
 8000a18:	79fa      	ldrb	r2, [r7, #7]
 8000a1a:	2101      	movs	r1, #1
 8000a1c:	fa01 f202 	lsl.w	r2, r1, r2
 8000a20:	4611      	mov	r1, r2
 8000a22:	4a04      	ldr	r2, [pc, #16]	; (8000a34 <GPIO_IRQ_handling+0x3c>)
 8000a24:	430b      	orrs	r3, r1
 8000a26:	6153      	str	r3, [r2, #20]
	}
}
 8000a28:	bf00      	nop
 8000a2a:	370c      	adds	r7, #12
 8000a2c:	46bd      	mov	sp, r7
 8000a2e:	bc80      	pop	{r7}
 8000a30:	4770      	bx	lr
 8000a32:	bf00      	nop
 8000a34:	40013c00 	.word	0x40013c00

08000a38 <__libc_init_array>:
 8000a38:	b570      	push	{r4, r5, r6, lr}
 8000a3a:	4e0d      	ldr	r6, [pc, #52]	; (8000a70 <__libc_init_array+0x38>)
 8000a3c:	4c0d      	ldr	r4, [pc, #52]	; (8000a74 <__libc_init_array+0x3c>)
 8000a3e:	1ba4      	subs	r4, r4, r6
 8000a40:	10a4      	asrs	r4, r4, #2
 8000a42:	2500      	movs	r5, #0
 8000a44:	42a5      	cmp	r5, r4
 8000a46:	d109      	bne.n	8000a5c <__libc_init_array+0x24>
 8000a48:	4e0b      	ldr	r6, [pc, #44]	; (8000a78 <__libc_init_array+0x40>)
 8000a4a:	4c0c      	ldr	r4, [pc, #48]	; (8000a7c <__libc_init_array+0x44>)
 8000a4c:	f000 f820 	bl	8000a90 <_init>
 8000a50:	1ba4      	subs	r4, r4, r6
 8000a52:	10a4      	asrs	r4, r4, #2
 8000a54:	2500      	movs	r5, #0
 8000a56:	42a5      	cmp	r5, r4
 8000a58:	d105      	bne.n	8000a66 <__libc_init_array+0x2e>
 8000a5a:	bd70      	pop	{r4, r5, r6, pc}
 8000a5c:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000a60:	4798      	blx	r3
 8000a62:	3501      	adds	r5, #1
 8000a64:	e7ee      	b.n	8000a44 <__libc_init_array+0xc>
 8000a66:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000a6a:	4798      	blx	r3
 8000a6c:	3501      	adds	r5, #1
 8000a6e:	e7f2      	b.n	8000a56 <__libc_init_array+0x1e>
 8000a70:	08000aa8 	.word	0x08000aa8
 8000a74:	08000aa8 	.word	0x08000aa8
 8000a78:	08000aa8 	.word	0x08000aa8
 8000a7c:	08000aac 	.word	0x08000aac

08000a80 <memset>:
 8000a80:	4402      	add	r2, r0
 8000a82:	4603      	mov	r3, r0
 8000a84:	4293      	cmp	r3, r2
 8000a86:	d100      	bne.n	8000a8a <memset+0xa>
 8000a88:	4770      	bx	lr
 8000a8a:	f803 1b01 	strb.w	r1, [r3], #1
 8000a8e:	e7f9      	b.n	8000a84 <memset+0x4>

08000a90 <_init>:
 8000a90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a92:	bf00      	nop
 8000a94:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000a96:	bc08      	pop	{r3}
 8000a98:	469e      	mov	lr, r3
 8000a9a:	4770      	bx	lr

08000a9c <_fini>:
 8000a9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a9e:	bf00      	nop
 8000aa0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000aa2:	bc08      	pop	{r3}
 8000aa4:	469e      	mov	lr, r3
 8000aa6:	4770      	bx	lr

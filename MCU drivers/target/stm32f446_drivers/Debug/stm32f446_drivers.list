
stm32f446_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000058c  080001c4  080001c4  000101c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000750  08000758  00010758  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000750  08000750  00010758  2**0
                  CONTENTS
  4 .ARM          00000000  08000750  08000750  00010758  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000750  08000758  00010758  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000750  08000750  00010750  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000754  08000754  00010754  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010758  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000758  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000758  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00010758  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000080d  00000000  00000000  00010782  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000001fb  00000000  00000000  00010f8f  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 000000b8  00000000  00000000  00011190  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000090  00000000  00000000  00011248  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  000015c7  00000000  00000000  000112d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   000009f7  00000000  00000000  0001289f  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    000051ca  00000000  00000000  00013296  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  00018460  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000224  00000000  00000000  000184dc  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	; (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	08000738 	.word	0x08000738

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	; (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	; (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	; (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	08000738 	.word	0x08000738

08000204 <delay>:
 *      Author: robert
 */

#include "stm32f446re.h"

void delay(void){
 8000204:	b480      	push	{r7}
 8000206:	b083      	sub	sp, #12
 8000208:	af00      	add	r7, sp, #0
	for(uint32_t i = 0; i < 500000; i++){
 800020a:	2300      	movs	r3, #0
 800020c:	607b      	str	r3, [r7, #4]
 800020e:	e002      	b.n	8000216 <delay+0x12>
 8000210:	687b      	ldr	r3, [r7, #4]
 8000212:	3301      	adds	r3, #1
 8000214:	607b      	str	r3, [r7, #4]
 8000216:	687b      	ldr	r3, [r7, #4]
 8000218:	4a03      	ldr	r2, [pc, #12]	; (8000228 <delay+0x24>)
 800021a:	4293      	cmp	r3, r2
 800021c:	d9f8      	bls.n	8000210 <delay+0xc>

	}
}
 800021e:	bf00      	nop
 8000220:	370c      	adds	r7, #12
 8000222:	46bd      	mov	sp, r7
 8000224:	bc80      	pop	{r7}
 8000226:	4770      	bx	lr
 8000228:	0007a11f 	.word	0x0007a11f

0800022c <main>:

int main(void)
{
 800022c:	b580      	push	{r7, lr}
 800022e:	b086      	sub	sp, #24
 8000230:	af00      	add	r7, sp, #0
	GPIO_handle_t gpio_led;
	gpio_led.pGPIOx = GPIOA;
 8000232:	4b1a      	ldr	r3, [pc, #104]	; (800029c <main+0x70>)
 8000234:	60fb      	str	r3, [r7, #12]
	gpio_led.GPIO_pin_config.GPIO_pin_num = GPIO_PIN_NO_10;
 8000236:	230a      	movs	r3, #10
 8000238:	743b      	strb	r3, [r7, #16]
	gpio_led.GPIO_pin_config.GPIO_pin_mode = GPIO_MODE_OUT;
 800023a:	2301      	movs	r3, #1
 800023c:	747b      	strb	r3, [r7, #17]
	gpio_led.GPIO_pin_config.GPIO_pin_speed = GPIO_OP_SPEED_FAST;
 800023e:	2302      	movs	r3, #2
 8000240:	74bb      	strb	r3, [r7, #18]
	gpio_led.GPIO_pin_config.GPIO_pin_op_type = GPIO_OP_TYPE_PP;
 8000242:	2300      	movs	r3, #0
 8000244:	753b      	strb	r3, [r7, #20]
	gpio_led.GPIO_pin_config.GPIO_pin_pu_pd = GPIO_PIN_NO_PUPD;
 8000246:	2300      	movs	r3, #0
 8000248:	74fb      	strb	r3, [r7, #19]

	GPIO_handle_t gpio_button;
	gpio_button.pGPIOx = GPIOB;
 800024a:	4b15      	ldr	r3, [pc, #84]	; (80002a0 <main+0x74>)
 800024c:	603b      	str	r3, [r7, #0]
	gpio_button.GPIO_pin_config.GPIO_pin_num = GPIO_PIN_NO_12;
 800024e:	230c      	movs	r3, #12
 8000250:	713b      	strb	r3, [r7, #4]
	gpio_button.GPIO_pin_config.GPIO_pin_mode = GPIO_MODE_IN;
 8000252:	2300      	movs	r3, #0
 8000254:	717b      	strb	r3, [r7, #5]
	gpio_button.GPIO_pin_config.GPIO_pin_speed = GPIO_OP_SPEED_FAST;
 8000256:	2302      	movs	r3, #2
 8000258:	71bb      	strb	r3, [r7, #6]
	gpio_button.GPIO_pin_config.GPIO_pin_pu_pd = GPIO_PIN_PU;
 800025a:	2301      	movs	r3, #1
 800025c:	71fb      	strb	r3, [r7, #7]


	GPIO_peri_clock_control(GPIOA, ENABLE);
 800025e:	2101      	movs	r1, #1
 8000260:	480e      	ldr	r0, [pc, #56]	; (800029c <main+0x70>)
 8000262:	f000 f849 	bl	80002f8 <GPIO_peri_clock_control>
	GPIO_peri_clock_control(GPIOB, ENABLE);
 8000266:	2101      	movs	r1, #1
 8000268:	480d      	ldr	r0, [pc, #52]	; (80002a0 <main+0x74>)
 800026a:	f000 f845 	bl	80002f8 <GPIO_peri_clock_control>

	GPIO_init(&gpio_led);
 800026e:	f107 030c 	add.w	r3, r7, #12
 8000272:	4618      	mov	r0, r3
 8000274:	f000 f910 	bl	8000498 <GPIO_init>
	GPIO_init(&gpio_button);
 8000278:	463b      	mov	r3, r7
 800027a:	4618      	mov	r0, r3
 800027c:	f000 f90c 	bl	8000498 <GPIO_init>

	while(1){
		if(GPIO_read_input_pin(GPIOB, GPIO_PIN_NO_12) == LOW){
 8000280:	210c      	movs	r1, #12
 8000282:	4807      	ldr	r0, [pc, #28]	; (80002a0 <main+0x74>)
 8000284:	f000 fa0b 	bl	800069e <GPIO_read_input_pin>
 8000288:	4603      	mov	r3, r0
 800028a:	2b00      	cmp	r3, #0
 800028c:	d1f8      	bne.n	8000280 <main+0x54>
			delay();
 800028e:	f7ff ffb9 	bl	8000204 <delay>
			GPIO_toggle_output_pin(GPIOA, GPIO_PIN_NO_10);
 8000292:	210a      	movs	r1, #10
 8000294:	4801      	ldr	r0, [pc, #4]	; (800029c <main+0x70>)
 8000296:	f000 fa17 	bl	80006c8 <GPIO_toggle_output_pin>
		if(GPIO_read_input_pin(GPIOB, GPIO_PIN_NO_12) == LOW){
 800029a:	e7f1      	b.n	8000280 <main+0x54>
 800029c:	40020000 	.word	0x40020000
 80002a0:	40020400 	.word	0x40020400

080002a4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002a4:	480d      	ldr	r0, [pc, #52]	; (80002dc <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002a6:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002a8:	480d      	ldr	r0, [pc, #52]	; (80002e0 <LoopForever+0x6>)
  ldr r1, =_edata
 80002aa:	490e      	ldr	r1, [pc, #56]	; (80002e4 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002ac:	4a0e      	ldr	r2, [pc, #56]	; (80002e8 <LoopForever+0xe>)
  movs r3, #0
 80002ae:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002b0:	e002      	b.n	80002b8 <LoopCopyDataInit>

080002b2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002b2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002b4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002b6:	3304      	adds	r3, #4

080002b8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002b8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002ba:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002bc:	d3f9      	bcc.n	80002b2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002be:	4a0b      	ldr	r2, [pc, #44]	; (80002ec <LoopForever+0x12>)
  ldr r4, =_ebss
 80002c0:	4c0b      	ldr	r4, [pc, #44]	; (80002f0 <LoopForever+0x16>)
  movs r3, #0
 80002c2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002c4:	e001      	b.n	80002ca <LoopFillZerobss>

080002c6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002c6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002c8:	3204      	adds	r2, #4

080002ca <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002ca:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002cc:	d3fb      	bcc.n	80002c6 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 80002ce:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 80002d2:	f000 fa0d 	bl	80006f0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002d6:	f7ff ffa9 	bl	800022c <main>

080002da <LoopForever>:

LoopForever:
    b LoopForever
 80002da:	e7fe      	b.n	80002da <LoopForever>
  ldr   r0, =_estack
 80002dc:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002e0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002e4:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002e8:	08000758 	.word	0x08000758
  ldr r2, =_sbss
 80002ec:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002f0:	2000001c 	.word	0x2000001c

080002f4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002f4:	e7fe      	b.n	80002f4 <ADC_IRQHandler>
	...

080002f8 <GPIO_peri_clock_control>:
 * @return				- none
 *
 * @note				- none
 *
 */
void GPIO_peri_clock_control(GPIO_reg_def_t *pGPIOx, uint8_t en_or_di) {
 80002f8:	b480      	push	{r7}
 80002fa:	b083      	sub	sp, #12
 80002fc:	af00      	add	r7, sp, #0
 80002fe:	6078      	str	r0, [r7, #4]
 8000300:	460b      	mov	r3, r1
 8000302:	70fb      	strb	r3, [r7, #3]
	if (en_or_di == ENABLE) {
 8000304:	78fb      	ldrb	r3, [r7, #3]
 8000306:	2b01      	cmp	r3, #1
 8000308:	d157      	bne.n	80003ba <GPIO_peri_clock_control+0xc2>
		if (pGPIOx == GPIOA) {
 800030a:	687b      	ldr	r3, [r7, #4]
 800030c:	4a59      	ldr	r2, [pc, #356]	; (8000474 <GPIO_peri_clock_control+0x17c>)
 800030e:	4293      	cmp	r3, r2
 8000310:	d106      	bne.n	8000320 <GPIO_peri_clock_control+0x28>
			GPIOA_PCLK_EN();
 8000312:	4b59      	ldr	r3, [pc, #356]	; (8000478 <GPIO_peri_clock_control+0x180>)
 8000314:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000316:	4a58      	ldr	r2, [pc, #352]	; (8000478 <GPIO_peri_clock_control+0x180>)
 8000318:	f043 0301 	orr.w	r3, r3, #1
 800031c:	6313      	str	r3, [r2, #48]	; 0x30
			GPIOG_PCLK_DI();
		} else if (pGPIOx == GPIOH) {
			GPIOH_PCLK_DI();
		}
	}
}
 800031e:	e0a3      	b.n	8000468 <GPIO_peri_clock_control+0x170>
		} else if (pGPIOx == GPIOB) {
 8000320:	687b      	ldr	r3, [r7, #4]
 8000322:	4a56      	ldr	r2, [pc, #344]	; (800047c <GPIO_peri_clock_control+0x184>)
 8000324:	4293      	cmp	r3, r2
 8000326:	d106      	bne.n	8000336 <GPIO_peri_clock_control+0x3e>
			GPIOB_PCLK_EN();
 8000328:	4b53      	ldr	r3, [pc, #332]	; (8000478 <GPIO_peri_clock_control+0x180>)
 800032a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800032c:	4a52      	ldr	r2, [pc, #328]	; (8000478 <GPIO_peri_clock_control+0x180>)
 800032e:	f043 0302 	orr.w	r3, r3, #2
 8000332:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000334:	e098      	b.n	8000468 <GPIO_peri_clock_control+0x170>
		} else if (pGPIOx == GPIOC) {
 8000336:	687b      	ldr	r3, [r7, #4]
 8000338:	4a51      	ldr	r2, [pc, #324]	; (8000480 <GPIO_peri_clock_control+0x188>)
 800033a:	4293      	cmp	r3, r2
 800033c:	d106      	bne.n	800034c <GPIO_peri_clock_control+0x54>
			GPIOC_PCLK_EN();
 800033e:	4b4e      	ldr	r3, [pc, #312]	; (8000478 <GPIO_peri_clock_control+0x180>)
 8000340:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000342:	4a4d      	ldr	r2, [pc, #308]	; (8000478 <GPIO_peri_clock_control+0x180>)
 8000344:	f043 0304 	orr.w	r3, r3, #4
 8000348:	6313      	str	r3, [r2, #48]	; 0x30
}
 800034a:	e08d      	b.n	8000468 <GPIO_peri_clock_control+0x170>
		} else if (pGPIOx == GPIOD) {
 800034c:	687b      	ldr	r3, [r7, #4]
 800034e:	4a4d      	ldr	r2, [pc, #308]	; (8000484 <GPIO_peri_clock_control+0x18c>)
 8000350:	4293      	cmp	r3, r2
 8000352:	d106      	bne.n	8000362 <GPIO_peri_clock_control+0x6a>
			GPIOD_PCLK_EN();
 8000354:	4b48      	ldr	r3, [pc, #288]	; (8000478 <GPIO_peri_clock_control+0x180>)
 8000356:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000358:	4a47      	ldr	r2, [pc, #284]	; (8000478 <GPIO_peri_clock_control+0x180>)
 800035a:	f043 0308 	orr.w	r3, r3, #8
 800035e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000360:	e082      	b.n	8000468 <GPIO_peri_clock_control+0x170>
		} else if (pGPIOx == GPIOE) {
 8000362:	687b      	ldr	r3, [r7, #4]
 8000364:	4a48      	ldr	r2, [pc, #288]	; (8000488 <GPIO_peri_clock_control+0x190>)
 8000366:	4293      	cmp	r3, r2
 8000368:	d106      	bne.n	8000378 <GPIO_peri_clock_control+0x80>
			GPIOE_PCLK_EN();
 800036a:	4b43      	ldr	r3, [pc, #268]	; (8000478 <GPIO_peri_clock_control+0x180>)
 800036c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800036e:	4a42      	ldr	r2, [pc, #264]	; (8000478 <GPIO_peri_clock_control+0x180>)
 8000370:	f043 0310 	orr.w	r3, r3, #16
 8000374:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000376:	e077      	b.n	8000468 <GPIO_peri_clock_control+0x170>
		} else if (pGPIOx == GPIOF) {
 8000378:	687b      	ldr	r3, [r7, #4]
 800037a:	4a44      	ldr	r2, [pc, #272]	; (800048c <GPIO_peri_clock_control+0x194>)
 800037c:	4293      	cmp	r3, r2
 800037e:	d106      	bne.n	800038e <GPIO_peri_clock_control+0x96>
			GPIOF_PCLK_EN();
 8000380:	4b3d      	ldr	r3, [pc, #244]	; (8000478 <GPIO_peri_clock_control+0x180>)
 8000382:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000384:	4a3c      	ldr	r2, [pc, #240]	; (8000478 <GPIO_peri_clock_control+0x180>)
 8000386:	f043 0320 	orr.w	r3, r3, #32
 800038a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800038c:	e06c      	b.n	8000468 <GPIO_peri_clock_control+0x170>
		} else if (pGPIOx == GPIOG) {
 800038e:	687b      	ldr	r3, [r7, #4]
 8000390:	4a3f      	ldr	r2, [pc, #252]	; (8000490 <GPIO_peri_clock_control+0x198>)
 8000392:	4293      	cmp	r3, r2
 8000394:	d106      	bne.n	80003a4 <GPIO_peri_clock_control+0xac>
			GPIOG_PCLK_EN();
 8000396:	4b38      	ldr	r3, [pc, #224]	; (8000478 <GPIO_peri_clock_control+0x180>)
 8000398:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800039a:	4a37      	ldr	r2, [pc, #220]	; (8000478 <GPIO_peri_clock_control+0x180>)
 800039c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80003a0:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003a2:	e061      	b.n	8000468 <GPIO_peri_clock_control+0x170>
		} else if (pGPIOx == GPIOH) {
 80003a4:	687b      	ldr	r3, [r7, #4]
 80003a6:	4a3b      	ldr	r2, [pc, #236]	; (8000494 <GPIO_peri_clock_control+0x19c>)
 80003a8:	4293      	cmp	r3, r2
 80003aa:	d15d      	bne.n	8000468 <GPIO_peri_clock_control+0x170>
			GPIOH_PCLK_EN();
 80003ac:	4b32      	ldr	r3, [pc, #200]	; (8000478 <GPIO_peri_clock_control+0x180>)
 80003ae:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003b0:	4a31      	ldr	r2, [pc, #196]	; (8000478 <GPIO_peri_clock_control+0x180>)
 80003b2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80003b6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003b8:	e056      	b.n	8000468 <GPIO_peri_clock_control+0x170>
		if (pGPIOx == GPIOA) {
 80003ba:	687b      	ldr	r3, [r7, #4]
 80003bc:	4a2d      	ldr	r2, [pc, #180]	; (8000474 <GPIO_peri_clock_control+0x17c>)
 80003be:	4293      	cmp	r3, r2
 80003c0:	d106      	bne.n	80003d0 <GPIO_peri_clock_control+0xd8>
			GPIOA_PCLK_DI();
 80003c2:	4b2d      	ldr	r3, [pc, #180]	; (8000478 <GPIO_peri_clock_control+0x180>)
 80003c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003c6:	4a2c      	ldr	r2, [pc, #176]	; (8000478 <GPIO_peri_clock_control+0x180>)
 80003c8:	f023 0301 	bic.w	r3, r3, #1
 80003cc:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003ce:	e04b      	b.n	8000468 <GPIO_peri_clock_control+0x170>
		} else if (pGPIOx == GPIOB) {
 80003d0:	687b      	ldr	r3, [r7, #4]
 80003d2:	4a2a      	ldr	r2, [pc, #168]	; (800047c <GPIO_peri_clock_control+0x184>)
 80003d4:	4293      	cmp	r3, r2
 80003d6:	d106      	bne.n	80003e6 <GPIO_peri_clock_control+0xee>
			GPIOB_PCLK_DI();
 80003d8:	4b27      	ldr	r3, [pc, #156]	; (8000478 <GPIO_peri_clock_control+0x180>)
 80003da:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003dc:	4a26      	ldr	r2, [pc, #152]	; (8000478 <GPIO_peri_clock_control+0x180>)
 80003de:	f023 0302 	bic.w	r3, r3, #2
 80003e2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003e4:	e040      	b.n	8000468 <GPIO_peri_clock_control+0x170>
		} else if (pGPIOx == GPIOC) {
 80003e6:	687b      	ldr	r3, [r7, #4]
 80003e8:	4a25      	ldr	r2, [pc, #148]	; (8000480 <GPIO_peri_clock_control+0x188>)
 80003ea:	4293      	cmp	r3, r2
 80003ec:	d106      	bne.n	80003fc <GPIO_peri_clock_control+0x104>
			GPIOC_PCLK_DI();
 80003ee:	4b22      	ldr	r3, [pc, #136]	; (8000478 <GPIO_peri_clock_control+0x180>)
 80003f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003f2:	4a21      	ldr	r2, [pc, #132]	; (8000478 <GPIO_peri_clock_control+0x180>)
 80003f4:	f023 0304 	bic.w	r3, r3, #4
 80003f8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003fa:	e035      	b.n	8000468 <GPIO_peri_clock_control+0x170>
		} else if (pGPIOx == GPIOD) {
 80003fc:	687b      	ldr	r3, [r7, #4]
 80003fe:	4a21      	ldr	r2, [pc, #132]	; (8000484 <GPIO_peri_clock_control+0x18c>)
 8000400:	4293      	cmp	r3, r2
 8000402:	d106      	bne.n	8000412 <GPIO_peri_clock_control+0x11a>
			GPIOD_PCLK_DI();
 8000404:	4b1c      	ldr	r3, [pc, #112]	; (8000478 <GPIO_peri_clock_control+0x180>)
 8000406:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000408:	4a1b      	ldr	r2, [pc, #108]	; (8000478 <GPIO_peri_clock_control+0x180>)
 800040a:	f023 0308 	bic.w	r3, r3, #8
 800040e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000410:	e02a      	b.n	8000468 <GPIO_peri_clock_control+0x170>
		} else if (pGPIOx == GPIOE) {
 8000412:	687b      	ldr	r3, [r7, #4]
 8000414:	4a1c      	ldr	r2, [pc, #112]	; (8000488 <GPIO_peri_clock_control+0x190>)
 8000416:	4293      	cmp	r3, r2
 8000418:	d106      	bne.n	8000428 <GPIO_peri_clock_control+0x130>
			GPIOE_PCLK_DI();
 800041a:	4b17      	ldr	r3, [pc, #92]	; (8000478 <GPIO_peri_clock_control+0x180>)
 800041c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800041e:	4a16      	ldr	r2, [pc, #88]	; (8000478 <GPIO_peri_clock_control+0x180>)
 8000420:	f023 0310 	bic.w	r3, r3, #16
 8000424:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000426:	e01f      	b.n	8000468 <GPIO_peri_clock_control+0x170>
		} else if (pGPIOx == GPIOF) {
 8000428:	687b      	ldr	r3, [r7, #4]
 800042a:	4a18      	ldr	r2, [pc, #96]	; (800048c <GPIO_peri_clock_control+0x194>)
 800042c:	4293      	cmp	r3, r2
 800042e:	d106      	bne.n	800043e <GPIO_peri_clock_control+0x146>
			GPIOF_PCLK_DI();
 8000430:	4b11      	ldr	r3, [pc, #68]	; (8000478 <GPIO_peri_clock_control+0x180>)
 8000432:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000434:	4a10      	ldr	r2, [pc, #64]	; (8000478 <GPIO_peri_clock_control+0x180>)
 8000436:	f023 0320 	bic.w	r3, r3, #32
 800043a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800043c:	e014      	b.n	8000468 <GPIO_peri_clock_control+0x170>
		} else if (pGPIOx == GPIOG) {
 800043e:	687b      	ldr	r3, [r7, #4]
 8000440:	4a13      	ldr	r2, [pc, #76]	; (8000490 <GPIO_peri_clock_control+0x198>)
 8000442:	4293      	cmp	r3, r2
 8000444:	d106      	bne.n	8000454 <GPIO_peri_clock_control+0x15c>
			GPIOG_PCLK_DI();
 8000446:	4b0c      	ldr	r3, [pc, #48]	; (8000478 <GPIO_peri_clock_control+0x180>)
 8000448:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800044a:	4a0b      	ldr	r2, [pc, #44]	; (8000478 <GPIO_peri_clock_control+0x180>)
 800044c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000450:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000452:	e009      	b.n	8000468 <GPIO_peri_clock_control+0x170>
		} else if (pGPIOx == GPIOH) {
 8000454:	687b      	ldr	r3, [r7, #4]
 8000456:	4a0f      	ldr	r2, [pc, #60]	; (8000494 <GPIO_peri_clock_control+0x19c>)
 8000458:	4293      	cmp	r3, r2
 800045a:	d105      	bne.n	8000468 <GPIO_peri_clock_control+0x170>
			GPIOH_PCLK_DI();
 800045c:	4b06      	ldr	r3, [pc, #24]	; (8000478 <GPIO_peri_clock_control+0x180>)
 800045e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000460:	4a05      	ldr	r2, [pc, #20]	; (8000478 <GPIO_peri_clock_control+0x180>)
 8000462:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000466:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000468:	bf00      	nop
 800046a:	370c      	adds	r7, #12
 800046c:	46bd      	mov	sp, r7
 800046e:	bc80      	pop	{r7}
 8000470:	4770      	bx	lr
 8000472:	bf00      	nop
 8000474:	40020000 	.word	0x40020000
 8000478:	40023800 	.word	0x40023800
 800047c:	40020400 	.word	0x40020400
 8000480:	40020800 	.word	0x40020800
 8000484:	40020c00 	.word	0x40020c00
 8000488:	40021000 	.word	0x40021000
 800048c:	40021400 	.word	0x40021400
 8000490:	40021800 	.word	0x40021800
 8000494:	40021c00 	.word	0x40021c00

08000498 <GPIO_init>:
 * @return				- none
 *
 * @note				- none
 *
 */
void GPIO_init(GPIO_handle_t *pGPIO_handle) {
 8000498:	b480      	push	{r7}
 800049a:	b085      	sub	sp, #20
 800049c:	af00      	add	r7, sp, #0
 800049e:	6078      	str	r0, [r7, #4]
	uint32_t reset = 0;
 80004a0:	2300      	movs	r3, #0
 80004a2:	60fb      	str	r3, [r7, #12]
	uint32_t set = 0;
 80004a4:	2300      	movs	r3, #0
 80004a6:	60bb      	str	r3, [r7, #8]

	//configure the mode of GPIO pin
	if(pGPIO_handle->GPIO_pin_config.GPIO_pin_mode <= GPIO_MODE_ANALOG){
 80004a8:	687b      	ldr	r3, [r7, #4]
 80004aa:	795b      	ldrb	r3, [r3, #5]
 80004ac:	2b03      	cmp	r3, #3
 80004ae:	d825      	bhi.n	80004fc <GPIO_init+0x64>
		//the non interrupt mode
		reset = (11 << (2 * pGPIO_handle->GPIO_pin_config.GPIO_pin_num));
 80004b0:	687b      	ldr	r3, [r7, #4]
 80004b2:	791b      	ldrb	r3, [r3, #4]
 80004b4:	005b      	lsls	r3, r3, #1
 80004b6:	220b      	movs	r2, #11
 80004b8:	fa02 f303 	lsl.w	r3, r2, r3
 80004bc:	60fb      	str	r3, [r7, #12]
		pGPIO_handle->pGPIOx->MODER &= ~(reset);
 80004be:	687b      	ldr	r3, [r7, #4]
 80004c0:	681b      	ldr	r3, [r3, #0]
 80004c2:	6819      	ldr	r1, [r3, #0]
 80004c4:	68fb      	ldr	r3, [r7, #12]
 80004c6:	43da      	mvns	r2, r3
 80004c8:	687b      	ldr	r3, [r7, #4]
 80004ca:	681b      	ldr	r3, [r3, #0]
 80004cc:	400a      	ands	r2, r1
 80004ce:	601a      	str	r2, [r3, #0]
		reset = 0;
 80004d0:	2300      	movs	r3, #0
 80004d2:	60fb      	str	r3, [r7, #12]

		set = (pGPIO_handle->GPIO_pin_config.GPIO_pin_mode << (2 * pGPIO_handle->GPIO_pin_config.GPIO_pin_num));
 80004d4:	687b      	ldr	r3, [r7, #4]
 80004d6:	795b      	ldrb	r3, [r3, #5]
 80004d8:	461a      	mov	r2, r3
 80004da:	687b      	ldr	r3, [r7, #4]
 80004dc:	791b      	ldrb	r3, [r3, #4]
 80004de:	005b      	lsls	r3, r3, #1
 80004e0:	fa02 f303 	lsl.w	r3, r2, r3
 80004e4:	60bb      	str	r3, [r7, #8]
		pGPIO_handle->pGPIOx->MODER |= set;
 80004e6:	687b      	ldr	r3, [r7, #4]
 80004e8:	681b      	ldr	r3, [r3, #0]
 80004ea:	6819      	ldr	r1, [r3, #0]
 80004ec:	687b      	ldr	r3, [r7, #4]
 80004ee:	681b      	ldr	r3, [r3, #0]
 80004f0:	68ba      	ldr	r2, [r7, #8]
 80004f2:	430a      	orrs	r2, r1
 80004f4:	601a      	str	r2, [r3, #0]
		set = 0;
 80004f6:	2300      	movs	r3, #0
 80004f8:	60bb      	str	r3, [r7, #8]
 80004fa:	e006      	b.n	800050a <GPIO_init+0x72>
	}else{
		//interrupt mode
		if(pGPIO_handle->GPIO_pin_config.GPIO_pin_mode == GPIO_MODE_IT_FT){
 80004fc:	687b      	ldr	r3, [r7, #4]
 80004fe:	795b      	ldrb	r3, [r3, #5]
 8000500:	2b04      	cmp	r3, #4
 8000502:	d002      	beq.n	800050a <GPIO_init+0x72>
			//Configure the FTSR
		} else if(pGPIO_handle->GPIO_pin_config.GPIO_pin_mode == GPIO_MODE_IT_RT){
 8000504:	687b      	ldr	r3, [r7, #4]
 8000506:	795b      	ldrb	r3, [r3, #5]
 8000508:	2b05      	cmp	r3, #5

		//Enable the EXTI interrupt delivery using IMR
	}

	//configure the speed of GPIO pin
	reset = (11 << (2 * pGPIO_handle->GPIO_pin_config.GPIO_pin_num));
 800050a:	687b      	ldr	r3, [r7, #4]
 800050c:	791b      	ldrb	r3, [r3, #4]
 800050e:	005b      	lsls	r3, r3, #1
 8000510:	220b      	movs	r2, #11
 8000512:	fa02 f303 	lsl.w	r3, r2, r3
 8000516:	60fb      	str	r3, [r7, #12]
	pGPIO_handle->pGPIOx->OSPEEDR &= ~(reset);
 8000518:	687b      	ldr	r3, [r7, #4]
 800051a:	681b      	ldr	r3, [r3, #0]
 800051c:	6899      	ldr	r1, [r3, #8]
 800051e:	68fb      	ldr	r3, [r7, #12]
 8000520:	43da      	mvns	r2, r3
 8000522:	687b      	ldr	r3, [r7, #4]
 8000524:	681b      	ldr	r3, [r3, #0]
 8000526:	400a      	ands	r2, r1
 8000528:	609a      	str	r2, [r3, #8]
	reset = 0;
 800052a:	2300      	movs	r3, #0
 800052c:	60fb      	str	r3, [r7, #12]

	set = (pGPIO_handle->GPIO_pin_config.GPIO_pin_speed << (2 * pGPIO_handle->GPIO_pin_config.GPIO_pin_num));
 800052e:	687b      	ldr	r3, [r7, #4]
 8000530:	799b      	ldrb	r3, [r3, #6]
 8000532:	461a      	mov	r2, r3
 8000534:	687b      	ldr	r3, [r7, #4]
 8000536:	791b      	ldrb	r3, [r3, #4]
 8000538:	005b      	lsls	r3, r3, #1
 800053a:	fa02 f303 	lsl.w	r3, r2, r3
 800053e:	60bb      	str	r3, [r7, #8]
	pGPIO_handle->pGPIOx->OSPEEDR |= set;
 8000540:	687b      	ldr	r3, [r7, #4]
 8000542:	681b      	ldr	r3, [r3, #0]
 8000544:	6899      	ldr	r1, [r3, #8]
 8000546:	687b      	ldr	r3, [r7, #4]
 8000548:	681b      	ldr	r3, [r3, #0]
 800054a:	68ba      	ldr	r2, [r7, #8]
 800054c:	430a      	orrs	r2, r1
 800054e:	609a      	str	r2, [r3, #8]
	set = 0;
 8000550:	2300      	movs	r3, #0
 8000552:	60bb      	str	r3, [r7, #8]


	//configure the pull up and pull down resistor of GPIO pin
	reset = (11 << (2 * pGPIO_handle->GPIO_pin_config.GPIO_pin_num));
 8000554:	687b      	ldr	r3, [r7, #4]
 8000556:	791b      	ldrb	r3, [r3, #4]
 8000558:	005b      	lsls	r3, r3, #1
 800055a:	220b      	movs	r2, #11
 800055c:	fa02 f303 	lsl.w	r3, r2, r3
 8000560:	60fb      	str	r3, [r7, #12]
	pGPIO_handle->pGPIOx->PUPDR &= ~(reset);
 8000562:	687b      	ldr	r3, [r7, #4]
 8000564:	681b      	ldr	r3, [r3, #0]
 8000566:	68d9      	ldr	r1, [r3, #12]
 8000568:	68fb      	ldr	r3, [r7, #12]
 800056a:	43da      	mvns	r2, r3
 800056c:	687b      	ldr	r3, [r7, #4]
 800056e:	681b      	ldr	r3, [r3, #0]
 8000570:	400a      	ands	r2, r1
 8000572:	60da      	str	r2, [r3, #12]
	reset = 0;
 8000574:	2300      	movs	r3, #0
 8000576:	60fb      	str	r3, [r7, #12]

	set = (pGPIO_handle->GPIO_pin_config.GPIO_pin_pu_pd << (2 * pGPIO_handle->GPIO_pin_config.GPIO_pin_num));
 8000578:	687b      	ldr	r3, [r7, #4]
 800057a:	79db      	ldrb	r3, [r3, #7]
 800057c:	461a      	mov	r2, r3
 800057e:	687b      	ldr	r3, [r7, #4]
 8000580:	791b      	ldrb	r3, [r3, #4]
 8000582:	005b      	lsls	r3, r3, #1
 8000584:	fa02 f303 	lsl.w	r3, r2, r3
 8000588:	60bb      	str	r3, [r7, #8]
	pGPIO_handle->pGPIOx->PUPDR |= set;
 800058a:	687b      	ldr	r3, [r7, #4]
 800058c:	681b      	ldr	r3, [r3, #0]
 800058e:	68d9      	ldr	r1, [r3, #12]
 8000590:	687b      	ldr	r3, [r7, #4]
 8000592:	681b      	ldr	r3, [r3, #0]
 8000594:	68ba      	ldr	r2, [r7, #8]
 8000596:	430a      	orrs	r2, r1
 8000598:	60da      	str	r2, [r3, #12]
	set = 0;
 800059a:	2300      	movs	r3, #0
 800059c:	60bb      	str	r3, [r7, #8]


	//configure the output type register of GPIO pin
	reset = (11 << (2 * pGPIO_handle->GPIO_pin_config.GPIO_pin_num));
 800059e:	687b      	ldr	r3, [r7, #4]
 80005a0:	791b      	ldrb	r3, [r3, #4]
 80005a2:	005b      	lsls	r3, r3, #1
 80005a4:	220b      	movs	r2, #11
 80005a6:	fa02 f303 	lsl.w	r3, r2, r3
 80005aa:	60fb      	str	r3, [r7, #12]
	pGPIO_handle->pGPIOx->OTYPER &= ~(reset);
 80005ac:	687b      	ldr	r3, [r7, #4]
 80005ae:	681b      	ldr	r3, [r3, #0]
 80005b0:	6859      	ldr	r1, [r3, #4]
 80005b2:	68fb      	ldr	r3, [r7, #12]
 80005b4:	43da      	mvns	r2, r3
 80005b6:	687b      	ldr	r3, [r7, #4]
 80005b8:	681b      	ldr	r3, [r3, #0]
 80005ba:	400a      	ands	r2, r1
 80005bc:	605a      	str	r2, [r3, #4]
	reset = 0;
 80005be:	2300      	movs	r3, #0
 80005c0:	60fb      	str	r3, [r7, #12]

	set = (pGPIO_handle->GPIO_pin_config.GPIO_pin_op_type << pGPIO_handle->GPIO_pin_config.GPIO_pin_num);
 80005c2:	687b      	ldr	r3, [r7, #4]
 80005c4:	7a1b      	ldrb	r3, [r3, #8]
 80005c6:	461a      	mov	r2, r3
 80005c8:	687b      	ldr	r3, [r7, #4]
 80005ca:	791b      	ldrb	r3, [r3, #4]
 80005cc:	fa02 f303 	lsl.w	r3, r2, r3
 80005d0:	60bb      	str	r3, [r7, #8]
	pGPIO_handle->pGPIOx->OTYPER |= set;
 80005d2:	687b      	ldr	r3, [r7, #4]
 80005d4:	681b      	ldr	r3, [r3, #0]
 80005d6:	6859      	ldr	r1, [r3, #4]
 80005d8:	687b      	ldr	r3, [r7, #4]
 80005da:	681b      	ldr	r3, [r3, #0]
 80005dc:	68ba      	ldr	r2, [r7, #8]
 80005de:	430a      	orrs	r2, r1
 80005e0:	605a      	str	r2, [r3, #4]
	set = 0;
 80005e2:	2300      	movs	r3, #0
 80005e4:	60bb      	str	r3, [r7, #8]


	//configure the alternative functionality register of GPIO pin
	if(pGPIO_handle->GPIO_pin_config.GPIO_pin_mode == GPIO_MODE_ALTFN){
 80005e6:	687b      	ldr	r3, [r7, #4]
 80005e8:	795b      	ldrb	r3, [r3, #5]
 80005ea:	2b02      	cmp	r3, #2
 80005ec:	d152      	bne.n	8000694 <GPIO_init+0x1fc>
		if(pGPIO_handle->GPIO_pin_config.GPIO_pin_num <= 7){
 80005ee:	687b      	ldr	r3, [r7, #4]
 80005f0:	791b      	ldrb	r3, [r3, #4]
 80005f2:	2b07      	cmp	r3, #7
 80005f4:	d826      	bhi.n	8000644 <GPIO_init+0x1ac>
			reset = (1111 << (4 * pGPIO_handle->GPIO_pin_config.GPIO_pin_num));
 80005f6:	687b      	ldr	r3, [r7, #4]
 80005f8:	791b      	ldrb	r3, [r3, #4]
 80005fa:	009b      	lsls	r3, r3, #2
 80005fc:	f240 4257 	movw	r2, #1111	; 0x457
 8000600:	fa02 f303 	lsl.w	r3, r2, r3
 8000604:	60fb      	str	r3, [r7, #12]
			pGPIO_handle->pGPIOx->AFRLOW &= ~(reset);
 8000606:	687b      	ldr	r3, [r7, #4]
 8000608:	681b      	ldr	r3, [r3, #0]
 800060a:	6a19      	ldr	r1, [r3, #32]
 800060c:	68fb      	ldr	r3, [r7, #12]
 800060e:	43da      	mvns	r2, r3
 8000610:	687b      	ldr	r3, [r7, #4]
 8000612:	681b      	ldr	r3, [r3, #0]
 8000614:	400a      	ands	r2, r1
 8000616:	621a      	str	r2, [r3, #32]
			reset = 0;
 8000618:	2300      	movs	r3, #0
 800061a:	60fb      	str	r3, [r7, #12]

			set = (pGPIO_handle->GPIO_pin_config.GPIO_pin_alt_fun_mode << (4 * pGPIO_handle->GPIO_pin_config.GPIO_pin_num));
 800061c:	687b      	ldr	r3, [r7, #4]
 800061e:	7a5b      	ldrb	r3, [r3, #9]
 8000620:	461a      	mov	r2, r3
 8000622:	687b      	ldr	r3, [r7, #4]
 8000624:	791b      	ldrb	r3, [r3, #4]
 8000626:	009b      	lsls	r3, r3, #2
 8000628:	fa02 f303 	lsl.w	r3, r2, r3
 800062c:	60bb      	str	r3, [r7, #8]
			pGPIO_handle->pGPIOx->AFRLOW |= set;
 800062e:	687b      	ldr	r3, [r7, #4]
 8000630:	681b      	ldr	r3, [r3, #0]
 8000632:	6a19      	ldr	r1, [r3, #32]
 8000634:	687b      	ldr	r3, [r7, #4]
 8000636:	681b      	ldr	r3, [r3, #0]
 8000638:	68ba      	ldr	r2, [r7, #8]
 800063a:	430a      	orrs	r2, r1
 800063c:	621a      	str	r2, [r3, #32]
			set = 0;
 800063e:	2300      	movs	r3, #0
 8000640:	60bb      	str	r3, [r7, #8]
			set = (pGPIO_handle->GPIO_pin_config.GPIO_pin_alt_fun_mode << (4 * (pGPIO_handle->GPIO_pin_config.GPIO_pin_num % 8)));
			pGPIO_handle->pGPIOx->AFRHIGH |= set;
			set = 0;
		}
	}
}
 8000642:	e027      	b.n	8000694 <GPIO_init+0x1fc>
			reset = (1111 << (4 * pGPIO_handle->GPIO_pin_config.GPIO_pin_num));
 8000644:	687b      	ldr	r3, [r7, #4]
 8000646:	791b      	ldrb	r3, [r3, #4]
 8000648:	009b      	lsls	r3, r3, #2
 800064a:	f240 4257 	movw	r2, #1111	; 0x457
 800064e:	fa02 f303 	lsl.w	r3, r2, r3
 8000652:	60fb      	str	r3, [r7, #12]
			pGPIO_handle->pGPIOx->AFRHIGH &= ~(reset);
 8000654:	687b      	ldr	r3, [r7, #4]
 8000656:	681b      	ldr	r3, [r3, #0]
 8000658:	6a59      	ldr	r1, [r3, #36]	; 0x24
 800065a:	68fb      	ldr	r3, [r7, #12]
 800065c:	43da      	mvns	r2, r3
 800065e:	687b      	ldr	r3, [r7, #4]
 8000660:	681b      	ldr	r3, [r3, #0]
 8000662:	400a      	ands	r2, r1
 8000664:	625a      	str	r2, [r3, #36]	; 0x24
			reset = 0;
 8000666:	2300      	movs	r3, #0
 8000668:	60fb      	str	r3, [r7, #12]
			set = (pGPIO_handle->GPIO_pin_config.GPIO_pin_alt_fun_mode << (4 * (pGPIO_handle->GPIO_pin_config.GPIO_pin_num % 8)));
 800066a:	687b      	ldr	r3, [r7, #4]
 800066c:	7a5b      	ldrb	r3, [r3, #9]
 800066e:	461a      	mov	r2, r3
 8000670:	687b      	ldr	r3, [r7, #4]
 8000672:	791b      	ldrb	r3, [r3, #4]
 8000674:	f003 0307 	and.w	r3, r3, #7
 8000678:	009b      	lsls	r3, r3, #2
 800067a:	fa02 f303 	lsl.w	r3, r2, r3
 800067e:	60bb      	str	r3, [r7, #8]
			pGPIO_handle->pGPIOx->AFRHIGH |= set;
 8000680:	687b      	ldr	r3, [r7, #4]
 8000682:	681b      	ldr	r3, [r3, #0]
 8000684:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8000686:	687b      	ldr	r3, [r7, #4]
 8000688:	681b      	ldr	r3, [r3, #0]
 800068a:	68ba      	ldr	r2, [r7, #8]
 800068c:	430a      	orrs	r2, r1
 800068e:	625a      	str	r2, [r3, #36]	; 0x24
			set = 0;
 8000690:	2300      	movs	r3, #0
 8000692:	60bb      	str	r3, [r7, #8]
}
 8000694:	bf00      	nop
 8000696:	3714      	adds	r7, #20
 8000698:	46bd      	mov	sp, r7
 800069a:	bc80      	pop	{r7}
 800069c:	4770      	bx	lr

0800069e <GPIO_read_input_pin>:
 * @return				- uint8_t value that is read from given pin
 *
 * @note				- none
 *
 */
uint8_t GPIO_read_input_pin(GPIO_reg_def_t *pGPIOx, uint8_t pin_number) {
 800069e:	b480      	push	{r7}
 80006a0:	b085      	sub	sp, #20
 80006a2:	af00      	add	r7, sp, #0
 80006a4:	6078      	str	r0, [r7, #4]
 80006a6:	460b      	mov	r3, r1
 80006a8:	70fb      	strb	r3, [r7, #3]
	uint8_t value;
	value = (uint8_t)((pGPIOx->IDR >> pin_number) & 0x00000001);
 80006aa:	687b      	ldr	r3, [r7, #4]
 80006ac:	691a      	ldr	r2, [r3, #16]
 80006ae:	78fb      	ldrb	r3, [r7, #3]
 80006b0:	fa22 f303 	lsr.w	r3, r2, r3
 80006b4:	b2db      	uxtb	r3, r3
 80006b6:	f003 0301 	and.w	r3, r3, #1
 80006ba:	73fb      	strb	r3, [r7, #15]
	return value;
 80006bc:	7bfb      	ldrb	r3, [r7, #15]
}
 80006be:	4618      	mov	r0, r3
 80006c0:	3714      	adds	r7, #20
 80006c2:	46bd      	mov	sp, r7
 80006c4:	bc80      	pop	{r7}
 80006c6:	4770      	bx	lr

080006c8 <GPIO_toggle_output_pin>:
 * @return				- none
 *
 * @note				- none
 *
 */
void GPIO_toggle_output_pin(GPIO_reg_def_t *pGPIOx, uint8_t pin_number) {
 80006c8:	b480      	push	{r7}
 80006ca:	b083      	sub	sp, #12
 80006cc:	af00      	add	r7, sp, #0
 80006ce:	6078      	str	r0, [r7, #4]
 80006d0:	460b      	mov	r3, r1
 80006d2:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1 << pin_number);
 80006d4:	687b      	ldr	r3, [r7, #4]
 80006d6:	695b      	ldr	r3, [r3, #20]
 80006d8:	78fa      	ldrb	r2, [r7, #3]
 80006da:	2101      	movs	r1, #1
 80006dc:	fa01 f202 	lsl.w	r2, r1, r2
 80006e0:	405a      	eors	r2, r3
 80006e2:	687b      	ldr	r3, [r7, #4]
 80006e4:	615a      	str	r2, [r3, #20]
}
 80006e6:	bf00      	nop
 80006e8:	370c      	adds	r7, #12
 80006ea:	46bd      	mov	sp, r7
 80006ec:	bc80      	pop	{r7}
 80006ee:	4770      	bx	lr

080006f0 <__libc_init_array>:
 80006f0:	b570      	push	{r4, r5, r6, lr}
 80006f2:	4e0d      	ldr	r6, [pc, #52]	; (8000728 <__libc_init_array+0x38>)
 80006f4:	4c0d      	ldr	r4, [pc, #52]	; (800072c <__libc_init_array+0x3c>)
 80006f6:	1ba4      	subs	r4, r4, r6
 80006f8:	10a4      	asrs	r4, r4, #2
 80006fa:	2500      	movs	r5, #0
 80006fc:	42a5      	cmp	r5, r4
 80006fe:	d109      	bne.n	8000714 <__libc_init_array+0x24>
 8000700:	4e0b      	ldr	r6, [pc, #44]	; (8000730 <__libc_init_array+0x40>)
 8000702:	4c0c      	ldr	r4, [pc, #48]	; (8000734 <__libc_init_array+0x44>)
 8000704:	f000 f818 	bl	8000738 <_init>
 8000708:	1ba4      	subs	r4, r4, r6
 800070a:	10a4      	asrs	r4, r4, #2
 800070c:	2500      	movs	r5, #0
 800070e:	42a5      	cmp	r5, r4
 8000710:	d105      	bne.n	800071e <__libc_init_array+0x2e>
 8000712:	bd70      	pop	{r4, r5, r6, pc}
 8000714:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000718:	4798      	blx	r3
 800071a:	3501      	adds	r5, #1
 800071c:	e7ee      	b.n	80006fc <__libc_init_array+0xc>
 800071e:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000722:	4798      	blx	r3
 8000724:	3501      	adds	r5, #1
 8000726:	e7f2      	b.n	800070e <__libc_init_array+0x1e>
 8000728:	08000750 	.word	0x08000750
 800072c:	08000750 	.word	0x08000750
 8000730:	08000750 	.word	0x08000750
 8000734:	08000754 	.word	0x08000754

08000738 <_init>:
 8000738:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800073a:	bf00      	nop
 800073c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800073e:	bc08      	pop	{r3}
 8000740:	469e      	mov	lr, r3
 8000742:	4770      	bx	lr

08000744 <_fini>:
 8000744:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000746:	bf00      	nop
 8000748:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800074a:	bc08      	pop	{r3}
 800074c:	469e      	mov	lr, r3
 800074e:	4770      	bx	lr

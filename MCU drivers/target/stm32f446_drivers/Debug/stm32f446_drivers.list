
stm32f446_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000880  080001c4  080001c4  000101c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000a44  08000a4c  00010a4c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000a44  08000a44  00010a4c  2**0
                  CONTENTS
  4 .ARM          00000000  08000a44  08000a44  00010a4c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000a44  08000a4c  00010a4c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000a44  08000a44  00010a44  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000a48  08000a48  00010a48  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010a4c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000a4c  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000a4c  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00010a4c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001218  00000000  00000000  00010a76  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00000314  00000000  00000000  00011c8e  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 000000c8  00000000  00000000  00011fa8  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 000000a0  00000000  00000000  00012070  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00002087  00000000  00000000  00012110  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00000c50  00000000  00000000  00014197  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00008f4f  00000000  00000000  00014de7  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0001dd36  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000288  00000000  00000000  0001ddb4  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	; (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	08000a2c 	.word	0x08000a2c

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	; (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	; (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	; (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	08000a2c 	.word	0x08000a2c

08000204 <delay>:
#endif

#include <string.h>
#include "stm32f446.h"

void delay(){
 8000204:	b480      	push	{r7}
 8000206:	b083      	sub	sp, #12
 8000208:	af00      	add	r7, sp, #0
	for(uint32_t i = 0; i < 500000; i++);
 800020a:	2300      	movs	r3, #0
 800020c:	607b      	str	r3, [r7, #4]
 800020e:	e002      	b.n	8000216 <delay+0x12>
 8000210:	687b      	ldr	r3, [r7, #4]
 8000212:	3301      	adds	r3, #1
 8000214:	607b      	str	r3, [r7, #4]
 8000216:	687b      	ldr	r3, [r7, #4]
 8000218:	4a03      	ldr	r2, [pc, #12]	; (8000228 <delay+0x24>)
 800021a:	4293      	cmp	r3, r2
 800021c:	d9f8      	bls.n	8000210 <delay+0xc>
}
 800021e:	bf00      	nop
 8000220:	370c      	adds	r7, #12
 8000222:	46bd      	mov	sp, r7
 8000224:	bc80      	pop	{r7}
 8000226:	4770      	bx	lr
 8000228:	0007a11f 	.word	0x0007a11f

0800022c <main>:

int main(void){
 800022c:	b580      	push	{r7, lr}
 800022e:	b086      	sub	sp, #24
 8000230:	af00      	add	r7, sp, #0
	GPIO_Handle_t gpio_led, gpio_btn;
	memset(&gpio_led, 0 ,sizeof(gpio_led));
 8000232:	f107 030c 	add.w	r3, r7, #12
 8000236:	220c      	movs	r2, #12
 8000238:	2100      	movs	r1, #0
 800023a:	4618      	mov	r0, r3
 800023c:	f000 fbee 	bl	8000a1c <memset>
	memset(&gpio_btn, 0 ,sizeof(gpio_btn));
 8000240:	463b      	mov	r3, r7
 8000242:	220c      	movs	r2, #12
 8000244:	2100      	movs	r1, #0
 8000246:	4618      	mov	r0, r3
 8000248:	f000 fbe8 	bl	8000a1c <memset>

	gpio_led.pGPIOx = GPIOA;
 800024c:	4b14      	ldr	r3, [pc, #80]	; (80002a0 <main+0x74>)
 800024e:	60fb      	str	r3, [r7, #12]
	gpio_led.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_10;
 8000250:	230a      	movs	r3, #10
 8000252:	743b      	strb	r3, [r7, #16]
	gpio_led.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 8000254:	2301      	movs	r3, #1
 8000256:	747b      	strb	r3, [r7, #17]
	gpio_led.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8000258:	2300      	movs	r3, #0
 800025a:	753b      	strb	r3, [r7, #20]
	gpio_led.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 800025c:	2300      	movs	r3, #0
 800025e:	74fb      	strb	r3, [r7, #19]

	gpio_btn.pGPIOx = GPIOB;
 8000260:	4b10      	ldr	r3, [pc, #64]	; (80002a4 <main+0x78>)
 8000262:	603b      	str	r3, [r7, #0]
	gpio_btn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_12;
 8000264:	230c      	movs	r3, #12
 8000266:	713b      	strb	r3, [r7, #4]
	gpio_btn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IT_FT;
 8000268:	2304      	movs	r3, #4
 800026a:	717b      	strb	r3, [r7, #5]
	gpio_btn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PU;
 800026c:	2301      	movs	r3, #1
 800026e:	71fb      	strb	r3, [r7, #7]


	GPIO_PeriClockControl(gpio_led.pGPIOx, ENABLE);
 8000270:	68fb      	ldr	r3, [r7, #12]
 8000272:	2101      	movs	r1, #1
 8000274:	4618      	mov	r0, r3
 8000276:	f000 f851 	bl	800031c <GPIO_PeriClockControl>
	GPIO_PeriClockControl(gpio_btn.pGPIOx, ENABLE);
 800027a:	683b      	ldr	r3, [r7, #0]
 800027c:	2101      	movs	r1, #1
 800027e:	4618      	mov	r0, r3
 8000280:	f000 f84c 	bl	800031c <GPIO_PeriClockControl>

	GPIO_Init(&gpio_led);
 8000284:	f107 030c 	add.w	r3, r7, #12
 8000288:	4618      	mov	r0, r3
 800028a:	f000 f919 	bl	80004c0 <GPIO_Init>
	GPIO_Init(&gpio_btn);
 800028e:	463b      	mov	r3, r7
 8000290:	4618      	mov	r0, r3
 8000292:	f000 f915 	bl	80004c0 <GPIO_Init>


	GPIO_IRQInterruptConfig(IRQ_NO_EXTI15_10, ENABLE);
 8000296:	2101      	movs	r1, #1
 8000298:	2028      	movs	r0, #40	; 0x28
 800029a:	f000 faf7 	bl	800088c <GPIO_IRQInterruptConfig>

	for(;;);
 800029e:	e7fe      	b.n	800029e <main+0x72>
 80002a0:	40020000 	.word	0x40020000
 80002a4:	40020400 	.word	0x40020400

080002a8 <EXTI15_10_IRQHandler>:
}

void EXTI15_10_IRQHandler(void){
 80002a8:	b580      	push	{r7, lr}
 80002aa:	af00      	add	r7, sp, #0
	GPIO_ToggleOutputPin(GPIOA, GPIO_PIN_NO_10);
 80002ac:	210a      	movs	r1, #10
 80002ae:	4805      	ldr	r0, [pc, #20]	; (80002c4 <EXTI15_10_IRQHandler+0x1c>)
 80002b0:	f000 fad8 	bl	8000864 <GPIO_ToggleOutputPin>
	delay();
 80002b4:	f7ff ffa6 	bl	8000204 <delay>

	GPIO_IRQHandling(GPIO_PIN_NO_12);
 80002b8:	200c      	movs	r0, #12
 80002ba:	f000 fb6b 	bl	8000994 <GPIO_IRQHandling>
}
 80002be:	bf00      	nop
 80002c0:	bd80      	pop	{r7, pc}
 80002c2:	bf00      	nop
 80002c4:	40020000 	.word	0x40020000

080002c8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002c8:	480d      	ldr	r0, [pc, #52]	; (8000300 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002ca:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002cc:	480d      	ldr	r0, [pc, #52]	; (8000304 <LoopForever+0x6>)
  ldr r1, =_edata
 80002ce:	490e      	ldr	r1, [pc, #56]	; (8000308 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002d0:	4a0e      	ldr	r2, [pc, #56]	; (800030c <LoopForever+0xe>)
  movs r3, #0
 80002d2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002d4:	e002      	b.n	80002dc <LoopCopyDataInit>

080002d6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002d6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002d8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002da:	3304      	adds	r3, #4

080002dc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002dc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002de:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002e0:	d3f9      	bcc.n	80002d6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002e2:	4a0b      	ldr	r2, [pc, #44]	; (8000310 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002e4:	4c0b      	ldr	r4, [pc, #44]	; (8000314 <LoopForever+0x16>)
  movs r3, #0
 80002e6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002e8:	e001      	b.n	80002ee <LoopFillZerobss>

080002ea <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002ea:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002ec:	3204      	adds	r2, #4

080002ee <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002ee:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002f0:	d3fb      	bcc.n	80002ea <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 80002f2:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 80002f6:	f000 fb6d 	bl	80009d4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002fa:	f7ff ff97 	bl	800022c <main>

080002fe <LoopForever>:

LoopForever:
    b LoopForever
 80002fe:	e7fe      	b.n	80002fe <LoopForever>
  ldr   r0, =_estack
 8000300:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000304:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000308:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 800030c:	08000a4c 	.word	0x08000a4c
  ldr r2, =_sbss
 8000310:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000314:	2000001c 	.word	0x2000001c

08000318 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000318:	e7fe      	b.n	8000318 <ADC_IRQHandler>
	...

0800031c <GPIO_PeriClockControl>:
 * @return				- none
 *
 * @note				- none
 *
 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi){
 800031c:	b480      	push	{r7}
 800031e:	b083      	sub	sp, #12
 8000320:	af00      	add	r7, sp, #0
 8000322:	6078      	str	r0, [r7, #4]
 8000324:	460b      	mov	r3, r1
 8000326:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE){
 8000328:	78fb      	ldrb	r3, [r7, #3]
 800032a:	2b01      	cmp	r3, #1
 800032c:	d157      	bne.n	80003de <GPIO_PeriClockControl+0xc2>
		if(pGPIOx == GPIOA){
 800032e:	687b      	ldr	r3, [r7, #4]
 8000330:	4a5a      	ldr	r2, [pc, #360]	; (800049c <GPIO_PeriClockControl+0x180>)
 8000332:	4293      	cmp	r3, r2
 8000334:	d106      	bne.n	8000344 <GPIO_PeriClockControl+0x28>
			GPIOA_PCLK_EN();
 8000336:	4b5a      	ldr	r3, [pc, #360]	; (80004a0 <GPIO_PeriClockControl+0x184>)
 8000338:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800033a:	4a59      	ldr	r2, [pc, #356]	; (80004a0 <GPIO_PeriClockControl+0x184>)
 800033c:	f043 0301 	orr.w	r3, r3, #1
 8000340:	6313      	str	r3, [r2, #48]	; 0x30
			GPIOG_PCLK_DI();
		} else if(pGPIOx == GPIOH){
			GPIOH_PCLK_DI();
		}
	}
}
 8000342:	e0a6      	b.n	8000492 <GPIO_PeriClockControl+0x176>
		} else if(pGPIOx == GPIOB){
 8000344:	687b      	ldr	r3, [r7, #4]
 8000346:	4a57      	ldr	r2, [pc, #348]	; (80004a4 <GPIO_PeriClockControl+0x188>)
 8000348:	4293      	cmp	r3, r2
 800034a:	d106      	bne.n	800035a <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 800034c:	4b54      	ldr	r3, [pc, #336]	; (80004a0 <GPIO_PeriClockControl+0x184>)
 800034e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000350:	4a53      	ldr	r2, [pc, #332]	; (80004a0 <GPIO_PeriClockControl+0x184>)
 8000352:	f043 0302 	orr.w	r3, r3, #2
 8000356:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000358:	e09b      	b.n	8000492 <GPIO_PeriClockControl+0x176>
		} else if(pGPIOx == GPIOC){
 800035a:	687b      	ldr	r3, [r7, #4]
 800035c:	4a52      	ldr	r2, [pc, #328]	; (80004a8 <GPIO_PeriClockControl+0x18c>)
 800035e:	4293      	cmp	r3, r2
 8000360:	d106      	bne.n	8000370 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 8000362:	4b4f      	ldr	r3, [pc, #316]	; (80004a0 <GPIO_PeriClockControl+0x184>)
 8000364:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000366:	4a4e      	ldr	r2, [pc, #312]	; (80004a0 <GPIO_PeriClockControl+0x184>)
 8000368:	f043 0304 	orr.w	r3, r3, #4
 800036c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800036e:	e090      	b.n	8000492 <GPIO_PeriClockControl+0x176>
		} else if(pGPIOx == GPIOD){
 8000370:	687b      	ldr	r3, [r7, #4]
 8000372:	4a4e      	ldr	r2, [pc, #312]	; (80004ac <GPIO_PeriClockControl+0x190>)
 8000374:	4293      	cmp	r3, r2
 8000376:	d106      	bne.n	8000386 <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 8000378:	4b49      	ldr	r3, [pc, #292]	; (80004a0 <GPIO_PeriClockControl+0x184>)
 800037a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800037c:	4a48      	ldr	r2, [pc, #288]	; (80004a0 <GPIO_PeriClockControl+0x184>)
 800037e:	f043 0308 	orr.w	r3, r3, #8
 8000382:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000384:	e085      	b.n	8000492 <GPIO_PeriClockControl+0x176>
		} else if(pGPIOx == GPIOE){
 8000386:	687b      	ldr	r3, [r7, #4]
 8000388:	4a49      	ldr	r2, [pc, #292]	; (80004b0 <GPIO_PeriClockControl+0x194>)
 800038a:	4293      	cmp	r3, r2
 800038c:	d106      	bne.n	800039c <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 800038e:	4b44      	ldr	r3, [pc, #272]	; (80004a0 <GPIO_PeriClockControl+0x184>)
 8000390:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000392:	4a43      	ldr	r2, [pc, #268]	; (80004a0 <GPIO_PeriClockControl+0x184>)
 8000394:	f043 0310 	orr.w	r3, r3, #16
 8000398:	6313      	str	r3, [r2, #48]	; 0x30
}
 800039a:	e07a      	b.n	8000492 <GPIO_PeriClockControl+0x176>
		} else if(pGPIOx == GPIOF){
 800039c:	687b      	ldr	r3, [r7, #4]
 800039e:	4a45      	ldr	r2, [pc, #276]	; (80004b4 <GPIO_PeriClockControl+0x198>)
 80003a0:	4293      	cmp	r3, r2
 80003a2:	d106      	bne.n	80003b2 <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 80003a4:	4b3e      	ldr	r3, [pc, #248]	; (80004a0 <GPIO_PeriClockControl+0x184>)
 80003a6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003a8:	4a3d      	ldr	r2, [pc, #244]	; (80004a0 <GPIO_PeriClockControl+0x184>)
 80003aa:	f043 0320 	orr.w	r3, r3, #32
 80003ae:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003b0:	e06f      	b.n	8000492 <GPIO_PeriClockControl+0x176>
		} else if(pGPIOx == GPIOG){
 80003b2:	687b      	ldr	r3, [r7, #4]
 80003b4:	4a40      	ldr	r2, [pc, #256]	; (80004b8 <GPIO_PeriClockControl+0x19c>)
 80003b6:	4293      	cmp	r3, r2
 80003b8:	d106      	bne.n	80003c8 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 80003ba:	4b39      	ldr	r3, [pc, #228]	; (80004a0 <GPIO_PeriClockControl+0x184>)
 80003bc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003be:	4a38      	ldr	r2, [pc, #224]	; (80004a0 <GPIO_PeriClockControl+0x184>)
 80003c0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80003c4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003c6:	e064      	b.n	8000492 <GPIO_PeriClockControl+0x176>
		} else if(pGPIOx == GPIOH){
 80003c8:	687b      	ldr	r3, [r7, #4]
 80003ca:	4a3c      	ldr	r2, [pc, #240]	; (80004bc <GPIO_PeriClockControl+0x1a0>)
 80003cc:	4293      	cmp	r3, r2
 80003ce:	d160      	bne.n	8000492 <GPIO_PeriClockControl+0x176>
			GPIOH_PCLK_EN();
 80003d0:	4b33      	ldr	r3, [pc, #204]	; (80004a0 <GPIO_PeriClockControl+0x184>)
 80003d2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003d4:	4a32      	ldr	r2, [pc, #200]	; (80004a0 <GPIO_PeriClockControl+0x184>)
 80003d6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80003da:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003dc:	e059      	b.n	8000492 <GPIO_PeriClockControl+0x176>
	} else if(EnorDi == DISABLE){
 80003de:	78fb      	ldrb	r3, [r7, #3]
 80003e0:	2b00      	cmp	r3, #0
 80003e2:	d156      	bne.n	8000492 <GPIO_PeriClockControl+0x176>
		if(pGPIOx == GPIOA){
 80003e4:	687b      	ldr	r3, [r7, #4]
 80003e6:	4a2d      	ldr	r2, [pc, #180]	; (800049c <GPIO_PeriClockControl+0x180>)
 80003e8:	4293      	cmp	r3, r2
 80003ea:	d106      	bne.n	80003fa <GPIO_PeriClockControl+0xde>
			GPIOA_PCLK_DI();
 80003ec:	4b2c      	ldr	r3, [pc, #176]	; (80004a0 <GPIO_PeriClockControl+0x184>)
 80003ee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003f0:	4a2b      	ldr	r2, [pc, #172]	; (80004a0 <GPIO_PeriClockControl+0x184>)
 80003f2:	f023 0301 	bic.w	r3, r3, #1
 80003f6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003f8:	e04b      	b.n	8000492 <GPIO_PeriClockControl+0x176>
		} else if(pGPIOx == GPIOB){
 80003fa:	687b      	ldr	r3, [r7, #4]
 80003fc:	4a29      	ldr	r2, [pc, #164]	; (80004a4 <GPIO_PeriClockControl+0x188>)
 80003fe:	4293      	cmp	r3, r2
 8000400:	d106      	bne.n	8000410 <GPIO_PeriClockControl+0xf4>
			GPIOB_PCLK_DI();
 8000402:	4b27      	ldr	r3, [pc, #156]	; (80004a0 <GPIO_PeriClockControl+0x184>)
 8000404:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000406:	4a26      	ldr	r2, [pc, #152]	; (80004a0 <GPIO_PeriClockControl+0x184>)
 8000408:	f023 0302 	bic.w	r3, r3, #2
 800040c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800040e:	e040      	b.n	8000492 <GPIO_PeriClockControl+0x176>
		} else if(pGPIOx == GPIOC){
 8000410:	687b      	ldr	r3, [r7, #4]
 8000412:	4a25      	ldr	r2, [pc, #148]	; (80004a8 <GPIO_PeriClockControl+0x18c>)
 8000414:	4293      	cmp	r3, r2
 8000416:	d106      	bne.n	8000426 <GPIO_PeriClockControl+0x10a>
			GPIOC_PCLK_DI();
 8000418:	4b21      	ldr	r3, [pc, #132]	; (80004a0 <GPIO_PeriClockControl+0x184>)
 800041a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800041c:	4a20      	ldr	r2, [pc, #128]	; (80004a0 <GPIO_PeriClockControl+0x184>)
 800041e:	f023 0304 	bic.w	r3, r3, #4
 8000422:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000424:	e035      	b.n	8000492 <GPIO_PeriClockControl+0x176>
		} else if(pGPIOx == GPIOD){
 8000426:	687b      	ldr	r3, [r7, #4]
 8000428:	4a20      	ldr	r2, [pc, #128]	; (80004ac <GPIO_PeriClockControl+0x190>)
 800042a:	4293      	cmp	r3, r2
 800042c:	d106      	bne.n	800043c <GPIO_PeriClockControl+0x120>
			GPIOD_PCLK_DI();
 800042e:	4b1c      	ldr	r3, [pc, #112]	; (80004a0 <GPIO_PeriClockControl+0x184>)
 8000430:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000432:	4a1b      	ldr	r2, [pc, #108]	; (80004a0 <GPIO_PeriClockControl+0x184>)
 8000434:	f023 0308 	bic.w	r3, r3, #8
 8000438:	6313      	str	r3, [r2, #48]	; 0x30
}
 800043a:	e02a      	b.n	8000492 <GPIO_PeriClockControl+0x176>
		} else if(pGPIOx == GPIOE){
 800043c:	687b      	ldr	r3, [r7, #4]
 800043e:	4a1c      	ldr	r2, [pc, #112]	; (80004b0 <GPIO_PeriClockControl+0x194>)
 8000440:	4293      	cmp	r3, r2
 8000442:	d106      	bne.n	8000452 <GPIO_PeriClockControl+0x136>
			GPIOE_PCLK_DI();
 8000444:	4b16      	ldr	r3, [pc, #88]	; (80004a0 <GPIO_PeriClockControl+0x184>)
 8000446:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000448:	4a15      	ldr	r2, [pc, #84]	; (80004a0 <GPIO_PeriClockControl+0x184>)
 800044a:	f023 0310 	bic.w	r3, r3, #16
 800044e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000450:	e01f      	b.n	8000492 <GPIO_PeriClockControl+0x176>
		} else if(pGPIOx == GPIOF){
 8000452:	687b      	ldr	r3, [r7, #4]
 8000454:	4a17      	ldr	r2, [pc, #92]	; (80004b4 <GPIO_PeriClockControl+0x198>)
 8000456:	4293      	cmp	r3, r2
 8000458:	d106      	bne.n	8000468 <GPIO_PeriClockControl+0x14c>
			GPIOF_PCLK_DI();
 800045a:	4b11      	ldr	r3, [pc, #68]	; (80004a0 <GPIO_PeriClockControl+0x184>)
 800045c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800045e:	4a10      	ldr	r2, [pc, #64]	; (80004a0 <GPIO_PeriClockControl+0x184>)
 8000460:	f023 0320 	bic.w	r3, r3, #32
 8000464:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000466:	e014      	b.n	8000492 <GPIO_PeriClockControl+0x176>
		} else if(pGPIOx == GPIOG){
 8000468:	687b      	ldr	r3, [r7, #4]
 800046a:	4a13      	ldr	r2, [pc, #76]	; (80004b8 <GPIO_PeriClockControl+0x19c>)
 800046c:	4293      	cmp	r3, r2
 800046e:	d106      	bne.n	800047e <GPIO_PeriClockControl+0x162>
			GPIOG_PCLK_DI();
 8000470:	4b0b      	ldr	r3, [pc, #44]	; (80004a0 <GPIO_PeriClockControl+0x184>)
 8000472:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000474:	4a0a      	ldr	r2, [pc, #40]	; (80004a0 <GPIO_PeriClockControl+0x184>)
 8000476:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800047a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800047c:	e009      	b.n	8000492 <GPIO_PeriClockControl+0x176>
		} else if(pGPIOx == GPIOH){
 800047e:	687b      	ldr	r3, [r7, #4]
 8000480:	4a0e      	ldr	r2, [pc, #56]	; (80004bc <GPIO_PeriClockControl+0x1a0>)
 8000482:	4293      	cmp	r3, r2
 8000484:	d105      	bne.n	8000492 <GPIO_PeriClockControl+0x176>
			GPIOH_PCLK_DI();
 8000486:	4b06      	ldr	r3, [pc, #24]	; (80004a0 <GPIO_PeriClockControl+0x184>)
 8000488:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800048a:	4a05      	ldr	r2, [pc, #20]	; (80004a0 <GPIO_PeriClockControl+0x184>)
 800048c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000490:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000492:	bf00      	nop
 8000494:	370c      	adds	r7, #12
 8000496:	46bd      	mov	sp, r7
 8000498:	bc80      	pop	{r7}
 800049a:	4770      	bx	lr
 800049c:	40020000 	.word	0x40020000
 80004a0:	40023800 	.word	0x40023800
 80004a4:	40020400 	.word	0x40020400
 80004a8:	40020800 	.word	0x40020800
 80004ac:	40020c00 	.word	0x40020c00
 80004b0:	40021000 	.word	0x40021000
 80004b4:	40021400 	.word	0x40021400
 80004b8:	40021800 	.word	0x40021800
 80004bc:	40021c00 	.word	0x40021c00

080004c0 <GPIO_Init>:
 * @return				- none
 *
 * @note				- none
 *
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle){
 80004c0:	b480      	push	{r7}
 80004c2:	b08b      	sub	sp, #44	; 0x2c
 80004c4:	af00      	add	r7, sp, #0
 80004c6:	6078      	str	r0, [r7, #4]
	uint32_t reset_value = 0;
 80004c8:	2300      	movs	r3, #0
 80004ca:	627b      	str	r3, [r7, #36]	; 0x24

	//reset, then set mode register
	if( pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG){
 80004cc:	687b      	ldr	r3, [r7, #4]
 80004ce:	795b      	ldrb	r3, [r3, #5]
 80004d0:	2b03      	cmp	r3, #3
 80004d2:	d823      	bhi.n	800051c <GPIO_Init+0x5c>
		reset_value = (0x3 << ((2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));
 80004d4:	687b      	ldr	r3, [r7, #4]
 80004d6:	791b      	ldrb	r3, [r3, #4]
 80004d8:	005b      	lsls	r3, r3, #1
 80004da:	2203      	movs	r2, #3
 80004dc:	fa02 f303 	lsl.w	r3, r2, r3
 80004e0:	627b      	str	r3, [r7, #36]	; 0x24
		pGPIOHandle->pGPIOx->MODER &= ~(reset_value);
 80004e2:	687b      	ldr	r3, [r7, #4]
 80004e4:	681b      	ldr	r3, [r3, #0]
 80004e6:	6819      	ldr	r1, [r3, #0]
 80004e8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80004ea:	43da      	mvns	r2, r3
 80004ec:	687b      	ldr	r3, [r7, #4]
 80004ee:	681b      	ldr	r3, [r3, #0]
 80004f0:	400a      	ands	r2, r1
 80004f2:	601a      	str	r2, [r3, #0]
		reset_value = 0;
 80004f4:	2300      	movs	r3, #0
 80004f6:	627b      	str	r3, [r7, #36]	; 0x24

		uint32_t moder_value = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80004f8:	687b      	ldr	r3, [r7, #4]
 80004fa:	795b      	ldrb	r3, [r3, #5]
 80004fc:	461a      	mov	r2, r3
 80004fe:	687b      	ldr	r3, [r7, #4]
 8000500:	791b      	ldrb	r3, [r3, #4]
 8000502:	005b      	lsls	r3, r3, #1
 8000504:	fa02 f303 	lsl.w	r3, r2, r3
 8000508:	61fb      	str	r3, [r7, #28]
		pGPIOHandle->pGPIOx->MODER |= moder_value;
 800050a:	687b      	ldr	r3, [r7, #4]
 800050c:	681b      	ldr	r3, [r3, #0]
 800050e:	6819      	ldr	r1, [r3, #0]
 8000510:	687b      	ldr	r3, [r7, #4]
 8000512:	681b      	ldr	r3, [r3, #0]
 8000514:	69fa      	ldr	r2, [r7, #28]
 8000516:	430a      	orrs	r2, r1
 8000518:	601a      	str	r2, [r3, #0]
 800051a:	e0ee      	b.n	80006fa <GPIO_Init+0x23a>
	} else{
		//interrupt mode
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT){
 800051c:	687b      	ldr	r3, [r7, #4]
 800051e:	795b      	ldrb	r3, [r3, #5]
 8000520:	2b04      	cmp	r3, #4
 8000522:	d11a      	bne.n	800055a <GPIO_Init+0x9a>
			//reset RTSR
			reset_value = (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000524:	687b      	ldr	r3, [r7, #4]
 8000526:	791b      	ldrb	r3, [r3, #4]
 8000528:	461a      	mov	r2, r3
 800052a:	2301      	movs	r3, #1
 800052c:	4093      	lsls	r3, r2
 800052e:	627b      	str	r3, [r7, #36]	; 0x24
			EXTI->RTSR &= ~(reset_value);
 8000530:	4b49      	ldr	r3, [pc, #292]	; (8000658 <GPIO_Init+0x198>)
 8000532:	689a      	ldr	r2, [r3, #8]
 8000534:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000536:	43db      	mvns	r3, r3
 8000538:	4947      	ldr	r1, [pc, #284]	; (8000658 <GPIO_Init+0x198>)
 800053a:	4013      	ands	r3, r2
 800053c:	608b      	str	r3, [r1, #8]
			reset_value = 0;
 800053e:	2300      	movs	r3, #0
 8000540:	627b      	str	r3, [r7, #36]	; 0x24

			//configure FTSR
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000542:	4b45      	ldr	r3, [pc, #276]	; (8000658 <GPIO_Init+0x198>)
 8000544:	68db      	ldr	r3, [r3, #12]
 8000546:	687a      	ldr	r2, [r7, #4]
 8000548:	7912      	ldrb	r2, [r2, #4]
 800054a:	4611      	mov	r1, r2
 800054c:	2201      	movs	r2, #1
 800054e:	408a      	lsls	r2, r1
 8000550:	4611      	mov	r1, r2
 8000552:	4a41      	ldr	r2, [pc, #260]	; (8000658 <GPIO_Init+0x198>)
 8000554:	430b      	orrs	r3, r1
 8000556:	60d3      	str	r3, [r2, #12]
 8000558:	e038      	b.n	80005cc <GPIO_Init+0x10c>
		} else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT){
 800055a:	687b      	ldr	r3, [r7, #4]
 800055c:	795b      	ldrb	r3, [r3, #5]
 800055e:	2b05      	cmp	r3, #5
 8000560:	d11a      	bne.n	8000598 <GPIO_Init+0xd8>
			//reset FTSR
			reset_value = (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000562:	687b      	ldr	r3, [r7, #4]
 8000564:	791b      	ldrb	r3, [r3, #4]
 8000566:	461a      	mov	r2, r3
 8000568:	2301      	movs	r3, #1
 800056a:	4093      	lsls	r3, r2
 800056c:	627b      	str	r3, [r7, #36]	; 0x24
			EXTI->FTSR &= ~(reset_value);
 800056e:	4b3a      	ldr	r3, [pc, #232]	; (8000658 <GPIO_Init+0x198>)
 8000570:	68da      	ldr	r2, [r3, #12]
 8000572:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000574:	43db      	mvns	r3, r3
 8000576:	4938      	ldr	r1, [pc, #224]	; (8000658 <GPIO_Init+0x198>)
 8000578:	4013      	ands	r3, r2
 800057a:	60cb      	str	r3, [r1, #12]
			reset_value = 0;
 800057c:	2300      	movs	r3, #0
 800057e:	627b      	str	r3, [r7, #36]	; 0x24

			//configure RTSR
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000580:	4b35      	ldr	r3, [pc, #212]	; (8000658 <GPIO_Init+0x198>)
 8000582:	689b      	ldr	r3, [r3, #8]
 8000584:	687a      	ldr	r2, [r7, #4]
 8000586:	7912      	ldrb	r2, [r2, #4]
 8000588:	4611      	mov	r1, r2
 800058a:	2201      	movs	r2, #1
 800058c:	408a      	lsls	r2, r1
 800058e:	4611      	mov	r1, r2
 8000590:	4a31      	ldr	r2, [pc, #196]	; (8000658 <GPIO_Init+0x198>)
 8000592:	430b      	orrs	r3, r1
 8000594:	6093      	str	r3, [r2, #8]
 8000596:	e019      	b.n	80005cc <GPIO_Init+0x10c>
		} else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT){
 8000598:	687b      	ldr	r3, [r7, #4]
 800059a:	795b      	ldrb	r3, [r3, #5]
 800059c:	2b06      	cmp	r3, #6
 800059e:	d115      	bne.n	80005cc <GPIO_Init+0x10c>
			//configure RTSR and FTSR
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005a0:	4b2d      	ldr	r3, [pc, #180]	; (8000658 <GPIO_Init+0x198>)
 80005a2:	689b      	ldr	r3, [r3, #8]
 80005a4:	687a      	ldr	r2, [r7, #4]
 80005a6:	7912      	ldrb	r2, [r2, #4]
 80005a8:	4611      	mov	r1, r2
 80005aa:	2201      	movs	r2, #1
 80005ac:	408a      	lsls	r2, r1
 80005ae:	4611      	mov	r1, r2
 80005b0:	4a29      	ldr	r2, [pc, #164]	; (8000658 <GPIO_Init+0x198>)
 80005b2:	430b      	orrs	r3, r1
 80005b4:	6093      	str	r3, [r2, #8]
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005b6:	4b28      	ldr	r3, [pc, #160]	; (8000658 <GPIO_Init+0x198>)
 80005b8:	68db      	ldr	r3, [r3, #12]
 80005ba:	687a      	ldr	r2, [r7, #4]
 80005bc:	7912      	ldrb	r2, [r2, #4]
 80005be:	4611      	mov	r1, r2
 80005c0:	2201      	movs	r2, #1
 80005c2:	408a      	lsls	r2, r1
 80005c4:	4611      	mov	r1, r2
 80005c6:	4a24      	ldr	r2, [pc, #144]	; (8000658 <GPIO_Init+0x198>)
 80005c8:	430b      	orrs	r3, r1
 80005ca:	60d3      	str	r3, [r2, #12]
		}

		//configure the GPIO port selection in SYSCFG_EXTICR
		uint8_t index = (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4);
 80005cc:	687b      	ldr	r3, [r7, #4]
 80005ce:	791b      	ldrb	r3, [r3, #4]
 80005d0:	089b      	lsrs	r3, r3, #2
 80005d2:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
		uint8_t position = ((pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4) * 4);
 80005d6:	687b      	ldr	r3, [r7, #4]
 80005d8:	791b      	ldrb	r3, [r3, #4]
 80005da:	f003 0303 	and.w	r3, r3, #3
 80005de:	b2db      	uxtb	r3, r3
 80005e0:	009b      	lsls	r3, r3, #2
 80005e2:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
		uint8_t port_code = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 80005e6:	687b      	ldr	r3, [r7, #4]
 80005e8:	681b      	ldr	r3, [r3, #0]
 80005ea:	4a1c      	ldr	r2, [pc, #112]	; (800065c <GPIO_Init+0x19c>)
 80005ec:	4293      	cmp	r3, r2
 80005ee:	d045      	beq.n	800067c <GPIO_Init+0x1bc>
 80005f0:	687b      	ldr	r3, [r7, #4]
 80005f2:	681b      	ldr	r3, [r3, #0]
 80005f4:	4a1a      	ldr	r2, [pc, #104]	; (8000660 <GPIO_Init+0x1a0>)
 80005f6:	4293      	cmp	r3, r2
 80005f8:	d02b      	beq.n	8000652 <GPIO_Init+0x192>
 80005fa:	687b      	ldr	r3, [r7, #4]
 80005fc:	681b      	ldr	r3, [r3, #0]
 80005fe:	4a19      	ldr	r2, [pc, #100]	; (8000664 <GPIO_Init+0x1a4>)
 8000600:	4293      	cmp	r3, r2
 8000602:	d024      	beq.n	800064e <GPIO_Init+0x18e>
 8000604:	687b      	ldr	r3, [r7, #4]
 8000606:	681b      	ldr	r3, [r3, #0]
 8000608:	4a17      	ldr	r2, [pc, #92]	; (8000668 <GPIO_Init+0x1a8>)
 800060a:	4293      	cmp	r3, r2
 800060c:	d01d      	beq.n	800064a <GPIO_Init+0x18a>
 800060e:	687b      	ldr	r3, [r7, #4]
 8000610:	681b      	ldr	r3, [r3, #0]
 8000612:	4a16      	ldr	r2, [pc, #88]	; (800066c <GPIO_Init+0x1ac>)
 8000614:	4293      	cmp	r3, r2
 8000616:	d016      	beq.n	8000646 <GPIO_Init+0x186>
 8000618:	687b      	ldr	r3, [r7, #4]
 800061a:	681b      	ldr	r3, [r3, #0]
 800061c:	4a14      	ldr	r2, [pc, #80]	; (8000670 <GPIO_Init+0x1b0>)
 800061e:	4293      	cmp	r3, r2
 8000620:	d00f      	beq.n	8000642 <GPIO_Init+0x182>
 8000622:	687b      	ldr	r3, [r7, #4]
 8000624:	681b      	ldr	r3, [r3, #0]
 8000626:	4a13      	ldr	r2, [pc, #76]	; (8000674 <GPIO_Init+0x1b4>)
 8000628:	4293      	cmp	r3, r2
 800062a:	d008      	beq.n	800063e <GPIO_Init+0x17e>
 800062c:	687b      	ldr	r3, [r7, #4]
 800062e:	681b      	ldr	r3, [r3, #0]
 8000630:	4a11      	ldr	r2, [pc, #68]	; (8000678 <GPIO_Init+0x1b8>)
 8000632:	4293      	cmp	r3, r2
 8000634:	d101      	bne.n	800063a <GPIO_Init+0x17a>
 8000636:	2307      	movs	r3, #7
 8000638:	e021      	b.n	800067e <GPIO_Init+0x1be>
 800063a:	2300      	movs	r3, #0
 800063c:	e01f      	b.n	800067e <GPIO_Init+0x1be>
 800063e:	2306      	movs	r3, #6
 8000640:	e01d      	b.n	800067e <GPIO_Init+0x1be>
 8000642:	2305      	movs	r3, #5
 8000644:	e01b      	b.n	800067e <GPIO_Init+0x1be>
 8000646:	2304      	movs	r3, #4
 8000648:	e019      	b.n	800067e <GPIO_Init+0x1be>
 800064a:	2303      	movs	r3, #3
 800064c:	e017      	b.n	800067e <GPIO_Init+0x1be>
 800064e:	2302      	movs	r3, #2
 8000650:	e015      	b.n	800067e <GPIO_Init+0x1be>
 8000652:	2301      	movs	r3, #1
 8000654:	e013      	b.n	800067e <GPIO_Init+0x1be>
 8000656:	bf00      	nop
 8000658:	40013c00 	.word	0x40013c00
 800065c:	40020000 	.word	0x40020000
 8000660:	40020400 	.word	0x40020400
 8000664:	40020800 	.word	0x40020800
 8000668:	40020c00 	.word	0x40020c00
 800066c:	40021000 	.word	0x40021000
 8000670:	40021400 	.word	0x40021400
 8000674:	40021800 	.word	0x40021800
 8000678:	40021c00 	.word	0x40021c00
 800067c:	2300      	movs	r3, #0
 800067e:	f887 3021 	strb.w	r3, [r7, #33]	; 0x21

		SYSCFG_PCLK_EN();
 8000682:	4b75      	ldr	r3, [pc, #468]	; (8000858 <GPIO_Init+0x398>)
 8000684:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000686:	4a74      	ldr	r2, [pc, #464]	; (8000858 <GPIO_Init+0x398>)
 8000688:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800068c:	6453      	str	r3, [r2, #68]	; 0x44

		reset_value = (0xF << position);
 800068e:	f897 3022 	ldrb.w	r3, [r7, #34]	; 0x22
 8000692:	220f      	movs	r2, #15
 8000694:	fa02 f303 	lsl.w	r3, r2, r3
 8000698:	627b      	str	r3, [r7, #36]	; 0x24
		SYSCFG->EXTICR[index] &= ~(reset_value);
 800069a:	4a70      	ldr	r2, [pc, #448]	; (800085c <GPIO_Init+0x39c>)
 800069c:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 80006a0:	3302      	adds	r3, #2
 80006a2:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 80006a6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80006a8:	43da      	mvns	r2, r3
 80006aa:	486c      	ldr	r0, [pc, #432]	; (800085c <GPIO_Init+0x39c>)
 80006ac:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 80006b0:	400a      	ands	r2, r1
 80006b2:	3302      	adds	r3, #2
 80006b4:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
		reset_value = 0;
 80006b8:	2300      	movs	r3, #0
 80006ba:	627b      	str	r3, [r7, #36]	; 0x24

		SYSCFG->EXTICR[index] |= (port_code << position);
 80006bc:	4a67      	ldr	r2, [pc, #412]	; (800085c <GPIO_Init+0x39c>)
 80006be:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 80006c2:	3302      	adds	r3, #2
 80006c4:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80006c8:	f897 1021 	ldrb.w	r1, [r7, #33]	; 0x21
 80006cc:	f897 3022 	ldrb.w	r3, [r7, #34]	; 0x22
 80006d0:	fa01 f303 	lsl.w	r3, r1, r3
 80006d4:	4618      	mov	r0, r3
 80006d6:	4961      	ldr	r1, [pc, #388]	; (800085c <GPIO_Init+0x39c>)
 80006d8:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 80006dc:	4302      	orrs	r2, r0
 80006de:	3302      	adds	r3, #2
 80006e0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

		//enable the EXTI interrupt delivery using IMR
		EXTI->IMR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80006e4:	4b5e      	ldr	r3, [pc, #376]	; (8000860 <GPIO_Init+0x3a0>)
 80006e6:	681b      	ldr	r3, [r3, #0]
 80006e8:	687a      	ldr	r2, [r7, #4]
 80006ea:	7912      	ldrb	r2, [r2, #4]
 80006ec:	4611      	mov	r1, r2
 80006ee:	2201      	movs	r2, #1
 80006f0:	408a      	lsls	r2, r1
 80006f2:	4611      	mov	r1, r2
 80006f4:	4a5a      	ldr	r2, [pc, #360]	; (8000860 <GPIO_Init+0x3a0>)
 80006f6:	430b      	orrs	r3, r1
 80006f8:	6013      	str	r3, [r2, #0]
	}

	// reset, then set speed register
	reset_value = (0x3 << ((2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));
 80006fa:	687b      	ldr	r3, [r7, #4]
 80006fc:	791b      	ldrb	r3, [r3, #4]
 80006fe:	005b      	lsls	r3, r3, #1
 8000700:	2203      	movs	r2, #3
 8000702:	fa02 f303 	lsl.w	r3, r2, r3
 8000706:	627b      	str	r3, [r7, #36]	; 0x24
	pGPIOHandle->pGPIOx->OSPEEDER &= ~(reset_value);
 8000708:	687b      	ldr	r3, [r7, #4]
 800070a:	681b      	ldr	r3, [r3, #0]
 800070c:	6899      	ldr	r1, [r3, #8]
 800070e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000710:	43da      	mvns	r2, r3
 8000712:	687b      	ldr	r3, [r7, #4]
 8000714:	681b      	ldr	r3, [r3, #0]
 8000716:	400a      	ands	r2, r1
 8000718:	609a      	str	r2, [r3, #8]
	reset_value = 0;
 800071a:	2300      	movs	r3, #0
 800071c:	627b      	str	r3, [r7, #36]	; 0x24

	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_OUT){
 800071e:	687b      	ldr	r3, [r7, #4]
 8000720:	795b      	ldrb	r3, [r3, #5]
 8000722:	2b01      	cmp	r3, #1
 8000724:	d110      	bne.n	8000748 <GPIO_Init+0x288>
		uint32_t ospeedr_value = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000726:	687b      	ldr	r3, [r7, #4]
 8000728:	799b      	ldrb	r3, [r3, #6]
 800072a:	461a      	mov	r2, r3
 800072c:	687b      	ldr	r3, [r7, #4]
 800072e:	791b      	ldrb	r3, [r3, #4]
 8000730:	005b      	lsls	r3, r3, #1
 8000732:	fa02 f303 	lsl.w	r3, r2, r3
 8000736:	61bb      	str	r3, [r7, #24]
		pGPIOHandle->pGPIOx->OSPEEDER |= ospeedr_value;
 8000738:	687b      	ldr	r3, [r7, #4]
 800073a:	681b      	ldr	r3, [r3, #0]
 800073c:	6899      	ldr	r1, [r3, #8]
 800073e:	687b      	ldr	r3, [r7, #4]
 8000740:	681b      	ldr	r3, [r3, #0]
 8000742:	69ba      	ldr	r2, [r7, #24]
 8000744:	430a      	orrs	r2, r1
 8000746:	609a      	str	r2, [r3, #8]
	}
	//reset, then set pupd register
	reset_value = (0x3 << ((2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));
 8000748:	687b      	ldr	r3, [r7, #4]
 800074a:	791b      	ldrb	r3, [r3, #4]
 800074c:	005b      	lsls	r3, r3, #1
 800074e:	2203      	movs	r2, #3
 8000750:	fa02 f303 	lsl.w	r3, r2, r3
 8000754:	627b      	str	r3, [r7, #36]	; 0x24
	pGPIOHandle->pGPIOx->PUPDR &= ~(reset_value);
 8000756:	687b      	ldr	r3, [r7, #4]
 8000758:	681b      	ldr	r3, [r3, #0]
 800075a:	68d9      	ldr	r1, [r3, #12]
 800075c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800075e:	43da      	mvns	r2, r3
 8000760:	687b      	ldr	r3, [r7, #4]
 8000762:	681b      	ldr	r3, [r3, #0]
 8000764:	400a      	ands	r2, r1
 8000766:	60da      	str	r2, [r3, #12]
	reset_value = 0;
 8000768:	2300      	movs	r3, #0
 800076a:	627b      	str	r3, [r7, #36]	; 0x24

	uint32_t pupdr_value = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800076c:	687b      	ldr	r3, [r7, #4]
 800076e:	79db      	ldrb	r3, [r3, #7]
 8000770:	461a      	mov	r2, r3
 8000772:	687b      	ldr	r3, [r7, #4]
 8000774:	791b      	ldrb	r3, [r3, #4]
 8000776:	005b      	lsls	r3, r3, #1
 8000778:	fa02 f303 	lsl.w	r3, r2, r3
 800077c:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR |= pupdr_value;
 800077e:	687b      	ldr	r3, [r7, #4]
 8000780:	681b      	ldr	r3, [r3, #0]
 8000782:	68d9      	ldr	r1, [r3, #12]
 8000784:	687b      	ldr	r3, [r7, #4]
 8000786:	681b      	ldr	r3, [r3, #0]
 8000788:	697a      	ldr	r2, [r7, #20]
 800078a:	430a      	orrs	r2, r1
 800078c:	60da      	str	r2, [r3, #12]

	//reset, then set output type register
	reset_value = (0x1 << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800078e:	687b      	ldr	r3, [r7, #4]
 8000790:	791b      	ldrb	r3, [r3, #4]
 8000792:	461a      	mov	r2, r3
 8000794:	2301      	movs	r3, #1
 8000796:	4093      	lsls	r3, r2
 8000798:	627b      	str	r3, [r7, #36]	; 0x24
	pGPIOHandle->pGPIOx->OTYPER &= ~(reset_value);
 800079a:	687b      	ldr	r3, [r7, #4]
 800079c:	681b      	ldr	r3, [r3, #0]
 800079e:	6859      	ldr	r1, [r3, #4]
 80007a0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80007a2:	43da      	mvns	r2, r3
 80007a4:	687b      	ldr	r3, [r7, #4]
 80007a6:	681b      	ldr	r3, [r3, #0]
 80007a8:	400a      	ands	r2, r1
 80007aa:	605a      	str	r2, [r3, #4]
	reset_value = 0;
 80007ac:	2300      	movs	r3, #0
 80007ae:	627b      	str	r3, [r7, #36]	; 0x24

	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_OUT){
 80007b0:	687b      	ldr	r3, [r7, #4]
 80007b2:	795b      	ldrb	r3, [r3, #5]
 80007b4:	2b01      	cmp	r3, #1
 80007b6:	d10f      	bne.n	80007d8 <GPIO_Init+0x318>
		uint32_t optyper_value = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80007b8:	687b      	ldr	r3, [r7, #4]
 80007ba:	7a1b      	ldrb	r3, [r3, #8]
 80007bc:	461a      	mov	r2, r3
 80007be:	687b      	ldr	r3, [r7, #4]
 80007c0:	791b      	ldrb	r3, [r3, #4]
 80007c2:	fa02 f303 	lsl.w	r3, r2, r3
 80007c6:	613b      	str	r3, [r7, #16]
		pGPIOHandle->pGPIOx->OTYPER |= optyper_value;
 80007c8:	687b      	ldr	r3, [r7, #4]
 80007ca:	681b      	ldr	r3, [r3, #0]
 80007cc:	6859      	ldr	r1, [r3, #4]
 80007ce:	687b      	ldr	r3, [r7, #4]
 80007d0:	681b      	ldr	r3, [r3, #0]
 80007d2:	693a      	ldr	r2, [r7, #16]
 80007d4:	430a      	orrs	r2, r1
 80007d6:	605a      	str	r2, [r3, #4]
	}
	//reset, then set altfn register
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode == GPIO_MODE_ALTFN){
 80007d8:	687b      	ldr	r3, [r7, #4]
 80007da:	7a5b      	ldrb	r3, [r3, #9]
 80007dc:	2b02      	cmp	r3, #2
 80007de:	d135      	bne.n	800084c <GPIO_Init+0x38c>
		uint8_t index = (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8);
 80007e0:	687b      	ldr	r3, [r7, #4]
 80007e2:	791b      	ldrb	r3, [r3, #4]
 80007e4:	08db      	lsrs	r3, r3, #3
 80007e6:	73fb      	strb	r3, [r7, #15]
		uint8_t position = ((pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8) * 4);
 80007e8:	687b      	ldr	r3, [r7, #4]
 80007ea:	791b      	ldrb	r3, [r3, #4]
 80007ec:	f003 0307 	and.w	r3, r3, #7
 80007f0:	b2db      	uxtb	r3, r3
 80007f2:	009b      	lsls	r3, r3, #2
 80007f4:	73bb      	strb	r3, [r7, #14]

		//reset
		reset_value = (0xF << position);
 80007f6:	7bbb      	ldrb	r3, [r7, #14]
 80007f8:	220f      	movs	r2, #15
 80007fa:	fa02 f303 	lsl.w	r3, r2, r3
 80007fe:	627b      	str	r3, [r7, #36]	; 0x24
		pGPIOHandle->pGPIOx->AFR[index] &= ~(reset_value);
 8000800:	687b      	ldr	r3, [r7, #4]
 8000802:	681b      	ldr	r3, [r3, #0]
 8000804:	7bfa      	ldrb	r2, [r7, #15]
 8000806:	3208      	adds	r2, #8
 8000808:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800080c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800080e:	43d9      	mvns	r1, r3
 8000810:	687b      	ldr	r3, [r7, #4]
 8000812:	681b      	ldr	r3, [r3, #0]
 8000814:	7bfa      	ldrb	r2, [r7, #15]
 8000816:	4001      	ands	r1, r0
 8000818:	3208      	adds	r2, #8
 800081a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		reset_value = 0;
 800081e:	2300      	movs	r3, #0
 8000820:	627b      	str	r3, [r7, #36]	; 0x24

		//set
		uint32_t afr_value = (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << position);
 8000822:	687b      	ldr	r3, [r7, #4]
 8000824:	7a5b      	ldrb	r3, [r3, #9]
 8000826:	461a      	mov	r2, r3
 8000828:	7bbb      	ldrb	r3, [r7, #14]
 800082a:	fa02 f303 	lsl.w	r3, r2, r3
 800082e:	60bb      	str	r3, [r7, #8]
		pGPIOHandle->pGPIOx->AFR[index] |= afr_value;
 8000830:	687b      	ldr	r3, [r7, #4]
 8000832:	681b      	ldr	r3, [r3, #0]
 8000834:	7bfa      	ldrb	r2, [r7, #15]
 8000836:	3208      	adds	r2, #8
 8000838:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800083c:	687b      	ldr	r3, [r7, #4]
 800083e:	681b      	ldr	r3, [r3, #0]
 8000840:	7bfa      	ldrb	r2, [r7, #15]
 8000842:	68b9      	ldr	r1, [r7, #8]
 8000844:	4301      	orrs	r1, r0
 8000846:	3208      	adds	r2, #8
 8000848:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}
}
 800084c:	bf00      	nop
 800084e:	372c      	adds	r7, #44	; 0x2c
 8000850:	46bd      	mov	sp, r7
 8000852:	bc80      	pop	{r7}
 8000854:	4770      	bx	lr
 8000856:	bf00      	nop
 8000858:	40023800 	.word	0x40023800
 800085c:	40013800 	.word	0x40013800
 8000860:	40013c00 	.word	0x40013c00

08000864 <GPIO_ToggleOutputPin>:
 * @return				- none
 *
 * @note				- none
 *
 */
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber){
 8000864:	b480      	push	{r7}
 8000866:	b083      	sub	sp, #12
 8000868:	af00      	add	r7, sp, #0
 800086a:	6078      	str	r0, [r7, #4]
 800086c:	460b      	mov	r3, r1
 800086e:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR = pGPIOx->ODR ^ (1 << PinNumber);
 8000870:	687b      	ldr	r3, [r7, #4]
 8000872:	695b      	ldr	r3, [r3, #20]
 8000874:	78fa      	ldrb	r2, [r7, #3]
 8000876:	2101      	movs	r1, #1
 8000878:	fa01 f202 	lsl.w	r2, r1, r2
 800087c:	405a      	eors	r2, r3
 800087e:	687b      	ldr	r3, [r7, #4]
 8000880:	615a      	str	r2, [r3, #20]
}
 8000882:	bf00      	nop
 8000884:	370c      	adds	r7, #12
 8000886:	46bd      	mov	sp, r7
 8000888:	bc80      	pop	{r7}
 800088a:	4770      	bx	lr

0800088c <GPIO_IRQInterruptConfig>:
 * @return				- none
 *
 * @note				- none
 *
 */
void GPIO_IRQInterruptConfig(uint8_t IRQNumber, uint8_t EnorDi){
 800088c:	b480      	push	{r7}
 800088e:	b083      	sub	sp, #12
 8000890:	af00      	add	r7, sp, #0
 8000892:	4603      	mov	r3, r0
 8000894:	460a      	mov	r2, r1
 8000896:	71fb      	strb	r3, [r7, #7]
 8000898:	4613      	mov	r3, r2
 800089a:	71bb      	strb	r3, [r7, #6]
	if(EnorDi == ENABLE){
 800089c:	79bb      	ldrb	r3, [r7, #6]
 800089e:	2b01      	cmp	r3, #1
 80008a0:	d133      	bne.n	800090a <GPIO_IRQInterruptConfig+0x7e>
		if(IRQNumber <= 31){
 80008a2:	79fb      	ldrb	r3, [r7, #7]
 80008a4:	2b1f      	cmp	r3, #31
 80008a6:	d80a      	bhi.n	80008be <GPIO_IRQInterruptConfig+0x32>
			*NVIC_ISER0 |= (1 << IRQNumber);
 80008a8:	4b34      	ldr	r3, [pc, #208]	; (800097c <GPIO_IRQInterruptConfig+0xf0>)
 80008aa:	681b      	ldr	r3, [r3, #0]
 80008ac:	79fa      	ldrb	r2, [r7, #7]
 80008ae:	2101      	movs	r1, #1
 80008b0:	fa01 f202 	lsl.w	r2, r1, r2
 80008b4:	4611      	mov	r1, r2
 80008b6:	4a31      	ldr	r2, [pc, #196]	; (800097c <GPIO_IRQInterruptConfig+0xf0>)
 80008b8:	430b      	orrs	r3, r1
 80008ba:	6013      	str	r3, [r2, #0]
			*NVIC_ICER1 |= (1 << IRQNumber % 32);
		}else if(IRQNumber > 63 && IRQNumber < 96){
			*NVIC_ICER2 |= (1 << IRQNumber % 32);
		}
	}
}
 80008bc:	e059      	b.n	8000972 <GPIO_IRQInterruptConfig+0xe6>
		}else if(IRQNumber > 31 && IRQNumber <= 63){
 80008be:	79fb      	ldrb	r3, [r7, #7]
 80008c0:	2b1f      	cmp	r3, #31
 80008c2:	d90f      	bls.n	80008e4 <GPIO_IRQInterruptConfig+0x58>
 80008c4:	79fb      	ldrb	r3, [r7, #7]
 80008c6:	2b3f      	cmp	r3, #63	; 0x3f
 80008c8:	d80c      	bhi.n	80008e4 <GPIO_IRQInterruptConfig+0x58>
			*NVIC_ISER1 |= (1 << (IRQNumber % 32));
 80008ca:	4b2d      	ldr	r3, [pc, #180]	; (8000980 <GPIO_IRQInterruptConfig+0xf4>)
 80008cc:	681b      	ldr	r3, [r3, #0]
 80008ce:	79fa      	ldrb	r2, [r7, #7]
 80008d0:	f002 021f 	and.w	r2, r2, #31
 80008d4:	2101      	movs	r1, #1
 80008d6:	fa01 f202 	lsl.w	r2, r1, r2
 80008da:	4611      	mov	r1, r2
 80008dc:	4a28      	ldr	r2, [pc, #160]	; (8000980 <GPIO_IRQInterruptConfig+0xf4>)
 80008de:	430b      	orrs	r3, r1
 80008e0:	6013      	str	r3, [r2, #0]
 80008e2:	e046      	b.n	8000972 <GPIO_IRQInterruptConfig+0xe6>
		}else if(IRQNumber > 63 && IRQNumber < 96){
 80008e4:	79fb      	ldrb	r3, [r7, #7]
 80008e6:	2b3f      	cmp	r3, #63	; 0x3f
 80008e8:	d943      	bls.n	8000972 <GPIO_IRQInterruptConfig+0xe6>
 80008ea:	79fb      	ldrb	r3, [r7, #7]
 80008ec:	2b5f      	cmp	r3, #95	; 0x5f
 80008ee:	d840      	bhi.n	8000972 <GPIO_IRQInterruptConfig+0xe6>
			*NVIC_ISER2 |= (1 << (IRQNumber % 32));
 80008f0:	4b24      	ldr	r3, [pc, #144]	; (8000984 <GPIO_IRQInterruptConfig+0xf8>)
 80008f2:	681b      	ldr	r3, [r3, #0]
 80008f4:	79fa      	ldrb	r2, [r7, #7]
 80008f6:	f002 021f 	and.w	r2, r2, #31
 80008fa:	2101      	movs	r1, #1
 80008fc:	fa01 f202 	lsl.w	r2, r1, r2
 8000900:	4611      	mov	r1, r2
 8000902:	4a20      	ldr	r2, [pc, #128]	; (8000984 <GPIO_IRQInterruptConfig+0xf8>)
 8000904:	430b      	orrs	r3, r1
 8000906:	6013      	str	r3, [r2, #0]
}
 8000908:	e033      	b.n	8000972 <GPIO_IRQInterruptConfig+0xe6>
		if(IRQNumber <= 31){
 800090a:	79fb      	ldrb	r3, [r7, #7]
 800090c:	2b1f      	cmp	r3, #31
 800090e:	d80a      	bhi.n	8000926 <GPIO_IRQInterruptConfig+0x9a>
			*NVIC_ICER0 |= (1 << IRQNumber);
 8000910:	4b1d      	ldr	r3, [pc, #116]	; (8000988 <GPIO_IRQInterruptConfig+0xfc>)
 8000912:	681b      	ldr	r3, [r3, #0]
 8000914:	79fa      	ldrb	r2, [r7, #7]
 8000916:	2101      	movs	r1, #1
 8000918:	fa01 f202 	lsl.w	r2, r1, r2
 800091c:	4611      	mov	r1, r2
 800091e:	4a1a      	ldr	r2, [pc, #104]	; (8000988 <GPIO_IRQInterruptConfig+0xfc>)
 8000920:	430b      	orrs	r3, r1
 8000922:	6013      	str	r3, [r2, #0]
}
 8000924:	e025      	b.n	8000972 <GPIO_IRQInterruptConfig+0xe6>
		}else if(IRQNumber > 31 && IRQNumber <= 63){
 8000926:	79fb      	ldrb	r3, [r7, #7]
 8000928:	2b1f      	cmp	r3, #31
 800092a:	d90f      	bls.n	800094c <GPIO_IRQInterruptConfig+0xc0>
 800092c:	79fb      	ldrb	r3, [r7, #7]
 800092e:	2b3f      	cmp	r3, #63	; 0x3f
 8000930:	d80c      	bhi.n	800094c <GPIO_IRQInterruptConfig+0xc0>
			*NVIC_ICER1 |= (1 << IRQNumber % 32);
 8000932:	4b16      	ldr	r3, [pc, #88]	; (800098c <GPIO_IRQInterruptConfig+0x100>)
 8000934:	681b      	ldr	r3, [r3, #0]
 8000936:	79fa      	ldrb	r2, [r7, #7]
 8000938:	f002 021f 	and.w	r2, r2, #31
 800093c:	2101      	movs	r1, #1
 800093e:	fa01 f202 	lsl.w	r2, r1, r2
 8000942:	4611      	mov	r1, r2
 8000944:	4a11      	ldr	r2, [pc, #68]	; (800098c <GPIO_IRQInterruptConfig+0x100>)
 8000946:	430b      	orrs	r3, r1
 8000948:	6013      	str	r3, [r2, #0]
 800094a:	e012      	b.n	8000972 <GPIO_IRQInterruptConfig+0xe6>
		}else if(IRQNumber > 63 && IRQNumber < 96){
 800094c:	79fb      	ldrb	r3, [r7, #7]
 800094e:	2b3f      	cmp	r3, #63	; 0x3f
 8000950:	d90f      	bls.n	8000972 <GPIO_IRQInterruptConfig+0xe6>
 8000952:	79fb      	ldrb	r3, [r7, #7]
 8000954:	2b5f      	cmp	r3, #95	; 0x5f
 8000956:	d80c      	bhi.n	8000972 <GPIO_IRQInterruptConfig+0xe6>
			*NVIC_ICER2 |= (1 << IRQNumber % 32);
 8000958:	4b0d      	ldr	r3, [pc, #52]	; (8000990 <GPIO_IRQInterruptConfig+0x104>)
 800095a:	681b      	ldr	r3, [r3, #0]
 800095c:	79fa      	ldrb	r2, [r7, #7]
 800095e:	f002 021f 	and.w	r2, r2, #31
 8000962:	2101      	movs	r1, #1
 8000964:	fa01 f202 	lsl.w	r2, r1, r2
 8000968:	4611      	mov	r1, r2
 800096a:	4a09      	ldr	r2, [pc, #36]	; (8000990 <GPIO_IRQInterruptConfig+0x104>)
 800096c:	430b      	orrs	r3, r1
 800096e:	6013      	str	r3, [r2, #0]
}
 8000970:	e7ff      	b.n	8000972 <GPIO_IRQInterruptConfig+0xe6>
 8000972:	bf00      	nop
 8000974:	370c      	adds	r7, #12
 8000976:	46bd      	mov	sp, r7
 8000978:	bc80      	pop	{r7}
 800097a:	4770      	bx	lr
 800097c:	e000e100 	.word	0xe000e100
 8000980:	e000e104 	.word	0xe000e104
 8000984:	e000e108 	.word	0xe000e108
 8000988:	e000e180 	.word	0xe000e180
 800098c:	e000e184 	.word	0xe000e184
 8000990:	e000e188 	.word	0xe000e188

08000994 <GPIO_IRQHandling>:
 * @return				- none
 *
 * @note				- none
 *
 */
void GPIO_IRQHandling(uint8_t PinNumber){
 8000994:	b480      	push	{r7}
 8000996:	b083      	sub	sp, #12
 8000998:	af00      	add	r7, sp, #0
 800099a:	4603      	mov	r3, r0
 800099c:	71fb      	strb	r3, [r7, #7]
	// clear the EXTI PR register corresponding to the pin number
	if(EXTI->PR & (1 << PinNumber)){
 800099e:	4b0c      	ldr	r3, [pc, #48]	; (80009d0 <GPIO_IRQHandling+0x3c>)
 80009a0:	695b      	ldr	r3, [r3, #20]
 80009a2:	79fa      	ldrb	r2, [r7, #7]
 80009a4:	2101      	movs	r1, #1
 80009a6:	fa01 f202 	lsl.w	r2, r1, r2
 80009aa:	4013      	ands	r3, r2
 80009ac:	2b00      	cmp	r3, #0
 80009ae:	d009      	beq.n	80009c4 <GPIO_IRQHandling+0x30>
		EXTI->PR |= (1 << PinNumber);
 80009b0:	4b07      	ldr	r3, [pc, #28]	; (80009d0 <GPIO_IRQHandling+0x3c>)
 80009b2:	695b      	ldr	r3, [r3, #20]
 80009b4:	79fa      	ldrb	r2, [r7, #7]
 80009b6:	2101      	movs	r1, #1
 80009b8:	fa01 f202 	lsl.w	r2, r1, r2
 80009bc:	4611      	mov	r1, r2
 80009be:	4a04      	ldr	r2, [pc, #16]	; (80009d0 <GPIO_IRQHandling+0x3c>)
 80009c0:	430b      	orrs	r3, r1
 80009c2:	6153      	str	r3, [r2, #20]
	}
}
 80009c4:	bf00      	nop
 80009c6:	370c      	adds	r7, #12
 80009c8:	46bd      	mov	sp, r7
 80009ca:	bc80      	pop	{r7}
 80009cc:	4770      	bx	lr
 80009ce:	bf00      	nop
 80009d0:	40013c00 	.word	0x40013c00

080009d4 <__libc_init_array>:
 80009d4:	b570      	push	{r4, r5, r6, lr}
 80009d6:	4e0d      	ldr	r6, [pc, #52]	; (8000a0c <__libc_init_array+0x38>)
 80009d8:	4c0d      	ldr	r4, [pc, #52]	; (8000a10 <__libc_init_array+0x3c>)
 80009da:	1ba4      	subs	r4, r4, r6
 80009dc:	10a4      	asrs	r4, r4, #2
 80009de:	2500      	movs	r5, #0
 80009e0:	42a5      	cmp	r5, r4
 80009e2:	d109      	bne.n	80009f8 <__libc_init_array+0x24>
 80009e4:	4e0b      	ldr	r6, [pc, #44]	; (8000a14 <__libc_init_array+0x40>)
 80009e6:	4c0c      	ldr	r4, [pc, #48]	; (8000a18 <__libc_init_array+0x44>)
 80009e8:	f000 f820 	bl	8000a2c <_init>
 80009ec:	1ba4      	subs	r4, r4, r6
 80009ee:	10a4      	asrs	r4, r4, #2
 80009f0:	2500      	movs	r5, #0
 80009f2:	42a5      	cmp	r5, r4
 80009f4:	d105      	bne.n	8000a02 <__libc_init_array+0x2e>
 80009f6:	bd70      	pop	{r4, r5, r6, pc}
 80009f8:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80009fc:	4798      	blx	r3
 80009fe:	3501      	adds	r5, #1
 8000a00:	e7ee      	b.n	80009e0 <__libc_init_array+0xc>
 8000a02:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000a06:	4798      	blx	r3
 8000a08:	3501      	adds	r5, #1
 8000a0a:	e7f2      	b.n	80009f2 <__libc_init_array+0x1e>
 8000a0c:	08000a44 	.word	0x08000a44
 8000a10:	08000a44 	.word	0x08000a44
 8000a14:	08000a44 	.word	0x08000a44
 8000a18:	08000a48 	.word	0x08000a48

08000a1c <memset>:
 8000a1c:	4402      	add	r2, r0
 8000a1e:	4603      	mov	r3, r0
 8000a20:	4293      	cmp	r3, r2
 8000a22:	d100      	bne.n	8000a26 <memset+0xa>
 8000a24:	4770      	bx	lr
 8000a26:	f803 1b01 	strb.w	r1, [r3], #1
 8000a2a:	e7f9      	b.n	8000a20 <memset+0x4>

08000a2c <_init>:
 8000a2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a2e:	bf00      	nop
 8000a30:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000a32:	bc08      	pop	{r3}
 8000a34:	469e      	mov	lr, r3
 8000a36:	4770      	bx	lr

08000a38 <_fini>:
 8000a38:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a3a:	bf00      	nop
 8000a3c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000a3e:	bc08      	pop	{r3}
 8000a40:	469e      	mov	lr, r3
 8000a42:	4770      	bx	lr


stm32f446_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000534  080001c4  080001c4  000101c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080006f8  08000700  00010700  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080006f8  080006f8  00010700  2**0
                  CONTENTS
  4 .ARM          00000000  080006f8  080006f8  00010700  2**0
                  CONTENTS
  5 .preinit_array 00000000  080006f8  08000700  00010700  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080006f8  080006f8  000106f8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080006fc  080006fc  000106fc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010700  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000700  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000700  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00010700  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000816  00000000  00000000  0001072a  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00000222  00000000  00000000  00010f40  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 000000a8  00000000  00000000  00011168  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000080  00000000  00000000  00011210  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00001320  00000000  00000000  00011290  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   000009b5  00000000  00000000  000125b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    000051d5  00000000  00000000  00012f65  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0001813a  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000001d4  00000000  00000000  000181b8  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	; (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	080006e0 	.word	0x080006e0

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	; (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	; (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	; (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	080006e0 	.word	0x080006e0

08000204 <delay>:
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

#include "stm32f446.h"

void delay(){
 8000204:	b480      	push	{r7}
 8000206:	b083      	sub	sp, #12
 8000208:	af00      	add	r7, sp, #0
	for(uint32_t i = 0; i < 500000; i++);
 800020a:	2300      	movs	r3, #0
 800020c:	607b      	str	r3, [r7, #4]
 800020e:	e002      	b.n	8000216 <delay+0x12>
 8000210:	687b      	ldr	r3, [r7, #4]
 8000212:	3301      	adds	r3, #1
 8000214:	607b      	str	r3, [r7, #4]
 8000216:	687b      	ldr	r3, [r7, #4]
 8000218:	4a03      	ldr	r2, [pc, #12]	; (8000228 <delay+0x24>)
 800021a:	4293      	cmp	r3, r2
 800021c:	d9f8      	bls.n	8000210 <delay+0xc>
}
 800021e:	bf00      	nop
 8000220:	370c      	adds	r7, #12
 8000222:	46bd      	mov	sp, r7
 8000224:	bc80      	pop	{r7}
 8000226:	4770      	bx	lr
 8000228:	0007a11f 	.word	0x0007a11f

0800022c <main>:

int main(void)
{
 800022c:	b580      	push	{r7, lr}
 800022e:	b088      	sub	sp, #32
 8000230:	af00      	add	r7, sp, #0
	GPIO_Handle_t gpioa_led;
	gpioa_led.pGPIOx = GPIOA;
 8000232:	4b1b      	ldr	r3, [pc, #108]	; (80002a0 <main+0x74>)
 8000234:	613b      	str	r3, [r7, #16]
	gpioa_led.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_10;
 8000236:	230a      	movs	r3, #10
 8000238:	753b      	strb	r3, [r7, #20]
	gpioa_led.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 800023a:	2301      	movs	r3, #1
 800023c:	757b      	strb	r3, [r7, #21]
	gpioa_led.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 800023e:	2300      	movs	r3, #0
 8000240:	763b      	strb	r3, [r7, #24]

	GPIO_Handle_t gpiob_button;
	gpiob_button.pGPIOx = GPIOB;
 8000242:	4b18      	ldr	r3, [pc, #96]	; (80002a4 <main+0x78>)
 8000244:	607b      	str	r3, [r7, #4]

	gpiob_button.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_12;
 8000246:	230c      	movs	r3, #12
 8000248:	723b      	strb	r3, [r7, #8]
	gpiob_button.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IN;
 800024a:	2300      	movs	r3, #0
 800024c:	727b      	strb	r3, [r7, #9]
	gpiob_button.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PU;
 800024e:	2301      	movs	r3, #1
 8000250:	72fb      	strb	r3, [r7, #11]

	GPIO_PeriClockControl(gpioa_led.pGPIOx, ENABLE);
 8000252:	693b      	ldr	r3, [r7, #16]
 8000254:	2101      	movs	r1, #1
 8000256:	4618      	mov	r0, r3
 8000258:	f000 f850 	bl	80002fc <GPIO_PeriClockControl>
	GPIO_PeriClockControl(gpiob_button.pGPIOx, ENABLE);
 800025c:	687b      	ldr	r3, [r7, #4]
 800025e:	2101      	movs	r1, #1
 8000260:	4618      	mov	r0, r3
 8000262:	f000 f84b 	bl	80002fc <GPIO_PeriClockControl>

	GPIO_Init(&gpioa_led);
 8000266:	f107 0310 	add.w	r3, r7, #16
 800026a:	4618      	mov	r0, r3
 800026c:	f000 f918 	bl	80004a0 <GPIO_Init>
	GPIO_Init(&gpiob_button);
 8000270:	1d3b      	adds	r3, r7, #4
 8000272:	4618      	mov	r0, r3
 8000274:	f000 f914 	bl	80004a0 <GPIO_Init>

	while(1){
		uint8_t button_value = GPIO_ReadFromInputPin(gpiob_button.pGPIOx, gpiob_button.GPIO_PinConfig.GPIO_PinNumber);
 8000278:	687b      	ldr	r3, [r7, #4]
 800027a:	7a3a      	ldrb	r2, [r7, #8]
 800027c:	4611      	mov	r1, r2
 800027e:	4618      	mov	r0, r3
 8000280:	f000 f9e1 	bl	8000646 <GPIO_ReadFromInputPin>
 8000284:	4603      	mov	r3, r0
 8000286:	77fb      	strb	r3, [r7, #31]

		if(!button_value){
 8000288:	7ffb      	ldrb	r3, [r7, #31]
 800028a:	2b00      	cmp	r3, #0
 800028c:	d1f4      	bne.n	8000278 <main+0x4c>
			GPIO_ToggleOutputPin(gpioa_led.pGPIOx, gpioa_led.GPIO_PinConfig.GPIO_PinNumber);
 800028e:	693b      	ldr	r3, [r7, #16]
 8000290:	7d3a      	ldrb	r2, [r7, #20]
 8000292:	4611      	mov	r1, r2
 8000294:	4618      	mov	r0, r3
 8000296:	f000 f9eb 	bl	8000670 <GPIO_ToggleOutputPin>
			delay();
 800029a:	f7ff ffb3 	bl	8000204 <delay>
	while(1){
 800029e:	e7eb      	b.n	8000278 <main+0x4c>
 80002a0:	40020000 	.word	0x40020000
 80002a4:	40020400 	.word	0x40020400

080002a8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002a8:	480d      	ldr	r0, [pc, #52]	; (80002e0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002aa:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002ac:	480d      	ldr	r0, [pc, #52]	; (80002e4 <LoopForever+0x6>)
  ldr r1, =_edata
 80002ae:	490e      	ldr	r1, [pc, #56]	; (80002e8 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002b0:	4a0e      	ldr	r2, [pc, #56]	; (80002ec <LoopForever+0xe>)
  movs r3, #0
 80002b2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002b4:	e002      	b.n	80002bc <LoopCopyDataInit>

080002b6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002b6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002b8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002ba:	3304      	adds	r3, #4

080002bc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002bc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002be:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002c0:	d3f9      	bcc.n	80002b6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002c2:	4a0b      	ldr	r2, [pc, #44]	; (80002f0 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002c4:	4c0b      	ldr	r4, [pc, #44]	; (80002f4 <LoopForever+0x16>)
  movs r3, #0
 80002c6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002c8:	e001      	b.n	80002ce <LoopFillZerobss>

080002ca <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002ca:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002cc:	3204      	adds	r2, #4

080002ce <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002ce:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002d0:	d3fb      	bcc.n	80002ca <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 80002d2:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 80002d6:	f000 f9df 	bl	8000698 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002da:	f7ff ffa7 	bl	800022c <main>

080002de <LoopForever>:

LoopForever:
    b LoopForever
 80002de:	e7fe      	b.n	80002de <LoopForever>
  ldr   r0, =_estack
 80002e0:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002e4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002e8:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002ec:	08000700 	.word	0x08000700
  ldr r2, =_sbss
 80002f0:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002f4:	2000001c 	.word	0x2000001c

080002f8 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002f8:	e7fe      	b.n	80002f8 <ADC_IRQHandler>
	...

080002fc <GPIO_PeriClockControl>:
 * @return				- none
 *
 * @note				- none
 *
 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi){
 80002fc:	b480      	push	{r7}
 80002fe:	b083      	sub	sp, #12
 8000300:	af00      	add	r7, sp, #0
 8000302:	6078      	str	r0, [r7, #4]
 8000304:	460b      	mov	r3, r1
 8000306:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE){
 8000308:	78fb      	ldrb	r3, [r7, #3]
 800030a:	2b01      	cmp	r3, #1
 800030c:	d157      	bne.n	80003be <GPIO_PeriClockControl+0xc2>
		if(pGPIOx == GPIOA){
 800030e:	687b      	ldr	r3, [r7, #4]
 8000310:	4a5a      	ldr	r2, [pc, #360]	; (800047c <GPIO_PeriClockControl+0x180>)
 8000312:	4293      	cmp	r3, r2
 8000314:	d106      	bne.n	8000324 <GPIO_PeriClockControl+0x28>
			GPIOA_PCLK_EN();
 8000316:	4b5a      	ldr	r3, [pc, #360]	; (8000480 <GPIO_PeriClockControl+0x184>)
 8000318:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800031a:	4a59      	ldr	r2, [pc, #356]	; (8000480 <GPIO_PeriClockControl+0x184>)
 800031c:	f043 0301 	orr.w	r3, r3, #1
 8000320:	6313      	str	r3, [r2, #48]	; 0x30
			GPIOG_PCLK_DI();
		} else if(pGPIOx == GPIOH){
			GPIOH_PCLK_DI();
		}
	}
}
 8000322:	e0a6      	b.n	8000472 <GPIO_PeriClockControl+0x176>
		} else if(pGPIOx == GPIOB){
 8000324:	687b      	ldr	r3, [r7, #4]
 8000326:	4a57      	ldr	r2, [pc, #348]	; (8000484 <GPIO_PeriClockControl+0x188>)
 8000328:	4293      	cmp	r3, r2
 800032a:	d106      	bne.n	800033a <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 800032c:	4b54      	ldr	r3, [pc, #336]	; (8000480 <GPIO_PeriClockControl+0x184>)
 800032e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000330:	4a53      	ldr	r2, [pc, #332]	; (8000480 <GPIO_PeriClockControl+0x184>)
 8000332:	f043 0302 	orr.w	r3, r3, #2
 8000336:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000338:	e09b      	b.n	8000472 <GPIO_PeriClockControl+0x176>
		} else if(pGPIOx == GPIOC){
 800033a:	687b      	ldr	r3, [r7, #4]
 800033c:	4a52      	ldr	r2, [pc, #328]	; (8000488 <GPIO_PeriClockControl+0x18c>)
 800033e:	4293      	cmp	r3, r2
 8000340:	d106      	bne.n	8000350 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 8000342:	4b4f      	ldr	r3, [pc, #316]	; (8000480 <GPIO_PeriClockControl+0x184>)
 8000344:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000346:	4a4e      	ldr	r2, [pc, #312]	; (8000480 <GPIO_PeriClockControl+0x184>)
 8000348:	f043 0304 	orr.w	r3, r3, #4
 800034c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800034e:	e090      	b.n	8000472 <GPIO_PeriClockControl+0x176>
		} else if(pGPIOx == GPIOD){
 8000350:	687b      	ldr	r3, [r7, #4]
 8000352:	4a4e      	ldr	r2, [pc, #312]	; (800048c <GPIO_PeriClockControl+0x190>)
 8000354:	4293      	cmp	r3, r2
 8000356:	d106      	bne.n	8000366 <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 8000358:	4b49      	ldr	r3, [pc, #292]	; (8000480 <GPIO_PeriClockControl+0x184>)
 800035a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800035c:	4a48      	ldr	r2, [pc, #288]	; (8000480 <GPIO_PeriClockControl+0x184>)
 800035e:	f043 0308 	orr.w	r3, r3, #8
 8000362:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000364:	e085      	b.n	8000472 <GPIO_PeriClockControl+0x176>
		} else if(pGPIOx == GPIOE){
 8000366:	687b      	ldr	r3, [r7, #4]
 8000368:	4a49      	ldr	r2, [pc, #292]	; (8000490 <GPIO_PeriClockControl+0x194>)
 800036a:	4293      	cmp	r3, r2
 800036c:	d106      	bne.n	800037c <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 800036e:	4b44      	ldr	r3, [pc, #272]	; (8000480 <GPIO_PeriClockControl+0x184>)
 8000370:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000372:	4a43      	ldr	r2, [pc, #268]	; (8000480 <GPIO_PeriClockControl+0x184>)
 8000374:	f043 0310 	orr.w	r3, r3, #16
 8000378:	6313      	str	r3, [r2, #48]	; 0x30
}
 800037a:	e07a      	b.n	8000472 <GPIO_PeriClockControl+0x176>
		} else if(pGPIOx == GPIOF){
 800037c:	687b      	ldr	r3, [r7, #4]
 800037e:	4a45      	ldr	r2, [pc, #276]	; (8000494 <GPIO_PeriClockControl+0x198>)
 8000380:	4293      	cmp	r3, r2
 8000382:	d106      	bne.n	8000392 <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 8000384:	4b3e      	ldr	r3, [pc, #248]	; (8000480 <GPIO_PeriClockControl+0x184>)
 8000386:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000388:	4a3d      	ldr	r2, [pc, #244]	; (8000480 <GPIO_PeriClockControl+0x184>)
 800038a:	f043 0320 	orr.w	r3, r3, #32
 800038e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000390:	e06f      	b.n	8000472 <GPIO_PeriClockControl+0x176>
		} else if(pGPIOx == GPIOG){
 8000392:	687b      	ldr	r3, [r7, #4]
 8000394:	4a40      	ldr	r2, [pc, #256]	; (8000498 <GPIO_PeriClockControl+0x19c>)
 8000396:	4293      	cmp	r3, r2
 8000398:	d106      	bne.n	80003a8 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 800039a:	4b39      	ldr	r3, [pc, #228]	; (8000480 <GPIO_PeriClockControl+0x184>)
 800039c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800039e:	4a38      	ldr	r2, [pc, #224]	; (8000480 <GPIO_PeriClockControl+0x184>)
 80003a0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80003a4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003a6:	e064      	b.n	8000472 <GPIO_PeriClockControl+0x176>
		} else if(pGPIOx == GPIOH){
 80003a8:	687b      	ldr	r3, [r7, #4]
 80003aa:	4a3c      	ldr	r2, [pc, #240]	; (800049c <GPIO_PeriClockControl+0x1a0>)
 80003ac:	4293      	cmp	r3, r2
 80003ae:	d160      	bne.n	8000472 <GPIO_PeriClockControl+0x176>
			GPIOH_PCLK_EN();
 80003b0:	4b33      	ldr	r3, [pc, #204]	; (8000480 <GPIO_PeriClockControl+0x184>)
 80003b2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003b4:	4a32      	ldr	r2, [pc, #200]	; (8000480 <GPIO_PeriClockControl+0x184>)
 80003b6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80003ba:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003bc:	e059      	b.n	8000472 <GPIO_PeriClockControl+0x176>
	} else if(EnorDi == DISABLE){
 80003be:	78fb      	ldrb	r3, [r7, #3]
 80003c0:	2b00      	cmp	r3, #0
 80003c2:	d156      	bne.n	8000472 <GPIO_PeriClockControl+0x176>
		if(pGPIOx == GPIOA){
 80003c4:	687b      	ldr	r3, [r7, #4]
 80003c6:	4a2d      	ldr	r2, [pc, #180]	; (800047c <GPIO_PeriClockControl+0x180>)
 80003c8:	4293      	cmp	r3, r2
 80003ca:	d106      	bne.n	80003da <GPIO_PeriClockControl+0xde>
			GPIOA_PCLK_DI();
 80003cc:	4b2c      	ldr	r3, [pc, #176]	; (8000480 <GPIO_PeriClockControl+0x184>)
 80003ce:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003d0:	4a2b      	ldr	r2, [pc, #172]	; (8000480 <GPIO_PeriClockControl+0x184>)
 80003d2:	f023 0301 	bic.w	r3, r3, #1
 80003d6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003d8:	e04b      	b.n	8000472 <GPIO_PeriClockControl+0x176>
		} else if(pGPIOx == GPIOB){
 80003da:	687b      	ldr	r3, [r7, #4]
 80003dc:	4a29      	ldr	r2, [pc, #164]	; (8000484 <GPIO_PeriClockControl+0x188>)
 80003de:	4293      	cmp	r3, r2
 80003e0:	d106      	bne.n	80003f0 <GPIO_PeriClockControl+0xf4>
			GPIOB_PCLK_DI();
 80003e2:	4b27      	ldr	r3, [pc, #156]	; (8000480 <GPIO_PeriClockControl+0x184>)
 80003e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003e6:	4a26      	ldr	r2, [pc, #152]	; (8000480 <GPIO_PeriClockControl+0x184>)
 80003e8:	f023 0302 	bic.w	r3, r3, #2
 80003ec:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003ee:	e040      	b.n	8000472 <GPIO_PeriClockControl+0x176>
		} else if(pGPIOx == GPIOC){
 80003f0:	687b      	ldr	r3, [r7, #4]
 80003f2:	4a25      	ldr	r2, [pc, #148]	; (8000488 <GPIO_PeriClockControl+0x18c>)
 80003f4:	4293      	cmp	r3, r2
 80003f6:	d106      	bne.n	8000406 <GPIO_PeriClockControl+0x10a>
			GPIOC_PCLK_DI();
 80003f8:	4b21      	ldr	r3, [pc, #132]	; (8000480 <GPIO_PeriClockControl+0x184>)
 80003fa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003fc:	4a20      	ldr	r2, [pc, #128]	; (8000480 <GPIO_PeriClockControl+0x184>)
 80003fe:	f023 0304 	bic.w	r3, r3, #4
 8000402:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000404:	e035      	b.n	8000472 <GPIO_PeriClockControl+0x176>
		} else if(pGPIOx == GPIOD){
 8000406:	687b      	ldr	r3, [r7, #4]
 8000408:	4a20      	ldr	r2, [pc, #128]	; (800048c <GPIO_PeriClockControl+0x190>)
 800040a:	4293      	cmp	r3, r2
 800040c:	d106      	bne.n	800041c <GPIO_PeriClockControl+0x120>
			GPIOD_PCLK_DI();
 800040e:	4b1c      	ldr	r3, [pc, #112]	; (8000480 <GPIO_PeriClockControl+0x184>)
 8000410:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000412:	4a1b      	ldr	r2, [pc, #108]	; (8000480 <GPIO_PeriClockControl+0x184>)
 8000414:	f023 0308 	bic.w	r3, r3, #8
 8000418:	6313      	str	r3, [r2, #48]	; 0x30
}
 800041a:	e02a      	b.n	8000472 <GPIO_PeriClockControl+0x176>
		} else if(pGPIOx == GPIOE){
 800041c:	687b      	ldr	r3, [r7, #4]
 800041e:	4a1c      	ldr	r2, [pc, #112]	; (8000490 <GPIO_PeriClockControl+0x194>)
 8000420:	4293      	cmp	r3, r2
 8000422:	d106      	bne.n	8000432 <GPIO_PeriClockControl+0x136>
			GPIOE_PCLK_DI();
 8000424:	4b16      	ldr	r3, [pc, #88]	; (8000480 <GPIO_PeriClockControl+0x184>)
 8000426:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000428:	4a15      	ldr	r2, [pc, #84]	; (8000480 <GPIO_PeriClockControl+0x184>)
 800042a:	f023 0310 	bic.w	r3, r3, #16
 800042e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000430:	e01f      	b.n	8000472 <GPIO_PeriClockControl+0x176>
		} else if(pGPIOx == GPIOF){
 8000432:	687b      	ldr	r3, [r7, #4]
 8000434:	4a17      	ldr	r2, [pc, #92]	; (8000494 <GPIO_PeriClockControl+0x198>)
 8000436:	4293      	cmp	r3, r2
 8000438:	d106      	bne.n	8000448 <GPIO_PeriClockControl+0x14c>
			GPIOF_PCLK_DI();
 800043a:	4b11      	ldr	r3, [pc, #68]	; (8000480 <GPIO_PeriClockControl+0x184>)
 800043c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800043e:	4a10      	ldr	r2, [pc, #64]	; (8000480 <GPIO_PeriClockControl+0x184>)
 8000440:	f023 0320 	bic.w	r3, r3, #32
 8000444:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000446:	e014      	b.n	8000472 <GPIO_PeriClockControl+0x176>
		} else if(pGPIOx == GPIOG){
 8000448:	687b      	ldr	r3, [r7, #4]
 800044a:	4a13      	ldr	r2, [pc, #76]	; (8000498 <GPIO_PeriClockControl+0x19c>)
 800044c:	4293      	cmp	r3, r2
 800044e:	d106      	bne.n	800045e <GPIO_PeriClockControl+0x162>
			GPIOG_PCLK_DI();
 8000450:	4b0b      	ldr	r3, [pc, #44]	; (8000480 <GPIO_PeriClockControl+0x184>)
 8000452:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000454:	4a0a      	ldr	r2, [pc, #40]	; (8000480 <GPIO_PeriClockControl+0x184>)
 8000456:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800045a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800045c:	e009      	b.n	8000472 <GPIO_PeriClockControl+0x176>
		} else if(pGPIOx == GPIOH){
 800045e:	687b      	ldr	r3, [r7, #4]
 8000460:	4a0e      	ldr	r2, [pc, #56]	; (800049c <GPIO_PeriClockControl+0x1a0>)
 8000462:	4293      	cmp	r3, r2
 8000464:	d105      	bne.n	8000472 <GPIO_PeriClockControl+0x176>
			GPIOH_PCLK_DI();
 8000466:	4b06      	ldr	r3, [pc, #24]	; (8000480 <GPIO_PeriClockControl+0x184>)
 8000468:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800046a:	4a05      	ldr	r2, [pc, #20]	; (8000480 <GPIO_PeriClockControl+0x184>)
 800046c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000470:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000472:	bf00      	nop
 8000474:	370c      	adds	r7, #12
 8000476:	46bd      	mov	sp, r7
 8000478:	bc80      	pop	{r7}
 800047a:	4770      	bx	lr
 800047c:	40020000 	.word	0x40020000
 8000480:	40023800 	.word	0x40023800
 8000484:	40020400 	.word	0x40020400
 8000488:	40020800 	.word	0x40020800
 800048c:	40020c00 	.word	0x40020c00
 8000490:	40021000 	.word	0x40021000
 8000494:	40021400 	.word	0x40021400
 8000498:	40021800 	.word	0x40021800
 800049c:	40021c00 	.word	0x40021c00

080004a0 <GPIO_Init>:
 * @return				- none
 *
 * @note				- none
 *
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle){
 80004a0:	b480      	push	{r7}
 80004a2:	b08b      	sub	sp, #44	; 0x2c
 80004a4:	af00      	add	r7, sp, #0
 80004a6:	6078      	str	r0, [r7, #4]
	uint32_t reset_value = 0;
 80004a8:	2300      	movs	r3, #0
 80004aa:	627b      	str	r3, [r7, #36]	; 0x24

	//reset, then set mode register
	if( pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG){
 80004ac:	687b      	ldr	r3, [r7, #4]
 80004ae:	795b      	ldrb	r3, [r3, #5]
 80004b0:	2b03      	cmp	r3, #3
 80004b2:	d822      	bhi.n	80004fa <GPIO_Init+0x5a>
		reset_value = (0x3 << ((2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));
 80004b4:	687b      	ldr	r3, [r7, #4]
 80004b6:	791b      	ldrb	r3, [r3, #4]
 80004b8:	005b      	lsls	r3, r3, #1
 80004ba:	2203      	movs	r2, #3
 80004bc:	fa02 f303 	lsl.w	r3, r2, r3
 80004c0:	627b      	str	r3, [r7, #36]	; 0x24
		pGPIOHandle->pGPIOx->MODER &= ~(reset_value);
 80004c2:	687b      	ldr	r3, [r7, #4]
 80004c4:	681b      	ldr	r3, [r3, #0]
 80004c6:	6819      	ldr	r1, [r3, #0]
 80004c8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80004ca:	43da      	mvns	r2, r3
 80004cc:	687b      	ldr	r3, [r7, #4]
 80004ce:	681b      	ldr	r3, [r3, #0]
 80004d0:	400a      	ands	r2, r1
 80004d2:	601a      	str	r2, [r3, #0]
		reset_value = 0;
 80004d4:	2300      	movs	r3, #0
 80004d6:	627b      	str	r3, [r7, #36]	; 0x24

		uint32_t moder_value = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80004d8:	687b      	ldr	r3, [r7, #4]
 80004da:	795b      	ldrb	r3, [r3, #5]
 80004dc:	461a      	mov	r2, r3
 80004de:	687b      	ldr	r3, [r7, #4]
 80004e0:	791b      	ldrb	r3, [r3, #4]
 80004e2:	005b      	lsls	r3, r3, #1
 80004e4:	fa02 f303 	lsl.w	r3, r2, r3
 80004e8:	623b      	str	r3, [r7, #32]
		pGPIOHandle->pGPIOx->MODER |= moder_value;
 80004ea:	687b      	ldr	r3, [r7, #4]
 80004ec:	681b      	ldr	r3, [r3, #0]
 80004ee:	6819      	ldr	r1, [r3, #0]
 80004f0:	687b      	ldr	r3, [r7, #4]
 80004f2:	681b      	ldr	r3, [r3, #0]
 80004f4:	6a3a      	ldr	r2, [r7, #32]
 80004f6:	430a      	orrs	r2, r1
 80004f8:	601a      	str	r2, [r3, #0]
	} else{
		//interrupt mode
	}

	// reset, then set speed register
	reset_value = (0x3 << ((2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));
 80004fa:	687b      	ldr	r3, [r7, #4]
 80004fc:	791b      	ldrb	r3, [r3, #4]
 80004fe:	005b      	lsls	r3, r3, #1
 8000500:	2203      	movs	r2, #3
 8000502:	fa02 f303 	lsl.w	r3, r2, r3
 8000506:	627b      	str	r3, [r7, #36]	; 0x24
	pGPIOHandle->pGPIOx->OSPEEDER &= ~(reset_value);
 8000508:	687b      	ldr	r3, [r7, #4]
 800050a:	681b      	ldr	r3, [r3, #0]
 800050c:	6899      	ldr	r1, [r3, #8]
 800050e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000510:	43da      	mvns	r2, r3
 8000512:	687b      	ldr	r3, [r7, #4]
 8000514:	681b      	ldr	r3, [r3, #0]
 8000516:	400a      	ands	r2, r1
 8000518:	609a      	str	r2, [r3, #8]
	reset_value = 0;
 800051a:	2300      	movs	r3, #0
 800051c:	627b      	str	r3, [r7, #36]	; 0x24

	uint32_t ospeedr_value = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800051e:	687b      	ldr	r3, [r7, #4]
 8000520:	799b      	ldrb	r3, [r3, #6]
 8000522:	461a      	mov	r2, r3
 8000524:	687b      	ldr	r3, [r7, #4]
 8000526:	791b      	ldrb	r3, [r3, #4]
 8000528:	005b      	lsls	r3, r3, #1
 800052a:	fa02 f303 	lsl.w	r3, r2, r3
 800052e:	61fb      	str	r3, [r7, #28]
	pGPIOHandle->pGPIOx->OSPEEDER |= ospeedr_value;
 8000530:	687b      	ldr	r3, [r7, #4]
 8000532:	681b      	ldr	r3, [r3, #0]
 8000534:	6899      	ldr	r1, [r3, #8]
 8000536:	687b      	ldr	r3, [r7, #4]
 8000538:	681b      	ldr	r3, [r3, #0]
 800053a:	69fa      	ldr	r2, [r7, #28]
 800053c:	430a      	orrs	r2, r1
 800053e:	609a      	str	r2, [r3, #8]

	//reset, then set pupd register
	reset_value = (0x3 << ((2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));
 8000540:	687b      	ldr	r3, [r7, #4]
 8000542:	791b      	ldrb	r3, [r3, #4]
 8000544:	005b      	lsls	r3, r3, #1
 8000546:	2203      	movs	r2, #3
 8000548:	fa02 f303 	lsl.w	r3, r2, r3
 800054c:	627b      	str	r3, [r7, #36]	; 0x24
	pGPIOHandle->pGPIOx->PUPDR &= ~(reset_value);
 800054e:	687b      	ldr	r3, [r7, #4]
 8000550:	681b      	ldr	r3, [r3, #0]
 8000552:	68d9      	ldr	r1, [r3, #12]
 8000554:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000556:	43da      	mvns	r2, r3
 8000558:	687b      	ldr	r3, [r7, #4]
 800055a:	681b      	ldr	r3, [r3, #0]
 800055c:	400a      	ands	r2, r1
 800055e:	60da      	str	r2, [r3, #12]
	reset_value = 0;
 8000560:	2300      	movs	r3, #0
 8000562:	627b      	str	r3, [r7, #36]	; 0x24

	uint32_t pupdr_value = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000564:	687b      	ldr	r3, [r7, #4]
 8000566:	79db      	ldrb	r3, [r3, #7]
 8000568:	461a      	mov	r2, r3
 800056a:	687b      	ldr	r3, [r7, #4]
 800056c:	791b      	ldrb	r3, [r3, #4]
 800056e:	005b      	lsls	r3, r3, #1
 8000570:	fa02 f303 	lsl.w	r3, r2, r3
 8000574:	61bb      	str	r3, [r7, #24]
	pGPIOHandle->pGPIOx->PUPDR |= pupdr_value;
 8000576:	687b      	ldr	r3, [r7, #4]
 8000578:	681b      	ldr	r3, [r3, #0]
 800057a:	68d9      	ldr	r1, [r3, #12]
 800057c:	687b      	ldr	r3, [r7, #4]
 800057e:	681b      	ldr	r3, [r3, #0]
 8000580:	69ba      	ldr	r2, [r7, #24]
 8000582:	430a      	orrs	r2, r1
 8000584:	60da      	str	r2, [r3, #12]

	//reset, then set output type register
	reset_value = (0x1 << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000586:	687b      	ldr	r3, [r7, #4]
 8000588:	791b      	ldrb	r3, [r3, #4]
 800058a:	461a      	mov	r2, r3
 800058c:	2301      	movs	r3, #1
 800058e:	4093      	lsls	r3, r2
 8000590:	627b      	str	r3, [r7, #36]	; 0x24
	pGPIOHandle->pGPIOx->OTYPER &= ~(reset_value);
 8000592:	687b      	ldr	r3, [r7, #4]
 8000594:	681b      	ldr	r3, [r3, #0]
 8000596:	6859      	ldr	r1, [r3, #4]
 8000598:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800059a:	43da      	mvns	r2, r3
 800059c:	687b      	ldr	r3, [r7, #4]
 800059e:	681b      	ldr	r3, [r3, #0]
 80005a0:	400a      	ands	r2, r1
 80005a2:	605a      	str	r2, [r3, #4]
	reset_value = 0;
 80005a4:	2300      	movs	r3, #0
 80005a6:	627b      	str	r3, [r7, #36]	; 0x24

	uint32_t optyper_value = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005a8:	687b      	ldr	r3, [r7, #4]
 80005aa:	7a1b      	ldrb	r3, [r3, #8]
 80005ac:	461a      	mov	r2, r3
 80005ae:	687b      	ldr	r3, [r7, #4]
 80005b0:	791b      	ldrb	r3, [r3, #4]
 80005b2:	fa02 f303 	lsl.w	r3, r2, r3
 80005b6:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER |= optyper_value;
 80005b8:	687b      	ldr	r3, [r7, #4]
 80005ba:	681b      	ldr	r3, [r3, #0]
 80005bc:	6859      	ldr	r1, [r3, #4]
 80005be:	687b      	ldr	r3, [r7, #4]
 80005c0:	681b      	ldr	r3, [r3, #0]
 80005c2:	697a      	ldr	r2, [r7, #20]
 80005c4:	430a      	orrs	r2, r1
 80005c6:	605a      	str	r2, [r3, #4]

	//reset, then set altfn register
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode == GPIO_MODE_ALTFN){
 80005c8:	687b      	ldr	r3, [r7, #4]
 80005ca:	7a5b      	ldrb	r3, [r3, #9]
 80005cc:	2b02      	cmp	r3, #2
 80005ce:	d135      	bne.n	800063c <GPIO_Init+0x19c>
		uint8_t index = (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8);
 80005d0:	687b      	ldr	r3, [r7, #4]
 80005d2:	791b      	ldrb	r3, [r3, #4]
 80005d4:	08db      	lsrs	r3, r3, #3
 80005d6:	74fb      	strb	r3, [r7, #19]
		uint8_t position = ((pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8) * 4);
 80005d8:	687b      	ldr	r3, [r7, #4]
 80005da:	791b      	ldrb	r3, [r3, #4]
 80005dc:	f003 0307 	and.w	r3, r3, #7
 80005e0:	b2db      	uxtb	r3, r3
 80005e2:	009b      	lsls	r3, r3, #2
 80005e4:	74bb      	strb	r3, [r7, #18]

		//reset
		reset_value = (0xF << position);
 80005e6:	7cbb      	ldrb	r3, [r7, #18]
 80005e8:	220f      	movs	r2, #15
 80005ea:	fa02 f303 	lsl.w	r3, r2, r3
 80005ee:	627b      	str	r3, [r7, #36]	; 0x24
		pGPIOHandle->pGPIOx->AFR[index] &= ~(reset_value);
 80005f0:	687b      	ldr	r3, [r7, #4]
 80005f2:	681b      	ldr	r3, [r3, #0]
 80005f4:	7cfa      	ldrb	r2, [r7, #19]
 80005f6:	3208      	adds	r2, #8
 80005f8:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80005fc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80005fe:	43d9      	mvns	r1, r3
 8000600:	687b      	ldr	r3, [r7, #4]
 8000602:	681b      	ldr	r3, [r3, #0]
 8000604:	7cfa      	ldrb	r2, [r7, #19]
 8000606:	4001      	ands	r1, r0
 8000608:	3208      	adds	r2, #8
 800060a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		reset_value = 0;
 800060e:	2300      	movs	r3, #0
 8000610:	627b      	str	r3, [r7, #36]	; 0x24

		//set
		uint32_t afr_value = (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << position);
 8000612:	687b      	ldr	r3, [r7, #4]
 8000614:	7a5b      	ldrb	r3, [r3, #9]
 8000616:	461a      	mov	r2, r3
 8000618:	7cbb      	ldrb	r3, [r7, #18]
 800061a:	fa02 f303 	lsl.w	r3, r2, r3
 800061e:	60fb      	str	r3, [r7, #12]
		pGPIOHandle->pGPIOx->AFR[index] |= afr_value;
 8000620:	687b      	ldr	r3, [r7, #4]
 8000622:	681b      	ldr	r3, [r3, #0]
 8000624:	7cfa      	ldrb	r2, [r7, #19]
 8000626:	3208      	adds	r2, #8
 8000628:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800062c:	687b      	ldr	r3, [r7, #4]
 800062e:	681b      	ldr	r3, [r3, #0]
 8000630:	7cfa      	ldrb	r2, [r7, #19]
 8000632:	68f9      	ldr	r1, [r7, #12]
 8000634:	4301      	orrs	r1, r0
 8000636:	3208      	adds	r2, #8
 8000638:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}
}
 800063c:	bf00      	nop
 800063e:	372c      	adds	r7, #44	; 0x2c
 8000640:	46bd      	mov	sp, r7
 8000642:	bc80      	pop	{r7}
 8000644:	4770      	bx	lr

08000646 <GPIO_ReadFromInputPin>:
 * @return				- 0 or 1
 *
 * @note				- none
 *
 */
uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber){
 8000646:	b480      	push	{r7}
 8000648:	b085      	sub	sp, #20
 800064a:	af00      	add	r7, sp, #0
 800064c:	6078      	str	r0, [r7, #4]
 800064e:	460b      	mov	r3, r1
 8000650:	70fb      	strb	r3, [r7, #3]
	uint8_t value = (uint8_t)((pGPIOx->IDR >> PinNumber) & 0x00000001);
 8000652:	687b      	ldr	r3, [r7, #4]
 8000654:	691a      	ldr	r2, [r3, #16]
 8000656:	78fb      	ldrb	r3, [r7, #3]
 8000658:	fa22 f303 	lsr.w	r3, r2, r3
 800065c:	b2db      	uxtb	r3, r3
 800065e:	f003 0301 	and.w	r3, r3, #1
 8000662:	73fb      	strb	r3, [r7, #15]
	return value;
 8000664:	7bfb      	ldrb	r3, [r7, #15]
}
 8000666:	4618      	mov	r0, r3
 8000668:	3714      	adds	r7, #20
 800066a:	46bd      	mov	sp, r7
 800066c:	bc80      	pop	{r7}
 800066e:	4770      	bx	lr

08000670 <GPIO_ToggleOutputPin>:
 * @return				- none
 *
 * @note				- none
 *
 */
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber){
 8000670:	b480      	push	{r7}
 8000672:	b083      	sub	sp, #12
 8000674:	af00      	add	r7, sp, #0
 8000676:	6078      	str	r0, [r7, #4]
 8000678:	460b      	mov	r3, r1
 800067a:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR = pGPIOx->ODR ^ (1 << PinNumber);
 800067c:	687b      	ldr	r3, [r7, #4]
 800067e:	695b      	ldr	r3, [r3, #20]
 8000680:	78fa      	ldrb	r2, [r7, #3]
 8000682:	2101      	movs	r1, #1
 8000684:	fa01 f202 	lsl.w	r2, r1, r2
 8000688:	405a      	eors	r2, r3
 800068a:	687b      	ldr	r3, [r7, #4]
 800068c:	615a      	str	r2, [r3, #20]
}
 800068e:	bf00      	nop
 8000690:	370c      	adds	r7, #12
 8000692:	46bd      	mov	sp, r7
 8000694:	bc80      	pop	{r7}
 8000696:	4770      	bx	lr

08000698 <__libc_init_array>:
 8000698:	b570      	push	{r4, r5, r6, lr}
 800069a:	4e0d      	ldr	r6, [pc, #52]	; (80006d0 <__libc_init_array+0x38>)
 800069c:	4c0d      	ldr	r4, [pc, #52]	; (80006d4 <__libc_init_array+0x3c>)
 800069e:	1ba4      	subs	r4, r4, r6
 80006a0:	10a4      	asrs	r4, r4, #2
 80006a2:	2500      	movs	r5, #0
 80006a4:	42a5      	cmp	r5, r4
 80006a6:	d109      	bne.n	80006bc <__libc_init_array+0x24>
 80006a8:	4e0b      	ldr	r6, [pc, #44]	; (80006d8 <__libc_init_array+0x40>)
 80006aa:	4c0c      	ldr	r4, [pc, #48]	; (80006dc <__libc_init_array+0x44>)
 80006ac:	f000 f818 	bl	80006e0 <_init>
 80006b0:	1ba4      	subs	r4, r4, r6
 80006b2:	10a4      	asrs	r4, r4, #2
 80006b4:	2500      	movs	r5, #0
 80006b6:	42a5      	cmp	r5, r4
 80006b8:	d105      	bne.n	80006c6 <__libc_init_array+0x2e>
 80006ba:	bd70      	pop	{r4, r5, r6, pc}
 80006bc:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80006c0:	4798      	blx	r3
 80006c2:	3501      	adds	r5, #1
 80006c4:	e7ee      	b.n	80006a4 <__libc_init_array+0xc>
 80006c6:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80006ca:	4798      	blx	r3
 80006cc:	3501      	adds	r5, #1
 80006ce:	e7f2      	b.n	80006b6 <__libc_init_array+0x1e>
 80006d0:	080006f8 	.word	0x080006f8
 80006d4:	080006f8 	.word	0x080006f8
 80006d8:	080006f8 	.word	0x080006f8
 80006dc:	080006fc 	.word	0x080006fc

080006e0 <_init>:
 80006e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006e2:	bf00      	nop
 80006e4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80006e6:	bc08      	pop	{r3}
 80006e8:	469e      	mov	lr, r3
 80006ea:	4770      	bx	lr

080006ec <_fini>:
 80006ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006ee:	bf00      	nop
 80006f0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80006f2:	bc08      	pop	{r3}
 80006f4:	469e      	mov	lr, r3
 80006f6:	4770      	bx	lr

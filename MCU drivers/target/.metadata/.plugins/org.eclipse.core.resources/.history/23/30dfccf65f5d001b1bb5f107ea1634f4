/*
 * 011i2c_master_rx_test.c
 *
 *  Created on: Jan 4, 2021
 *      Author: robert
 */



/*
 * PA2	USART_TX
 * PA3	USART_RX
 *
 * ALTERNATE FUNCTIONALITY => AF7
 */

#include <string.h>
#include "stm32f446.h"

USART_Handle_t usart2_handle;

uint8_t msg[1024] = "STM 32 UART mode test..\n\r";

void delay(void){
	for(uint32_t i = 0; i < 500000; i++);
}

void GPIO_Button_Init(){
	GPIO_Handle_t gpioc_button;
	gpioc_button.pGPIOx = GPIOC;

	gpioc_button.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_13;
	gpioc_button.GPIO_PinConfig.GPIO_PinMode = GPIO_PIN_MODE_IN;

	GPIO_PeriClockControl(gpioc_button.pGPIOx, ENABLE);
	GPIO_Init(&gpioc_button);
}


void USART2_GPIOInits(void){
	GPIO_Handle_t USART2_pins;
	USART2_pins.pGPIOx = GPIOA;

	USART2_pins.GPIO_PinConfig.GPIO_PinMode = GPIO_PIN_MODE_ALTFN;
	USART2_pins.GPIO_PinConfig.GPIO_PinAltFunMode = GPIO_PIN_ALT_FUN_7;
	USART2_pins.GPIO_PinConfig.GPIO_PinOPType = GPIO_PIN_OP_TYPE_PP;
	USART2_pins.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_PU;
	USART2_pins.GPIO_PinConfig.GPIO_PinSpeed = GPIO_PIN_OP_SPEED_FAST;

	//Start GPIO peripheral clock
	GPIO_PeriClockControl(USART2_pins.pGPIOx, ENABLE);

	//Configure USART_TX
	USART2_pins.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_9;
	GPIO_Init(&USART2_pins);

	//Configure USART_RX
	USART2_pins.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_3;
	//GPIO_Init(&USART2_pins);
}

void USART2_Init(void){
	usart2_handle.pUSARTx = USART1;

	usart2_handle.USART_Config.USART_Baud = USART_STD_BAUD_115200;
	usart2_handle.USART_Config.USART_HWFlowControl = USART_HW_FLOW_CTRL_NONE;
	usart2_handle.USART_Config.USART_Mode = USART_MODE_ONLY_TX;
	usart2_handle.USART_Config.USART_NoOfStopBits = USART_STOPBITS_1;
	usart2_handle.USART_Config.USART_ParityControl = USART_PARITY_DISABLE;
	usart2_handle.USART_Config.USART_WordLength = USART_WORDLEN_8BITS;

	USART_Init(&usart2_handle);
}

int main(void){
	GPIO_Button_Init();

	USART2_GPIOInits();
	USART2_Init();

	while(1){
		while(GPIO_ReadFromInputPin(GPIOC, GPIO_PIN_NO_13)){};
		delay();

		USART_PeripheralControl(USART2, ENABLE);

		USART_SendData(&usart2_handle, (uint8_t*)msg, strlen((char*)msg));

		USART_PeripheralControl(USART2, DISABLE);
	}
}

/*
 * ds18b20_driver.c
 *
 *  Created on: Feb 5, 2021
 *      Author: robert
 */


/**
  * @brief TIM1 Initialization Function
  * @param None
  * @retval None
  */
#include "ds18b20_driver.h"

TIM_HandleTypeDef htim1;

/*********************************************************************
 * @fn      		  - delay_us
 *
 * @brief             - This function delays program by given number of microseconds
 *
 * @param[in]         - uint32_t u_seconds
 * 						number of microseconds program will wait before continuing execution
 *
 * @return            -  none
 *
 * @Note              -  tested with salea logic analyzer, works good enough (1-3 microseconds variability)

 */
void delay_us (uint32_t u_seconds)
{
	__HAL_TIM_SET_COUNTER(&htim1, 0);
	while(__HAL_TIM_GET_COUNTER(&htim1) < u_seconds);
}


void MX_TIM1_Init(void)
{
  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */


  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
  htim1.Init.Prescaler = 84-1;
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim1.Init.Period = 0xffff-1;
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  htim1.Init.RepetitionCounter = 0;
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;

  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;

  /* USER CODE BEGIN TIM1_Init 2 */
  HAL_TIM_Base_Start(&htim1);
  /* USER CODE END TIM1_Init 2 */

}

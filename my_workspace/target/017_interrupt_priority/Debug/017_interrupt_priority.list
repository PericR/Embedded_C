
017_interrupt_priority.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000bf8  080001c4  080001c4  000101c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000088  08000dbc  08000dbc  00010dbc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000e44  08000e44  00020070  2**0
                  CONTENTS
  4 .ARM          00000000  08000e44  08000e44  00020070  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000e44  08000e44  00020070  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000e44  08000e44  00010e44  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000e48  08000e48  00010e48  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000070  20000000  08000e4c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000002c  20000070  08000ebc  00020070  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000009c  08000ebc  0002009c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00020070  2**0
                  CONTENTS, READONLY
 12 .debug_info   00002178  00000000  00000000  0002009a  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00000601  00000000  00000000  00022212  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000128  00000000  00000000  00022818  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 000000f0  00000000  00000000  00022940  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00002a80  00000000  00000000  00022a30  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00001233  00000000  00000000  000254b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    000090b6  00000000  00000000  000266e3  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0002f799  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000095c  00000000  00000000  0002f814  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	; (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000070 	.word	0x20000070
 80001e0:	00000000 	.word	0x00000000
 80001e4:	08000da4 	.word	0x08000da4

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	; (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	; (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	; (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000074 	.word	0x20000074
 8000200:	08000da4 	.word	0x08000da4

08000204 <config_priority_for_isqs>:
uint32_t *pNVIC_IPRBase 	= (uint32_t*)0xE000E400;
uint32_t *pNVIC_ISERBase 	= (uint32_t*)0xE000E100;
uint32_t *pNVIC_ISPRBase  	= (uint32_t*)0xE000E200;

void config_priority_for_isqs(uint8_t irq_no, uint8_t priority_value)
{
 8000204:	b480      	push	{r7}
 8000206:	b087      	sub	sp, #28
 8000208:	af00      	add	r7, sp, #0
 800020a:	4603      	mov	r3, r0
 800020c:	460a      	mov	r2, r1
 800020e:	71fb      	strb	r3, [r7, #7]
 8000210:	4613      	mov	r3, r2
 8000212:	71bb      	strb	r3, [r7, #6]
	uint8_t iprx = irq_no / 4;
 8000214:	79fb      	ldrb	r3, [r7, #7]
 8000216:	089b      	lsrs	r3, r3, #2
 8000218:	75fb      	strb	r3, [r7, #23]
	uint32_t *ipr = pNVIC_IPRBase + iprx;
 800021a:	4b12      	ldr	r3, [pc, #72]	; (8000264 <config_priority_for_isqs+0x60>)
 800021c:	681a      	ldr	r2, [r3, #0]
 800021e:	7dfb      	ldrb	r3, [r7, #23]
 8000220:	009b      	lsls	r3, r3, #2
 8000222:	4413      	add	r3, r2
 8000224:	613b      	str	r3, [r7, #16]

	uint8_t iprx_position = (irq_no % 4) * 8;
 8000226:	79fb      	ldrb	r3, [r7, #7]
 8000228:	f003 0303 	and.w	r3, r3, #3
 800022c:	b2db      	uxtb	r3, r3
 800022e:	00db      	lsls	r3, r3, #3
 8000230:	73fb      	strb	r3, [r7, #15]

	*ipr &= ~(0xFF << iprx_position);
 8000232:	693b      	ldr	r3, [r7, #16]
 8000234:	681b      	ldr	r3, [r3, #0]
 8000236:	7bfa      	ldrb	r2, [r7, #15]
 8000238:	21ff      	movs	r1, #255	; 0xff
 800023a:	fa01 f202 	lsl.w	r2, r1, r2
 800023e:	43d2      	mvns	r2, r2
 8000240:	401a      	ands	r2, r3
 8000242:	693b      	ldr	r3, [r7, #16]
 8000244:	601a      	str	r2, [r3, #0]
	*ipr |= (priority_value << iprx_position);
 8000246:	693b      	ldr	r3, [r7, #16]
 8000248:	681b      	ldr	r3, [r3, #0]
 800024a:	79b9      	ldrb	r1, [r7, #6]
 800024c:	7bfa      	ldrb	r2, [r7, #15]
 800024e:	fa01 f202 	lsl.w	r2, r1, r2
 8000252:	431a      	orrs	r2, r3
 8000254:	693b      	ldr	r3, [r7, #16]
 8000256:	601a      	str	r2, [r3, #0]

}
 8000258:	bf00      	nop
 800025a:	371c      	adds	r7, #28
 800025c:	46bd      	mov	sp, r7
 800025e:	bc80      	pop	{r7}
 8000260:	4770      	bx	lr
 8000262:	bf00      	nop
 8000264:	20000000 	.word	0x20000000

08000268 <main>:

int main(void)
{
 8000268:	b580      	push	{r7, lr}
 800026a:	af00      	add	r7, sp, #0
	config_priority_for_isqs(IRQNO_TIMER2, 0x80);
 800026c:	2180      	movs	r1, #128	; 0x80
 800026e:	201c      	movs	r0, #28
 8000270:	f7ff ffc8 	bl	8000204 <config_priority_for_isqs>
	config_priority_for_isqs(IRQNO_I2C1, 0x70);
 8000274:	2170      	movs	r1, #112	; 0x70
 8000276:	201f      	movs	r0, #31
 8000278:	f7ff ffc4 	bl	8000204 <config_priority_for_isqs>

	//set the interrupt pending bit in the NVIC PR
	*pNVIC_ISPRBase |= (1 << IRQNO_TIMER2);
 800027c:	4b0c      	ldr	r3, [pc, #48]	; (80002b0 <main+0x48>)
 800027e:	681b      	ldr	r3, [r3, #0]
 8000280:	681a      	ldr	r2, [r3, #0]
 8000282:	4b0b      	ldr	r3, [pc, #44]	; (80002b0 <main+0x48>)
 8000284:	681b      	ldr	r3, [r3, #0]
 8000286:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800028a:	601a      	str	r2, [r3, #0]

	//Enable the IRQs in NVIC ISER
	*pNVIC_ISERBase |= (1 << IRQNO_I2C1);
 800028c:	4b09      	ldr	r3, [pc, #36]	; (80002b4 <main+0x4c>)
 800028e:	681b      	ldr	r3, [r3, #0]
 8000290:	681a      	ldr	r2, [r3, #0]
 8000292:	4b08      	ldr	r3, [pc, #32]	; (80002b4 <main+0x4c>)
 8000294:	681b      	ldr	r3, [r3, #0]
 8000296:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
 800029a:	601a      	str	r2, [r3, #0]
	*pNVIC_ISERBase |= (1 << IRQNO_TIMER2);
 800029c:	4b05      	ldr	r3, [pc, #20]	; (80002b4 <main+0x4c>)
 800029e:	681b      	ldr	r3, [r3, #0]
 80002a0:	681a      	ldr	r2, [r3, #0]
 80002a2:	4b04      	ldr	r3, [pc, #16]	; (80002b4 <main+0x4c>)
 80002a4:	681b      	ldr	r3, [r3, #0]
 80002a6:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80002aa:	601a      	str	r2, [r3, #0]

	for(;;);
 80002ac:	e7fe      	b.n	80002ac <main+0x44>
 80002ae:	bf00      	nop
 80002b0:	20000008 	.word	0x20000008
 80002b4:	20000004 	.word	0x20000004

080002b8 <TIM2_IRQHandler>:
}

//ISRs
void TIM2_IRQHandler(void)
{
 80002b8:	b580      	push	{r7, lr}
 80002ba:	af00      	add	r7, sp, #0
	printf("TIM2_IRQHandler\n");
 80002bc:	4805      	ldr	r0, [pc, #20]	; (80002d4 <TIM2_IRQHandler+0x1c>)
 80002be:	f000 f965 	bl	800058c <puts>
	*pNVIC_ISERBase |= (1 << IRQNO_I2C1);
 80002c2:	4b05      	ldr	r3, [pc, #20]	; (80002d8 <TIM2_IRQHandler+0x20>)
 80002c4:	681b      	ldr	r3, [r3, #0]
 80002c6:	681a      	ldr	r2, [r3, #0]
 80002c8:	4b03      	ldr	r3, [pc, #12]	; (80002d8 <TIM2_IRQHandler+0x20>)
 80002ca:	681b      	ldr	r3, [r3, #0]
 80002cc:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
 80002d0:	601a      	str	r2, [r3, #0]
	while(1);
 80002d2:	e7fe      	b.n	80002d2 <TIM2_IRQHandler+0x1a>
 80002d4:	08000dbc 	.word	0x08000dbc
 80002d8:	20000004 	.word	0x20000004

080002dc <I2C1_EV_IRQHandler>:
}

void I2C1_EV_IRQHandler(void)
{
 80002dc:	b580      	push	{r7, lr}
 80002de:	af00      	add	r7, sp, #0
	printf("I2C1_EV_IRQHandler\n");
 80002e0:	4802      	ldr	r0, [pc, #8]	; (80002ec <I2C1_EV_IRQHandler+0x10>)
 80002e2:	f000 f953 	bl	800058c <puts>
}
 80002e6:	bf00      	nop
 80002e8:	bd80      	pop	{r7, pc}
 80002ea:	bf00      	nop
 80002ec:	08000dcc 	.word	0x08000dcc

080002f0 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80002f0:	b580      	push	{r7, lr}
 80002f2:	b086      	sub	sp, #24
 80002f4:	af00      	add	r7, sp, #0
 80002f6:	60f8      	str	r0, [r7, #12]
 80002f8:	60b9      	str	r1, [r7, #8]
 80002fa:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002fc:	2300      	movs	r3, #0
 80002fe:	617b      	str	r3, [r7, #20]
 8000300:	e00a      	b.n	8000318 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8000302:	f3af 8000 	nop.w
 8000306:	4601      	mov	r1, r0
 8000308:	68bb      	ldr	r3, [r7, #8]
 800030a:	1c5a      	adds	r2, r3, #1
 800030c:	60ba      	str	r2, [r7, #8]
 800030e:	b2ca      	uxtb	r2, r1
 8000310:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000312:	697b      	ldr	r3, [r7, #20]
 8000314:	3301      	adds	r3, #1
 8000316:	617b      	str	r3, [r7, #20]
 8000318:	697a      	ldr	r2, [r7, #20]
 800031a:	687b      	ldr	r3, [r7, #4]
 800031c:	429a      	cmp	r2, r3
 800031e:	dbf0      	blt.n	8000302 <_read+0x12>
	}

return len;
 8000320:	687b      	ldr	r3, [r7, #4]
}
 8000322:	4618      	mov	r0, r3
 8000324:	3718      	adds	r7, #24
 8000326:	46bd      	mov	sp, r7
 8000328:	bd80      	pop	{r7, pc}

0800032a <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800032a:	b580      	push	{r7, lr}
 800032c:	b086      	sub	sp, #24
 800032e:	af00      	add	r7, sp, #0
 8000330:	60f8      	str	r0, [r7, #12]
 8000332:	60b9      	str	r1, [r7, #8]
 8000334:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000336:	2300      	movs	r3, #0
 8000338:	617b      	str	r3, [r7, #20]
 800033a:	e009      	b.n	8000350 <_write+0x26>
	{
		__io_putchar(*ptr++);
 800033c:	68bb      	ldr	r3, [r7, #8]
 800033e:	1c5a      	adds	r2, r3, #1
 8000340:	60ba      	str	r2, [r7, #8]
 8000342:	781b      	ldrb	r3, [r3, #0]
 8000344:	4618      	mov	r0, r3
 8000346:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800034a:	697b      	ldr	r3, [r7, #20]
 800034c:	3301      	adds	r3, #1
 800034e:	617b      	str	r3, [r7, #20]
 8000350:	697a      	ldr	r2, [r7, #20]
 8000352:	687b      	ldr	r3, [r7, #4]
 8000354:	429a      	cmp	r2, r3
 8000356:	dbf1      	blt.n	800033c <_write+0x12>
	}
	return len;
 8000358:	687b      	ldr	r3, [r7, #4]
}
 800035a:	4618      	mov	r0, r3
 800035c:	3718      	adds	r7, #24
 800035e:	46bd      	mov	sp, r7
 8000360:	bd80      	pop	{r7, pc}

08000362 <_close>:

int _close(int file)
{
 8000362:	b480      	push	{r7}
 8000364:	b083      	sub	sp, #12
 8000366:	af00      	add	r7, sp, #0
 8000368:	6078      	str	r0, [r7, #4]
	return -1;
 800036a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 800036e:	4618      	mov	r0, r3
 8000370:	370c      	adds	r7, #12
 8000372:	46bd      	mov	sp, r7
 8000374:	bc80      	pop	{r7}
 8000376:	4770      	bx	lr

08000378 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000378:	b480      	push	{r7}
 800037a:	b083      	sub	sp, #12
 800037c:	af00      	add	r7, sp, #0
 800037e:	6078      	str	r0, [r7, #4]
 8000380:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8000382:	683b      	ldr	r3, [r7, #0]
 8000384:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000388:	605a      	str	r2, [r3, #4]
	return 0;
 800038a:	2300      	movs	r3, #0
}
 800038c:	4618      	mov	r0, r3
 800038e:	370c      	adds	r7, #12
 8000390:	46bd      	mov	sp, r7
 8000392:	bc80      	pop	{r7}
 8000394:	4770      	bx	lr

08000396 <_isatty>:

int _isatty(int file)
{
 8000396:	b480      	push	{r7}
 8000398:	b083      	sub	sp, #12
 800039a:	af00      	add	r7, sp, #0
 800039c:	6078      	str	r0, [r7, #4]
	return 1;
 800039e:	2301      	movs	r3, #1
}
 80003a0:	4618      	mov	r0, r3
 80003a2:	370c      	adds	r7, #12
 80003a4:	46bd      	mov	sp, r7
 80003a6:	bc80      	pop	{r7}
 80003a8:	4770      	bx	lr

080003aa <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80003aa:	b480      	push	{r7}
 80003ac:	b085      	sub	sp, #20
 80003ae:	af00      	add	r7, sp, #0
 80003b0:	60f8      	str	r0, [r7, #12]
 80003b2:	60b9      	str	r1, [r7, #8]
 80003b4:	607a      	str	r2, [r7, #4]
	return 0;
 80003b6:	2300      	movs	r3, #0
}
 80003b8:	4618      	mov	r0, r3
 80003ba:	3714      	adds	r7, #20
 80003bc:	46bd      	mov	sp, r7
 80003be:	bc80      	pop	{r7}
 80003c0:	4770      	bx	lr
	...

080003c4 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 80003c4:	b580      	push	{r7, lr}
 80003c6:	b084      	sub	sp, #16
 80003c8:	af00      	add	r7, sp, #0
 80003ca:	6078      	str	r0, [r7, #4]
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 80003cc:	4b11      	ldr	r3, [pc, #68]	; (8000414 <_sbrk+0x50>)
 80003ce:	681b      	ldr	r3, [r3, #0]
 80003d0:	2b00      	cmp	r3, #0
 80003d2:	d102      	bne.n	80003da <_sbrk+0x16>
		heap_end = &end;
 80003d4:	4b0f      	ldr	r3, [pc, #60]	; (8000414 <_sbrk+0x50>)
 80003d6:	4a10      	ldr	r2, [pc, #64]	; (8000418 <_sbrk+0x54>)
 80003d8:	601a      	str	r2, [r3, #0]

	prev_heap_end = heap_end;
 80003da:	4b0e      	ldr	r3, [pc, #56]	; (8000414 <_sbrk+0x50>)
 80003dc:	681b      	ldr	r3, [r3, #0]
 80003de:	60fb      	str	r3, [r7, #12]
	if (heap_end + incr > stack_ptr)
 80003e0:	4b0c      	ldr	r3, [pc, #48]	; (8000414 <_sbrk+0x50>)
 80003e2:	681a      	ldr	r2, [r3, #0]
 80003e4:	687b      	ldr	r3, [r7, #4]
 80003e6:	4413      	add	r3, r2
 80003e8:	466a      	mov	r2, sp
 80003ea:	4293      	cmp	r3, r2
 80003ec:	d907      	bls.n	80003fe <_sbrk+0x3a>
	{
		errno = ENOMEM;
 80003ee:	f000 f83f 	bl	8000470 <__errno>
 80003f2:	4602      	mov	r2, r0
 80003f4:	230c      	movs	r3, #12
 80003f6:	6013      	str	r3, [r2, #0]
		return (caddr_t) -1;
 80003f8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80003fc:	e006      	b.n	800040c <_sbrk+0x48>
	}

	heap_end += incr;
 80003fe:	4b05      	ldr	r3, [pc, #20]	; (8000414 <_sbrk+0x50>)
 8000400:	681a      	ldr	r2, [r3, #0]
 8000402:	687b      	ldr	r3, [r7, #4]
 8000404:	4413      	add	r3, r2
 8000406:	4a03      	ldr	r2, [pc, #12]	; (8000414 <_sbrk+0x50>)
 8000408:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
 800040a:	68fb      	ldr	r3, [r7, #12]
}
 800040c:	4618      	mov	r0, r3
 800040e:	3710      	adds	r7, #16
 8000410:	46bd      	mov	sp, r7
 8000412:	bd80      	pop	{r7, pc}
 8000414:	2000008c 	.word	0x2000008c
 8000418:	200000a0 	.word	0x200000a0

0800041c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800041c:	480d      	ldr	r0, [pc, #52]	; (8000454 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800041e:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000420:	480d      	ldr	r0, [pc, #52]	; (8000458 <LoopForever+0x6>)
  ldr r1, =_edata
 8000422:	490e      	ldr	r1, [pc, #56]	; (800045c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000424:	4a0e      	ldr	r2, [pc, #56]	; (8000460 <LoopForever+0xe>)
  movs r3, #0
 8000426:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000428:	e002      	b.n	8000430 <LoopCopyDataInit>

0800042a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800042a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800042c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800042e:	3304      	adds	r3, #4

08000430 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000430:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000432:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000434:	d3f9      	bcc.n	800042a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000436:	4a0b      	ldr	r2, [pc, #44]	; (8000464 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000438:	4c0b      	ldr	r4, [pc, #44]	; (8000468 <LoopForever+0x16>)
  movs r3, #0
 800043a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800043c:	e001      	b.n	8000442 <LoopFillZerobss>

0800043e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800043e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000440:	3204      	adds	r2, #4

08000442 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000442:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000444:	d3fb      	bcc.n	800043e <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000446:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 800044a:	f000 f817 	bl	800047c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800044e:	f7ff ff0b 	bl	8000268 <main>

08000452 <LoopForever>:

LoopForever:
    b LoopForever
 8000452:	e7fe      	b.n	8000452 <LoopForever>
  ldr   r0, =_estack
 8000454:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000458:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800045c:	20000070 	.word	0x20000070
  ldr r2, =_sidata
 8000460:	08000e4c 	.word	0x08000e4c
  ldr r2, =_sbss
 8000464:	20000070 	.word	0x20000070
  ldr r4, =_ebss
 8000468:	2000009c 	.word	0x2000009c

0800046c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800046c:	e7fe      	b.n	800046c <ADC_IRQHandler>
	...

08000470 <__errno>:
 8000470:	4b01      	ldr	r3, [pc, #4]	; (8000478 <__errno+0x8>)
 8000472:	6818      	ldr	r0, [r3, #0]
 8000474:	4770      	bx	lr
 8000476:	bf00      	nop
 8000478:	2000000c 	.word	0x2000000c

0800047c <__libc_init_array>:
 800047c:	b570      	push	{r4, r5, r6, lr}
 800047e:	4e0d      	ldr	r6, [pc, #52]	; (80004b4 <__libc_init_array+0x38>)
 8000480:	4c0d      	ldr	r4, [pc, #52]	; (80004b8 <__libc_init_array+0x3c>)
 8000482:	1ba4      	subs	r4, r4, r6
 8000484:	10a4      	asrs	r4, r4, #2
 8000486:	2500      	movs	r5, #0
 8000488:	42a5      	cmp	r5, r4
 800048a:	d109      	bne.n	80004a0 <__libc_init_array+0x24>
 800048c:	4e0b      	ldr	r6, [pc, #44]	; (80004bc <__libc_init_array+0x40>)
 800048e:	4c0c      	ldr	r4, [pc, #48]	; (80004c0 <__libc_init_array+0x44>)
 8000490:	f000 fc88 	bl	8000da4 <_init>
 8000494:	1ba4      	subs	r4, r4, r6
 8000496:	10a4      	asrs	r4, r4, #2
 8000498:	2500      	movs	r5, #0
 800049a:	42a5      	cmp	r5, r4
 800049c:	d105      	bne.n	80004aa <__libc_init_array+0x2e>
 800049e:	bd70      	pop	{r4, r5, r6, pc}
 80004a0:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80004a4:	4798      	blx	r3
 80004a6:	3501      	adds	r5, #1
 80004a8:	e7ee      	b.n	8000488 <__libc_init_array+0xc>
 80004aa:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80004ae:	4798      	blx	r3
 80004b0:	3501      	adds	r5, #1
 80004b2:	e7f2      	b.n	800049a <__libc_init_array+0x1e>
 80004b4:	08000e44 	.word	0x08000e44
 80004b8:	08000e44 	.word	0x08000e44
 80004bc:	08000e44 	.word	0x08000e44
 80004c0:	08000e48 	.word	0x08000e48

080004c4 <memset>:
 80004c4:	4402      	add	r2, r0
 80004c6:	4603      	mov	r3, r0
 80004c8:	4293      	cmp	r3, r2
 80004ca:	d100      	bne.n	80004ce <memset+0xa>
 80004cc:	4770      	bx	lr
 80004ce:	f803 1b01 	strb.w	r1, [r3], #1
 80004d2:	e7f9      	b.n	80004c8 <memset+0x4>

080004d4 <_puts_r>:
 80004d4:	b570      	push	{r4, r5, r6, lr}
 80004d6:	460e      	mov	r6, r1
 80004d8:	4605      	mov	r5, r0
 80004da:	b118      	cbz	r0, 80004e4 <_puts_r+0x10>
 80004dc:	6983      	ldr	r3, [r0, #24]
 80004de:	b90b      	cbnz	r3, 80004e4 <_puts_r+0x10>
 80004e0:	f000 fa0c 	bl	80008fc <__sinit>
 80004e4:	69ab      	ldr	r3, [r5, #24]
 80004e6:	68ac      	ldr	r4, [r5, #8]
 80004e8:	b913      	cbnz	r3, 80004f0 <_puts_r+0x1c>
 80004ea:	4628      	mov	r0, r5
 80004ec:	f000 fa06 	bl	80008fc <__sinit>
 80004f0:	4b23      	ldr	r3, [pc, #140]	; (8000580 <_puts_r+0xac>)
 80004f2:	429c      	cmp	r4, r3
 80004f4:	d117      	bne.n	8000526 <_puts_r+0x52>
 80004f6:	686c      	ldr	r4, [r5, #4]
 80004f8:	89a3      	ldrh	r3, [r4, #12]
 80004fa:	071b      	lsls	r3, r3, #28
 80004fc:	d51d      	bpl.n	800053a <_puts_r+0x66>
 80004fe:	6923      	ldr	r3, [r4, #16]
 8000500:	b1db      	cbz	r3, 800053a <_puts_r+0x66>
 8000502:	3e01      	subs	r6, #1
 8000504:	68a3      	ldr	r3, [r4, #8]
 8000506:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 800050a:	3b01      	subs	r3, #1
 800050c:	60a3      	str	r3, [r4, #8]
 800050e:	b9e9      	cbnz	r1, 800054c <_puts_r+0x78>
 8000510:	2b00      	cmp	r3, #0
 8000512:	da2e      	bge.n	8000572 <_puts_r+0x9e>
 8000514:	4622      	mov	r2, r4
 8000516:	210a      	movs	r1, #10
 8000518:	4628      	mov	r0, r5
 800051a:	f000 f83f 	bl	800059c <__swbuf_r>
 800051e:	3001      	adds	r0, #1
 8000520:	d011      	beq.n	8000546 <_puts_r+0x72>
 8000522:	200a      	movs	r0, #10
 8000524:	e011      	b.n	800054a <_puts_r+0x76>
 8000526:	4b17      	ldr	r3, [pc, #92]	; (8000584 <_puts_r+0xb0>)
 8000528:	429c      	cmp	r4, r3
 800052a:	d101      	bne.n	8000530 <_puts_r+0x5c>
 800052c:	68ac      	ldr	r4, [r5, #8]
 800052e:	e7e3      	b.n	80004f8 <_puts_r+0x24>
 8000530:	4b15      	ldr	r3, [pc, #84]	; (8000588 <_puts_r+0xb4>)
 8000532:	429c      	cmp	r4, r3
 8000534:	bf08      	it	eq
 8000536:	68ec      	ldreq	r4, [r5, #12]
 8000538:	e7de      	b.n	80004f8 <_puts_r+0x24>
 800053a:	4621      	mov	r1, r4
 800053c:	4628      	mov	r0, r5
 800053e:	f000 f87f 	bl	8000640 <__swsetup_r>
 8000542:	2800      	cmp	r0, #0
 8000544:	d0dd      	beq.n	8000502 <_puts_r+0x2e>
 8000546:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800054a:	bd70      	pop	{r4, r5, r6, pc}
 800054c:	2b00      	cmp	r3, #0
 800054e:	da04      	bge.n	800055a <_puts_r+0x86>
 8000550:	69a2      	ldr	r2, [r4, #24]
 8000552:	429a      	cmp	r2, r3
 8000554:	dc06      	bgt.n	8000564 <_puts_r+0x90>
 8000556:	290a      	cmp	r1, #10
 8000558:	d004      	beq.n	8000564 <_puts_r+0x90>
 800055a:	6823      	ldr	r3, [r4, #0]
 800055c:	1c5a      	adds	r2, r3, #1
 800055e:	6022      	str	r2, [r4, #0]
 8000560:	7019      	strb	r1, [r3, #0]
 8000562:	e7cf      	b.n	8000504 <_puts_r+0x30>
 8000564:	4622      	mov	r2, r4
 8000566:	4628      	mov	r0, r5
 8000568:	f000 f818 	bl	800059c <__swbuf_r>
 800056c:	3001      	adds	r0, #1
 800056e:	d1c9      	bne.n	8000504 <_puts_r+0x30>
 8000570:	e7e9      	b.n	8000546 <_puts_r+0x72>
 8000572:	6823      	ldr	r3, [r4, #0]
 8000574:	200a      	movs	r0, #10
 8000576:	1c5a      	adds	r2, r3, #1
 8000578:	6022      	str	r2, [r4, #0]
 800057a:	7018      	strb	r0, [r3, #0]
 800057c:	e7e5      	b.n	800054a <_puts_r+0x76>
 800057e:	bf00      	nop
 8000580:	08000e04 	.word	0x08000e04
 8000584:	08000e24 	.word	0x08000e24
 8000588:	08000de4 	.word	0x08000de4

0800058c <puts>:
 800058c:	4b02      	ldr	r3, [pc, #8]	; (8000598 <puts+0xc>)
 800058e:	4601      	mov	r1, r0
 8000590:	6818      	ldr	r0, [r3, #0]
 8000592:	f7ff bf9f 	b.w	80004d4 <_puts_r>
 8000596:	bf00      	nop
 8000598:	2000000c 	.word	0x2000000c

0800059c <__swbuf_r>:
 800059c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800059e:	460e      	mov	r6, r1
 80005a0:	4614      	mov	r4, r2
 80005a2:	4605      	mov	r5, r0
 80005a4:	b118      	cbz	r0, 80005ae <__swbuf_r+0x12>
 80005a6:	6983      	ldr	r3, [r0, #24]
 80005a8:	b90b      	cbnz	r3, 80005ae <__swbuf_r+0x12>
 80005aa:	f000 f9a7 	bl	80008fc <__sinit>
 80005ae:	4b21      	ldr	r3, [pc, #132]	; (8000634 <__swbuf_r+0x98>)
 80005b0:	429c      	cmp	r4, r3
 80005b2:	d12a      	bne.n	800060a <__swbuf_r+0x6e>
 80005b4:	686c      	ldr	r4, [r5, #4]
 80005b6:	69a3      	ldr	r3, [r4, #24]
 80005b8:	60a3      	str	r3, [r4, #8]
 80005ba:	89a3      	ldrh	r3, [r4, #12]
 80005bc:	071a      	lsls	r2, r3, #28
 80005be:	d52e      	bpl.n	800061e <__swbuf_r+0x82>
 80005c0:	6923      	ldr	r3, [r4, #16]
 80005c2:	b363      	cbz	r3, 800061e <__swbuf_r+0x82>
 80005c4:	6923      	ldr	r3, [r4, #16]
 80005c6:	6820      	ldr	r0, [r4, #0]
 80005c8:	1ac0      	subs	r0, r0, r3
 80005ca:	6963      	ldr	r3, [r4, #20]
 80005cc:	b2f6      	uxtb	r6, r6
 80005ce:	4283      	cmp	r3, r0
 80005d0:	4637      	mov	r7, r6
 80005d2:	dc04      	bgt.n	80005de <__swbuf_r+0x42>
 80005d4:	4621      	mov	r1, r4
 80005d6:	4628      	mov	r0, r5
 80005d8:	f000 f926 	bl	8000828 <_fflush_r>
 80005dc:	bb28      	cbnz	r0, 800062a <__swbuf_r+0x8e>
 80005de:	68a3      	ldr	r3, [r4, #8]
 80005e0:	3b01      	subs	r3, #1
 80005e2:	60a3      	str	r3, [r4, #8]
 80005e4:	6823      	ldr	r3, [r4, #0]
 80005e6:	1c5a      	adds	r2, r3, #1
 80005e8:	6022      	str	r2, [r4, #0]
 80005ea:	701e      	strb	r6, [r3, #0]
 80005ec:	6963      	ldr	r3, [r4, #20]
 80005ee:	3001      	adds	r0, #1
 80005f0:	4283      	cmp	r3, r0
 80005f2:	d004      	beq.n	80005fe <__swbuf_r+0x62>
 80005f4:	89a3      	ldrh	r3, [r4, #12]
 80005f6:	07db      	lsls	r3, r3, #31
 80005f8:	d519      	bpl.n	800062e <__swbuf_r+0x92>
 80005fa:	2e0a      	cmp	r6, #10
 80005fc:	d117      	bne.n	800062e <__swbuf_r+0x92>
 80005fe:	4621      	mov	r1, r4
 8000600:	4628      	mov	r0, r5
 8000602:	f000 f911 	bl	8000828 <_fflush_r>
 8000606:	b190      	cbz	r0, 800062e <__swbuf_r+0x92>
 8000608:	e00f      	b.n	800062a <__swbuf_r+0x8e>
 800060a:	4b0b      	ldr	r3, [pc, #44]	; (8000638 <__swbuf_r+0x9c>)
 800060c:	429c      	cmp	r4, r3
 800060e:	d101      	bne.n	8000614 <__swbuf_r+0x78>
 8000610:	68ac      	ldr	r4, [r5, #8]
 8000612:	e7d0      	b.n	80005b6 <__swbuf_r+0x1a>
 8000614:	4b09      	ldr	r3, [pc, #36]	; (800063c <__swbuf_r+0xa0>)
 8000616:	429c      	cmp	r4, r3
 8000618:	bf08      	it	eq
 800061a:	68ec      	ldreq	r4, [r5, #12]
 800061c:	e7cb      	b.n	80005b6 <__swbuf_r+0x1a>
 800061e:	4621      	mov	r1, r4
 8000620:	4628      	mov	r0, r5
 8000622:	f000 f80d 	bl	8000640 <__swsetup_r>
 8000626:	2800      	cmp	r0, #0
 8000628:	d0cc      	beq.n	80005c4 <__swbuf_r+0x28>
 800062a:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 800062e:	4638      	mov	r0, r7
 8000630:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000632:	bf00      	nop
 8000634:	08000e04 	.word	0x08000e04
 8000638:	08000e24 	.word	0x08000e24
 800063c:	08000de4 	.word	0x08000de4

08000640 <__swsetup_r>:
 8000640:	4b32      	ldr	r3, [pc, #200]	; (800070c <__swsetup_r+0xcc>)
 8000642:	b570      	push	{r4, r5, r6, lr}
 8000644:	681d      	ldr	r5, [r3, #0]
 8000646:	4606      	mov	r6, r0
 8000648:	460c      	mov	r4, r1
 800064a:	b125      	cbz	r5, 8000656 <__swsetup_r+0x16>
 800064c:	69ab      	ldr	r3, [r5, #24]
 800064e:	b913      	cbnz	r3, 8000656 <__swsetup_r+0x16>
 8000650:	4628      	mov	r0, r5
 8000652:	f000 f953 	bl	80008fc <__sinit>
 8000656:	4b2e      	ldr	r3, [pc, #184]	; (8000710 <__swsetup_r+0xd0>)
 8000658:	429c      	cmp	r4, r3
 800065a:	d10f      	bne.n	800067c <__swsetup_r+0x3c>
 800065c:	686c      	ldr	r4, [r5, #4]
 800065e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000662:	b29a      	uxth	r2, r3
 8000664:	0715      	lsls	r5, r2, #28
 8000666:	d42c      	bmi.n	80006c2 <__swsetup_r+0x82>
 8000668:	06d0      	lsls	r0, r2, #27
 800066a:	d411      	bmi.n	8000690 <__swsetup_r+0x50>
 800066c:	2209      	movs	r2, #9
 800066e:	6032      	str	r2, [r6, #0]
 8000670:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000674:	81a3      	strh	r3, [r4, #12]
 8000676:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800067a:	e03e      	b.n	80006fa <__swsetup_r+0xba>
 800067c:	4b25      	ldr	r3, [pc, #148]	; (8000714 <__swsetup_r+0xd4>)
 800067e:	429c      	cmp	r4, r3
 8000680:	d101      	bne.n	8000686 <__swsetup_r+0x46>
 8000682:	68ac      	ldr	r4, [r5, #8]
 8000684:	e7eb      	b.n	800065e <__swsetup_r+0x1e>
 8000686:	4b24      	ldr	r3, [pc, #144]	; (8000718 <__swsetup_r+0xd8>)
 8000688:	429c      	cmp	r4, r3
 800068a:	bf08      	it	eq
 800068c:	68ec      	ldreq	r4, [r5, #12]
 800068e:	e7e6      	b.n	800065e <__swsetup_r+0x1e>
 8000690:	0751      	lsls	r1, r2, #29
 8000692:	d512      	bpl.n	80006ba <__swsetup_r+0x7a>
 8000694:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000696:	b141      	cbz	r1, 80006aa <__swsetup_r+0x6a>
 8000698:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800069c:	4299      	cmp	r1, r3
 800069e:	d002      	beq.n	80006a6 <__swsetup_r+0x66>
 80006a0:	4630      	mov	r0, r6
 80006a2:	f000 fa19 	bl	8000ad8 <_free_r>
 80006a6:	2300      	movs	r3, #0
 80006a8:	6363      	str	r3, [r4, #52]	; 0x34
 80006aa:	89a3      	ldrh	r3, [r4, #12]
 80006ac:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80006b0:	81a3      	strh	r3, [r4, #12]
 80006b2:	2300      	movs	r3, #0
 80006b4:	6063      	str	r3, [r4, #4]
 80006b6:	6923      	ldr	r3, [r4, #16]
 80006b8:	6023      	str	r3, [r4, #0]
 80006ba:	89a3      	ldrh	r3, [r4, #12]
 80006bc:	f043 0308 	orr.w	r3, r3, #8
 80006c0:	81a3      	strh	r3, [r4, #12]
 80006c2:	6923      	ldr	r3, [r4, #16]
 80006c4:	b94b      	cbnz	r3, 80006da <__swsetup_r+0x9a>
 80006c6:	89a3      	ldrh	r3, [r4, #12]
 80006c8:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80006cc:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80006d0:	d003      	beq.n	80006da <__swsetup_r+0x9a>
 80006d2:	4621      	mov	r1, r4
 80006d4:	4630      	mov	r0, r6
 80006d6:	f000 f9bf 	bl	8000a58 <__smakebuf_r>
 80006da:	89a2      	ldrh	r2, [r4, #12]
 80006dc:	f012 0301 	ands.w	r3, r2, #1
 80006e0:	d00c      	beq.n	80006fc <__swsetup_r+0xbc>
 80006e2:	2300      	movs	r3, #0
 80006e4:	60a3      	str	r3, [r4, #8]
 80006e6:	6963      	ldr	r3, [r4, #20]
 80006e8:	425b      	negs	r3, r3
 80006ea:	61a3      	str	r3, [r4, #24]
 80006ec:	6923      	ldr	r3, [r4, #16]
 80006ee:	b953      	cbnz	r3, 8000706 <__swsetup_r+0xc6>
 80006f0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80006f4:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 80006f8:	d1ba      	bne.n	8000670 <__swsetup_r+0x30>
 80006fa:	bd70      	pop	{r4, r5, r6, pc}
 80006fc:	0792      	lsls	r2, r2, #30
 80006fe:	bf58      	it	pl
 8000700:	6963      	ldrpl	r3, [r4, #20]
 8000702:	60a3      	str	r3, [r4, #8]
 8000704:	e7f2      	b.n	80006ec <__swsetup_r+0xac>
 8000706:	2000      	movs	r0, #0
 8000708:	e7f7      	b.n	80006fa <__swsetup_r+0xba>
 800070a:	bf00      	nop
 800070c:	2000000c 	.word	0x2000000c
 8000710:	08000e04 	.word	0x08000e04
 8000714:	08000e24 	.word	0x08000e24
 8000718:	08000de4 	.word	0x08000de4

0800071c <__sflush_r>:
 800071c:	898a      	ldrh	r2, [r1, #12]
 800071e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000722:	4605      	mov	r5, r0
 8000724:	0710      	lsls	r0, r2, #28
 8000726:	460c      	mov	r4, r1
 8000728:	d458      	bmi.n	80007dc <__sflush_r+0xc0>
 800072a:	684b      	ldr	r3, [r1, #4]
 800072c:	2b00      	cmp	r3, #0
 800072e:	dc05      	bgt.n	800073c <__sflush_r+0x20>
 8000730:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000732:	2b00      	cmp	r3, #0
 8000734:	dc02      	bgt.n	800073c <__sflush_r+0x20>
 8000736:	2000      	movs	r0, #0
 8000738:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800073c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800073e:	2e00      	cmp	r6, #0
 8000740:	d0f9      	beq.n	8000736 <__sflush_r+0x1a>
 8000742:	2300      	movs	r3, #0
 8000744:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000748:	682f      	ldr	r7, [r5, #0]
 800074a:	6a21      	ldr	r1, [r4, #32]
 800074c:	602b      	str	r3, [r5, #0]
 800074e:	d032      	beq.n	80007b6 <__sflush_r+0x9a>
 8000750:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000752:	89a3      	ldrh	r3, [r4, #12]
 8000754:	075a      	lsls	r2, r3, #29
 8000756:	d505      	bpl.n	8000764 <__sflush_r+0x48>
 8000758:	6863      	ldr	r3, [r4, #4]
 800075a:	1ac0      	subs	r0, r0, r3
 800075c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800075e:	b10b      	cbz	r3, 8000764 <__sflush_r+0x48>
 8000760:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000762:	1ac0      	subs	r0, r0, r3
 8000764:	2300      	movs	r3, #0
 8000766:	4602      	mov	r2, r0
 8000768:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800076a:	6a21      	ldr	r1, [r4, #32]
 800076c:	4628      	mov	r0, r5
 800076e:	47b0      	blx	r6
 8000770:	1c43      	adds	r3, r0, #1
 8000772:	89a3      	ldrh	r3, [r4, #12]
 8000774:	d106      	bne.n	8000784 <__sflush_r+0x68>
 8000776:	6829      	ldr	r1, [r5, #0]
 8000778:	291d      	cmp	r1, #29
 800077a:	d848      	bhi.n	800080e <__sflush_r+0xf2>
 800077c:	4a29      	ldr	r2, [pc, #164]	; (8000824 <__sflush_r+0x108>)
 800077e:	40ca      	lsrs	r2, r1
 8000780:	07d6      	lsls	r6, r2, #31
 8000782:	d544      	bpl.n	800080e <__sflush_r+0xf2>
 8000784:	2200      	movs	r2, #0
 8000786:	6062      	str	r2, [r4, #4]
 8000788:	04d9      	lsls	r1, r3, #19
 800078a:	6922      	ldr	r2, [r4, #16]
 800078c:	6022      	str	r2, [r4, #0]
 800078e:	d504      	bpl.n	800079a <__sflush_r+0x7e>
 8000790:	1c42      	adds	r2, r0, #1
 8000792:	d101      	bne.n	8000798 <__sflush_r+0x7c>
 8000794:	682b      	ldr	r3, [r5, #0]
 8000796:	b903      	cbnz	r3, 800079a <__sflush_r+0x7e>
 8000798:	6560      	str	r0, [r4, #84]	; 0x54
 800079a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800079c:	602f      	str	r7, [r5, #0]
 800079e:	2900      	cmp	r1, #0
 80007a0:	d0c9      	beq.n	8000736 <__sflush_r+0x1a>
 80007a2:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80007a6:	4299      	cmp	r1, r3
 80007a8:	d002      	beq.n	80007b0 <__sflush_r+0x94>
 80007aa:	4628      	mov	r0, r5
 80007ac:	f000 f994 	bl	8000ad8 <_free_r>
 80007b0:	2000      	movs	r0, #0
 80007b2:	6360      	str	r0, [r4, #52]	; 0x34
 80007b4:	e7c0      	b.n	8000738 <__sflush_r+0x1c>
 80007b6:	2301      	movs	r3, #1
 80007b8:	4628      	mov	r0, r5
 80007ba:	47b0      	blx	r6
 80007bc:	1c41      	adds	r1, r0, #1
 80007be:	d1c8      	bne.n	8000752 <__sflush_r+0x36>
 80007c0:	682b      	ldr	r3, [r5, #0]
 80007c2:	2b00      	cmp	r3, #0
 80007c4:	d0c5      	beq.n	8000752 <__sflush_r+0x36>
 80007c6:	2b1d      	cmp	r3, #29
 80007c8:	d001      	beq.n	80007ce <__sflush_r+0xb2>
 80007ca:	2b16      	cmp	r3, #22
 80007cc:	d101      	bne.n	80007d2 <__sflush_r+0xb6>
 80007ce:	602f      	str	r7, [r5, #0]
 80007d0:	e7b1      	b.n	8000736 <__sflush_r+0x1a>
 80007d2:	89a3      	ldrh	r3, [r4, #12]
 80007d4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80007d8:	81a3      	strh	r3, [r4, #12]
 80007da:	e7ad      	b.n	8000738 <__sflush_r+0x1c>
 80007dc:	690f      	ldr	r7, [r1, #16]
 80007de:	2f00      	cmp	r7, #0
 80007e0:	d0a9      	beq.n	8000736 <__sflush_r+0x1a>
 80007e2:	0793      	lsls	r3, r2, #30
 80007e4:	680e      	ldr	r6, [r1, #0]
 80007e6:	bf08      	it	eq
 80007e8:	694b      	ldreq	r3, [r1, #20]
 80007ea:	600f      	str	r7, [r1, #0]
 80007ec:	bf18      	it	ne
 80007ee:	2300      	movne	r3, #0
 80007f0:	eba6 0807 	sub.w	r8, r6, r7
 80007f4:	608b      	str	r3, [r1, #8]
 80007f6:	f1b8 0f00 	cmp.w	r8, #0
 80007fa:	dd9c      	ble.n	8000736 <__sflush_r+0x1a>
 80007fc:	4643      	mov	r3, r8
 80007fe:	463a      	mov	r2, r7
 8000800:	6a21      	ldr	r1, [r4, #32]
 8000802:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8000804:	4628      	mov	r0, r5
 8000806:	47b0      	blx	r6
 8000808:	2800      	cmp	r0, #0
 800080a:	dc06      	bgt.n	800081a <__sflush_r+0xfe>
 800080c:	89a3      	ldrh	r3, [r4, #12]
 800080e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000812:	81a3      	strh	r3, [r4, #12]
 8000814:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000818:	e78e      	b.n	8000738 <__sflush_r+0x1c>
 800081a:	4407      	add	r7, r0
 800081c:	eba8 0800 	sub.w	r8, r8, r0
 8000820:	e7e9      	b.n	80007f6 <__sflush_r+0xda>
 8000822:	bf00      	nop
 8000824:	20400001 	.word	0x20400001

08000828 <_fflush_r>:
 8000828:	b538      	push	{r3, r4, r5, lr}
 800082a:	690b      	ldr	r3, [r1, #16]
 800082c:	4605      	mov	r5, r0
 800082e:	460c      	mov	r4, r1
 8000830:	b1db      	cbz	r3, 800086a <_fflush_r+0x42>
 8000832:	b118      	cbz	r0, 800083c <_fflush_r+0x14>
 8000834:	6983      	ldr	r3, [r0, #24]
 8000836:	b90b      	cbnz	r3, 800083c <_fflush_r+0x14>
 8000838:	f000 f860 	bl	80008fc <__sinit>
 800083c:	4b0c      	ldr	r3, [pc, #48]	; (8000870 <_fflush_r+0x48>)
 800083e:	429c      	cmp	r4, r3
 8000840:	d109      	bne.n	8000856 <_fflush_r+0x2e>
 8000842:	686c      	ldr	r4, [r5, #4]
 8000844:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000848:	b17b      	cbz	r3, 800086a <_fflush_r+0x42>
 800084a:	4621      	mov	r1, r4
 800084c:	4628      	mov	r0, r5
 800084e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000852:	f7ff bf63 	b.w	800071c <__sflush_r>
 8000856:	4b07      	ldr	r3, [pc, #28]	; (8000874 <_fflush_r+0x4c>)
 8000858:	429c      	cmp	r4, r3
 800085a:	d101      	bne.n	8000860 <_fflush_r+0x38>
 800085c:	68ac      	ldr	r4, [r5, #8]
 800085e:	e7f1      	b.n	8000844 <_fflush_r+0x1c>
 8000860:	4b05      	ldr	r3, [pc, #20]	; (8000878 <_fflush_r+0x50>)
 8000862:	429c      	cmp	r4, r3
 8000864:	bf08      	it	eq
 8000866:	68ec      	ldreq	r4, [r5, #12]
 8000868:	e7ec      	b.n	8000844 <_fflush_r+0x1c>
 800086a:	2000      	movs	r0, #0
 800086c:	bd38      	pop	{r3, r4, r5, pc}
 800086e:	bf00      	nop
 8000870:	08000e04 	.word	0x08000e04
 8000874:	08000e24 	.word	0x08000e24
 8000878:	08000de4 	.word	0x08000de4

0800087c <std>:
 800087c:	2300      	movs	r3, #0
 800087e:	b510      	push	{r4, lr}
 8000880:	4604      	mov	r4, r0
 8000882:	e9c0 3300 	strd	r3, r3, [r0]
 8000886:	6083      	str	r3, [r0, #8]
 8000888:	8181      	strh	r1, [r0, #12]
 800088a:	6643      	str	r3, [r0, #100]	; 0x64
 800088c:	81c2      	strh	r2, [r0, #14]
 800088e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000892:	6183      	str	r3, [r0, #24]
 8000894:	4619      	mov	r1, r3
 8000896:	2208      	movs	r2, #8
 8000898:	305c      	adds	r0, #92	; 0x5c
 800089a:	f7ff fe13 	bl	80004c4 <memset>
 800089e:	4b05      	ldr	r3, [pc, #20]	; (80008b4 <std+0x38>)
 80008a0:	6263      	str	r3, [r4, #36]	; 0x24
 80008a2:	4b05      	ldr	r3, [pc, #20]	; (80008b8 <std+0x3c>)
 80008a4:	62a3      	str	r3, [r4, #40]	; 0x28
 80008a6:	4b05      	ldr	r3, [pc, #20]	; (80008bc <std+0x40>)
 80008a8:	62e3      	str	r3, [r4, #44]	; 0x2c
 80008aa:	4b05      	ldr	r3, [pc, #20]	; (80008c0 <std+0x44>)
 80008ac:	6224      	str	r4, [r4, #32]
 80008ae:	6323      	str	r3, [r4, #48]	; 0x30
 80008b0:	bd10      	pop	{r4, pc}
 80008b2:	bf00      	nop
 80008b4:	08000c49 	.word	0x08000c49
 80008b8:	08000c6b 	.word	0x08000c6b
 80008bc:	08000ca3 	.word	0x08000ca3
 80008c0:	08000cc7 	.word	0x08000cc7

080008c4 <_cleanup_r>:
 80008c4:	4901      	ldr	r1, [pc, #4]	; (80008cc <_cleanup_r+0x8>)
 80008c6:	f000 b885 	b.w	80009d4 <_fwalk_reent>
 80008ca:	bf00      	nop
 80008cc:	08000829 	.word	0x08000829

080008d0 <__sfmoreglue>:
 80008d0:	b570      	push	{r4, r5, r6, lr}
 80008d2:	1e4a      	subs	r2, r1, #1
 80008d4:	2568      	movs	r5, #104	; 0x68
 80008d6:	4355      	muls	r5, r2
 80008d8:	460e      	mov	r6, r1
 80008da:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80008de:	f000 f949 	bl	8000b74 <_malloc_r>
 80008e2:	4604      	mov	r4, r0
 80008e4:	b140      	cbz	r0, 80008f8 <__sfmoreglue+0x28>
 80008e6:	2100      	movs	r1, #0
 80008e8:	e9c0 1600 	strd	r1, r6, [r0]
 80008ec:	300c      	adds	r0, #12
 80008ee:	60a0      	str	r0, [r4, #8]
 80008f0:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80008f4:	f7ff fde6 	bl	80004c4 <memset>
 80008f8:	4620      	mov	r0, r4
 80008fa:	bd70      	pop	{r4, r5, r6, pc}

080008fc <__sinit>:
 80008fc:	6983      	ldr	r3, [r0, #24]
 80008fe:	b510      	push	{r4, lr}
 8000900:	4604      	mov	r4, r0
 8000902:	bb33      	cbnz	r3, 8000952 <__sinit+0x56>
 8000904:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 8000908:	6503      	str	r3, [r0, #80]	; 0x50
 800090a:	4b12      	ldr	r3, [pc, #72]	; (8000954 <__sinit+0x58>)
 800090c:	4a12      	ldr	r2, [pc, #72]	; (8000958 <__sinit+0x5c>)
 800090e:	681b      	ldr	r3, [r3, #0]
 8000910:	6282      	str	r2, [r0, #40]	; 0x28
 8000912:	4298      	cmp	r0, r3
 8000914:	bf04      	itt	eq
 8000916:	2301      	moveq	r3, #1
 8000918:	6183      	streq	r3, [r0, #24]
 800091a:	f000 f81f 	bl	800095c <__sfp>
 800091e:	6060      	str	r0, [r4, #4]
 8000920:	4620      	mov	r0, r4
 8000922:	f000 f81b 	bl	800095c <__sfp>
 8000926:	60a0      	str	r0, [r4, #8]
 8000928:	4620      	mov	r0, r4
 800092a:	f000 f817 	bl	800095c <__sfp>
 800092e:	2200      	movs	r2, #0
 8000930:	60e0      	str	r0, [r4, #12]
 8000932:	2104      	movs	r1, #4
 8000934:	6860      	ldr	r0, [r4, #4]
 8000936:	f7ff ffa1 	bl	800087c <std>
 800093a:	2201      	movs	r2, #1
 800093c:	2109      	movs	r1, #9
 800093e:	68a0      	ldr	r0, [r4, #8]
 8000940:	f7ff ff9c 	bl	800087c <std>
 8000944:	2202      	movs	r2, #2
 8000946:	2112      	movs	r1, #18
 8000948:	68e0      	ldr	r0, [r4, #12]
 800094a:	f7ff ff97 	bl	800087c <std>
 800094e:	2301      	movs	r3, #1
 8000950:	61a3      	str	r3, [r4, #24]
 8000952:	bd10      	pop	{r4, pc}
 8000954:	08000de0 	.word	0x08000de0
 8000958:	080008c5 	.word	0x080008c5

0800095c <__sfp>:
 800095c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800095e:	4b1b      	ldr	r3, [pc, #108]	; (80009cc <__sfp+0x70>)
 8000960:	681e      	ldr	r6, [r3, #0]
 8000962:	69b3      	ldr	r3, [r6, #24]
 8000964:	4607      	mov	r7, r0
 8000966:	b913      	cbnz	r3, 800096e <__sfp+0x12>
 8000968:	4630      	mov	r0, r6
 800096a:	f7ff ffc7 	bl	80008fc <__sinit>
 800096e:	3648      	adds	r6, #72	; 0x48
 8000970:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000974:	3b01      	subs	r3, #1
 8000976:	d503      	bpl.n	8000980 <__sfp+0x24>
 8000978:	6833      	ldr	r3, [r6, #0]
 800097a:	b133      	cbz	r3, 800098a <__sfp+0x2e>
 800097c:	6836      	ldr	r6, [r6, #0]
 800097e:	e7f7      	b.n	8000970 <__sfp+0x14>
 8000980:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000984:	b16d      	cbz	r5, 80009a2 <__sfp+0x46>
 8000986:	3468      	adds	r4, #104	; 0x68
 8000988:	e7f4      	b.n	8000974 <__sfp+0x18>
 800098a:	2104      	movs	r1, #4
 800098c:	4638      	mov	r0, r7
 800098e:	f7ff ff9f 	bl	80008d0 <__sfmoreglue>
 8000992:	6030      	str	r0, [r6, #0]
 8000994:	2800      	cmp	r0, #0
 8000996:	d1f1      	bne.n	800097c <__sfp+0x20>
 8000998:	230c      	movs	r3, #12
 800099a:	603b      	str	r3, [r7, #0]
 800099c:	4604      	mov	r4, r0
 800099e:	4620      	mov	r0, r4
 80009a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80009a2:	4b0b      	ldr	r3, [pc, #44]	; (80009d0 <__sfp+0x74>)
 80009a4:	6665      	str	r5, [r4, #100]	; 0x64
 80009a6:	e9c4 5500 	strd	r5, r5, [r4]
 80009aa:	60a5      	str	r5, [r4, #8]
 80009ac:	e9c4 3503 	strd	r3, r5, [r4, #12]
 80009b0:	e9c4 5505 	strd	r5, r5, [r4, #20]
 80009b4:	2208      	movs	r2, #8
 80009b6:	4629      	mov	r1, r5
 80009b8:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80009bc:	f7ff fd82 	bl	80004c4 <memset>
 80009c0:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 80009c4:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 80009c8:	e7e9      	b.n	800099e <__sfp+0x42>
 80009ca:	bf00      	nop
 80009cc:	08000de0 	.word	0x08000de0
 80009d0:	ffff0001 	.word	0xffff0001

080009d4 <_fwalk_reent>:
 80009d4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80009d8:	4680      	mov	r8, r0
 80009da:	4689      	mov	r9, r1
 80009dc:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80009e0:	2600      	movs	r6, #0
 80009e2:	b914      	cbnz	r4, 80009ea <_fwalk_reent+0x16>
 80009e4:	4630      	mov	r0, r6
 80009e6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80009ea:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 80009ee:	3f01      	subs	r7, #1
 80009f0:	d501      	bpl.n	80009f6 <_fwalk_reent+0x22>
 80009f2:	6824      	ldr	r4, [r4, #0]
 80009f4:	e7f5      	b.n	80009e2 <_fwalk_reent+0xe>
 80009f6:	89ab      	ldrh	r3, [r5, #12]
 80009f8:	2b01      	cmp	r3, #1
 80009fa:	d907      	bls.n	8000a0c <_fwalk_reent+0x38>
 80009fc:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000a00:	3301      	adds	r3, #1
 8000a02:	d003      	beq.n	8000a0c <_fwalk_reent+0x38>
 8000a04:	4629      	mov	r1, r5
 8000a06:	4640      	mov	r0, r8
 8000a08:	47c8      	blx	r9
 8000a0a:	4306      	orrs	r6, r0
 8000a0c:	3568      	adds	r5, #104	; 0x68
 8000a0e:	e7ee      	b.n	80009ee <_fwalk_reent+0x1a>

08000a10 <__swhatbuf_r>:
 8000a10:	b570      	push	{r4, r5, r6, lr}
 8000a12:	460e      	mov	r6, r1
 8000a14:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000a18:	2900      	cmp	r1, #0
 8000a1a:	b096      	sub	sp, #88	; 0x58
 8000a1c:	4614      	mov	r4, r2
 8000a1e:	461d      	mov	r5, r3
 8000a20:	da07      	bge.n	8000a32 <__swhatbuf_r+0x22>
 8000a22:	2300      	movs	r3, #0
 8000a24:	602b      	str	r3, [r5, #0]
 8000a26:	89b3      	ldrh	r3, [r6, #12]
 8000a28:	061a      	lsls	r2, r3, #24
 8000a2a:	d410      	bmi.n	8000a4e <__swhatbuf_r+0x3e>
 8000a2c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000a30:	e00e      	b.n	8000a50 <__swhatbuf_r+0x40>
 8000a32:	466a      	mov	r2, sp
 8000a34:	f000 f96e 	bl	8000d14 <_fstat_r>
 8000a38:	2800      	cmp	r0, #0
 8000a3a:	dbf2      	blt.n	8000a22 <__swhatbuf_r+0x12>
 8000a3c:	9a01      	ldr	r2, [sp, #4]
 8000a3e:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000a42:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000a46:	425a      	negs	r2, r3
 8000a48:	415a      	adcs	r2, r3
 8000a4a:	602a      	str	r2, [r5, #0]
 8000a4c:	e7ee      	b.n	8000a2c <__swhatbuf_r+0x1c>
 8000a4e:	2340      	movs	r3, #64	; 0x40
 8000a50:	2000      	movs	r0, #0
 8000a52:	6023      	str	r3, [r4, #0]
 8000a54:	b016      	add	sp, #88	; 0x58
 8000a56:	bd70      	pop	{r4, r5, r6, pc}

08000a58 <__smakebuf_r>:
 8000a58:	898b      	ldrh	r3, [r1, #12]
 8000a5a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000a5c:	079d      	lsls	r5, r3, #30
 8000a5e:	4606      	mov	r6, r0
 8000a60:	460c      	mov	r4, r1
 8000a62:	d507      	bpl.n	8000a74 <__smakebuf_r+0x1c>
 8000a64:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000a68:	6023      	str	r3, [r4, #0]
 8000a6a:	6123      	str	r3, [r4, #16]
 8000a6c:	2301      	movs	r3, #1
 8000a6e:	6163      	str	r3, [r4, #20]
 8000a70:	b002      	add	sp, #8
 8000a72:	bd70      	pop	{r4, r5, r6, pc}
 8000a74:	ab01      	add	r3, sp, #4
 8000a76:	466a      	mov	r2, sp
 8000a78:	f7ff ffca 	bl	8000a10 <__swhatbuf_r>
 8000a7c:	9900      	ldr	r1, [sp, #0]
 8000a7e:	4605      	mov	r5, r0
 8000a80:	4630      	mov	r0, r6
 8000a82:	f000 f877 	bl	8000b74 <_malloc_r>
 8000a86:	b948      	cbnz	r0, 8000a9c <__smakebuf_r+0x44>
 8000a88:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000a8c:	059a      	lsls	r2, r3, #22
 8000a8e:	d4ef      	bmi.n	8000a70 <__smakebuf_r+0x18>
 8000a90:	f023 0303 	bic.w	r3, r3, #3
 8000a94:	f043 0302 	orr.w	r3, r3, #2
 8000a98:	81a3      	strh	r3, [r4, #12]
 8000a9a:	e7e3      	b.n	8000a64 <__smakebuf_r+0xc>
 8000a9c:	4b0d      	ldr	r3, [pc, #52]	; (8000ad4 <__smakebuf_r+0x7c>)
 8000a9e:	62b3      	str	r3, [r6, #40]	; 0x28
 8000aa0:	89a3      	ldrh	r3, [r4, #12]
 8000aa2:	6020      	str	r0, [r4, #0]
 8000aa4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000aa8:	81a3      	strh	r3, [r4, #12]
 8000aaa:	9b00      	ldr	r3, [sp, #0]
 8000aac:	6163      	str	r3, [r4, #20]
 8000aae:	9b01      	ldr	r3, [sp, #4]
 8000ab0:	6120      	str	r0, [r4, #16]
 8000ab2:	b15b      	cbz	r3, 8000acc <__smakebuf_r+0x74>
 8000ab4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000ab8:	4630      	mov	r0, r6
 8000aba:	f000 f93d 	bl	8000d38 <_isatty_r>
 8000abe:	b128      	cbz	r0, 8000acc <__smakebuf_r+0x74>
 8000ac0:	89a3      	ldrh	r3, [r4, #12]
 8000ac2:	f023 0303 	bic.w	r3, r3, #3
 8000ac6:	f043 0301 	orr.w	r3, r3, #1
 8000aca:	81a3      	strh	r3, [r4, #12]
 8000acc:	89a3      	ldrh	r3, [r4, #12]
 8000ace:	431d      	orrs	r5, r3
 8000ad0:	81a5      	strh	r5, [r4, #12]
 8000ad2:	e7cd      	b.n	8000a70 <__smakebuf_r+0x18>
 8000ad4:	080008c5 	.word	0x080008c5

08000ad8 <_free_r>:
 8000ad8:	b538      	push	{r3, r4, r5, lr}
 8000ada:	4605      	mov	r5, r0
 8000adc:	2900      	cmp	r1, #0
 8000ade:	d045      	beq.n	8000b6c <_free_r+0x94>
 8000ae0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000ae4:	1f0c      	subs	r4, r1, #4
 8000ae6:	2b00      	cmp	r3, #0
 8000ae8:	bfb8      	it	lt
 8000aea:	18e4      	addlt	r4, r4, r3
 8000aec:	f000 f946 	bl	8000d7c <__malloc_lock>
 8000af0:	4a1f      	ldr	r2, [pc, #124]	; (8000b70 <_free_r+0x98>)
 8000af2:	6813      	ldr	r3, [r2, #0]
 8000af4:	4610      	mov	r0, r2
 8000af6:	b933      	cbnz	r3, 8000b06 <_free_r+0x2e>
 8000af8:	6063      	str	r3, [r4, #4]
 8000afa:	6014      	str	r4, [r2, #0]
 8000afc:	4628      	mov	r0, r5
 8000afe:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000b02:	f000 b93c 	b.w	8000d7e <__malloc_unlock>
 8000b06:	42a3      	cmp	r3, r4
 8000b08:	d90c      	bls.n	8000b24 <_free_r+0x4c>
 8000b0a:	6821      	ldr	r1, [r4, #0]
 8000b0c:	1862      	adds	r2, r4, r1
 8000b0e:	4293      	cmp	r3, r2
 8000b10:	bf04      	itt	eq
 8000b12:	681a      	ldreq	r2, [r3, #0]
 8000b14:	685b      	ldreq	r3, [r3, #4]
 8000b16:	6063      	str	r3, [r4, #4]
 8000b18:	bf04      	itt	eq
 8000b1a:	1852      	addeq	r2, r2, r1
 8000b1c:	6022      	streq	r2, [r4, #0]
 8000b1e:	6004      	str	r4, [r0, #0]
 8000b20:	e7ec      	b.n	8000afc <_free_r+0x24>
 8000b22:	4613      	mov	r3, r2
 8000b24:	685a      	ldr	r2, [r3, #4]
 8000b26:	b10a      	cbz	r2, 8000b2c <_free_r+0x54>
 8000b28:	42a2      	cmp	r2, r4
 8000b2a:	d9fa      	bls.n	8000b22 <_free_r+0x4a>
 8000b2c:	6819      	ldr	r1, [r3, #0]
 8000b2e:	1858      	adds	r0, r3, r1
 8000b30:	42a0      	cmp	r0, r4
 8000b32:	d10b      	bne.n	8000b4c <_free_r+0x74>
 8000b34:	6820      	ldr	r0, [r4, #0]
 8000b36:	4401      	add	r1, r0
 8000b38:	1858      	adds	r0, r3, r1
 8000b3a:	4282      	cmp	r2, r0
 8000b3c:	6019      	str	r1, [r3, #0]
 8000b3e:	d1dd      	bne.n	8000afc <_free_r+0x24>
 8000b40:	6810      	ldr	r0, [r2, #0]
 8000b42:	6852      	ldr	r2, [r2, #4]
 8000b44:	605a      	str	r2, [r3, #4]
 8000b46:	4401      	add	r1, r0
 8000b48:	6019      	str	r1, [r3, #0]
 8000b4a:	e7d7      	b.n	8000afc <_free_r+0x24>
 8000b4c:	d902      	bls.n	8000b54 <_free_r+0x7c>
 8000b4e:	230c      	movs	r3, #12
 8000b50:	602b      	str	r3, [r5, #0]
 8000b52:	e7d3      	b.n	8000afc <_free_r+0x24>
 8000b54:	6820      	ldr	r0, [r4, #0]
 8000b56:	1821      	adds	r1, r4, r0
 8000b58:	428a      	cmp	r2, r1
 8000b5a:	bf04      	itt	eq
 8000b5c:	6811      	ldreq	r1, [r2, #0]
 8000b5e:	6852      	ldreq	r2, [r2, #4]
 8000b60:	6062      	str	r2, [r4, #4]
 8000b62:	bf04      	itt	eq
 8000b64:	1809      	addeq	r1, r1, r0
 8000b66:	6021      	streq	r1, [r4, #0]
 8000b68:	605c      	str	r4, [r3, #4]
 8000b6a:	e7c7      	b.n	8000afc <_free_r+0x24>
 8000b6c:	bd38      	pop	{r3, r4, r5, pc}
 8000b6e:	bf00      	nop
 8000b70:	20000090 	.word	0x20000090

08000b74 <_malloc_r>:
 8000b74:	b570      	push	{r4, r5, r6, lr}
 8000b76:	1ccd      	adds	r5, r1, #3
 8000b78:	f025 0503 	bic.w	r5, r5, #3
 8000b7c:	3508      	adds	r5, #8
 8000b7e:	2d0c      	cmp	r5, #12
 8000b80:	bf38      	it	cc
 8000b82:	250c      	movcc	r5, #12
 8000b84:	2d00      	cmp	r5, #0
 8000b86:	4606      	mov	r6, r0
 8000b88:	db01      	blt.n	8000b8e <_malloc_r+0x1a>
 8000b8a:	42a9      	cmp	r1, r5
 8000b8c:	d903      	bls.n	8000b96 <_malloc_r+0x22>
 8000b8e:	230c      	movs	r3, #12
 8000b90:	6033      	str	r3, [r6, #0]
 8000b92:	2000      	movs	r0, #0
 8000b94:	bd70      	pop	{r4, r5, r6, pc}
 8000b96:	f000 f8f1 	bl	8000d7c <__malloc_lock>
 8000b9a:	4a21      	ldr	r2, [pc, #132]	; (8000c20 <_malloc_r+0xac>)
 8000b9c:	6814      	ldr	r4, [r2, #0]
 8000b9e:	4621      	mov	r1, r4
 8000ba0:	b991      	cbnz	r1, 8000bc8 <_malloc_r+0x54>
 8000ba2:	4c20      	ldr	r4, [pc, #128]	; (8000c24 <_malloc_r+0xb0>)
 8000ba4:	6823      	ldr	r3, [r4, #0]
 8000ba6:	b91b      	cbnz	r3, 8000bb0 <_malloc_r+0x3c>
 8000ba8:	4630      	mov	r0, r6
 8000baa:	f000 f83d 	bl	8000c28 <_sbrk_r>
 8000bae:	6020      	str	r0, [r4, #0]
 8000bb0:	4629      	mov	r1, r5
 8000bb2:	4630      	mov	r0, r6
 8000bb4:	f000 f838 	bl	8000c28 <_sbrk_r>
 8000bb8:	1c43      	adds	r3, r0, #1
 8000bba:	d124      	bne.n	8000c06 <_malloc_r+0x92>
 8000bbc:	230c      	movs	r3, #12
 8000bbe:	6033      	str	r3, [r6, #0]
 8000bc0:	4630      	mov	r0, r6
 8000bc2:	f000 f8dc 	bl	8000d7e <__malloc_unlock>
 8000bc6:	e7e4      	b.n	8000b92 <_malloc_r+0x1e>
 8000bc8:	680b      	ldr	r3, [r1, #0]
 8000bca:	1b5b      	subs	r3, r3, r5
 8000bcc:	d418      	bmi.n	8000c00 <_malloc_r+0x8c>
 8000bce:	2b0b      	cmp	r3, #11
 8000bd0:	d90f      	bls.n	8000bf2 <_malloc_r+0x7e>
 8000bd2:	600b      	str	r3, [r1, #0]
 8000bd4:	50cd      	str	r5, [r1, r3]
 8000bd6:	18cc      	adds	r4, r1, r3
 8000bd8:	4630      	mov	r0, r6
 8000bda:	f000 f8d0 	bl	8000d7e <__malloc_unlock>
 8000bde:	f104 000b 	add.w	r0, r4, #11
 8000be2:	1d23      	adds	r3, r4, #4
 8000be4:	f020 0007 	bic.w	r0, r0, #7
 8000be8:	1ac3      	subs	r3, r0, r3
 8000bea:	d0d3      	beq.n	8000b94 <_malloc_r+0x20>
 8000bec:	425a      	negs	r2, r3
 8000bee:	50e2      	str	r2, [r4, r3]
 8000bf0:	e7d0      	b.n	8000b94 <_malloc_r+0x20>
 8000bf2:	428c      	cmp	r4, r1
 8000bf4:	684b      	ldr	r3, [r1, #4]
 8000bf6:	bf16      	itet	ne
 8000bf8:	6063      	strne	r3, [r4, #4]
 8000bfa:	6013      	streq	r3, [r2, #0]
 8000bfc:	460c      	movne	r4, r1
 8000bfe:	e7eb      	b.n	8000bd8 <_malloc_r+0x64>
 8000c00:	460c      	mov	r4, r1
 8000c02:	6849      	ldr	r1, [r1, #4]
 8000c04:	e7cc      	b.n	8000ba0 <_malloc_r+0x2c>
 8000c06:	1cc4      	adds	r4, r0, #3
 8000c08:	f024 0403 	bic.w	r4, r4, #3
 8000c0c:	42a0      	cmp	r0, r4
 8000c0e:	d005      	beq.n	8000c1c <_malloc_r+0xa8>
 8000c10:	1a21      	subs	r1, r4, r0
 8000c12:	4630      	mov	r0, r6
 8000c14:	f000 f808 	bl	8000c28 <_sbrk_r>
 8000c18:	3001      	adds	r0, #1
 8000c1a:	d0cf      	beq.n	8000bbc <_malloc_r+0x48>
 8000c1c:	6025      	str	r5, [r4, #0]
 8000c1e:	e7db      	b.n	8000bd8 <_malloc_r+0x64>
 8000c20:	20000090 	.word	0x20000090
 8000c24:	20000094 	.word	0x20000094

08000c28 <_sbrk_r>:
 8000c28:	b538      	push	{r3, r4, r5, lr}
 8000c2a:	4c06      	ldr	r4, [pc, #24]	; (8000c44 <_sbrk_r+0x1c>)
 8000c2c:	2300      	movs	r3, #0
 8000c2e:	4605      	mov	r5, r0
 8000c30:	4608      	mov	r0, r1
 8000c32:	6023      	str	r3, [r4, #0]
 8000c34:	f7ff fbc6 	bl	80003c4 <_sbrk>
 8000c38:	1c43      	adds	r3, r0, #1
 8000c3a:	d102      	bne.n	8000c42 <_sbrk_r+0x1a>
 8000c3c:	6823      	ldr	r3, [r4, #0]
 8000c3e:	b103      	cbz	r3, 8000c42 <_sbrk_r+0x1a>
 8000c40:	602b      	str	r3, [r5, #0]
 8000c42:	bd38      	pop	{r3, r4, r5, pc}
 8000c44:	20000098 	.word	0x20000098

08000c48 <__sread>:
 8000c48:	b510      	push	{r4, lr}
 8000c4a:	460c      	mov	r4, r1
 8000c4c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c50:	f000 f896 	bl	8000d80 <_read_r>
 8000c54:	2800      	cmp	r0, #0
 8000c56:	bfab      	itete	ge
 8000c58:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000c5a:	89a3      	ldrhlt	r3, [r4, #12]
 8000c5c:	181b      	addge	r3, r3, r0
 8000c5e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000c62:	bfac      	ite	ge
 8000c64:	6563      	strge	r3, [r4, #84]	; 0x54
 8000c66:	81a3      	strhlt	r3, [r4, #12]
 8000c68:	bd10      	pop	{r4, pc}

08000c6a <__swrite>:
 8000c6a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000c6e:	461f      	mov	r7, r3
 8000c70:	898b      	ldrh	r3, [r1, #12]
 8000c72:	05db      	lsls	r3, r3, #23
 8000c74:	4605      	mov	r5, r0
 8000c76:	460c      	mov	r4, r1
 8000c78:	4616      	mov	r6, r2
 8000c7a:	d505      	bpl.n	8000c88 <__swrite+0x1e>
 8000c7c:	2302      	movs	r3, #2
 8000c7e:	2200      	movs	r2, #0
 8000c80:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c84:	f000 f868 	bl	8000d58 <_lseek_r>
 8000c88:	89a3      	ldrh	r3, [r4, #12]
 8000c8a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000c8e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000c92:	81a3      	strh	r3, [r4, #12]
 8000c94:	4632      	mov	r2, r6
 8000c96:	463b      	mov	r3, r7
 8000c98:	4628      	mov	r0, r5
 8000c9a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000c9e:	f000 b817 	b.w	8000cd0 <_write_r>

08000ca2 <__sseek>:
 8000ca2:	b510      	push	{r4, lr}
 8000ca4:	460c      	mov	r4, r1
 8000ca6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000caa:	f000 f855 	bl	8000d58 <_lseek_r>
 8000cae:	1c43      	adds	r3, r0, #1
 8000cb0:	89a3      	ldrh	r3, [r4, #12]
 8000cb2:	bf15      	itete	ne
 8000cb4:	6560      	strne	r0, [r4, #84]	; 0x54
 8000cb6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000cba:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000cbe:	81a3      	strheq	r3, [r4, #12]
 8000cc0:	bf18      	it	ne
 8000cc2:	81a3      	strhne	r3, [r4, #12]
 8000cc4:	bd10      	pop	{r4, pc}

08000cc6 <__sclose>:
 8000cc6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000cca:	f000 b813 	b.w	8000cf4 <_close_r>
	...

08000cd0 <_write_r>:
 8000cd0:	b538      	push	{r3, r4, r5, lr}
 8000cd2:	4c07      	ldr	r4, [pc, #28]	; (8000cf0 <_write_r+0x20>)
 8000cd4:	4605      	mov	r5, r0
 8000cd6:	4608      	mov	r0, r1
 8000cd8:	4611      	mov	r1, r2
 8000cda:	2200      	movs	r2, #0
 8000cdc:	6022      	str	r2, [r4, #0]
 8000cde:	461a      	mov	r2, r3
 8000ce0:	f7ff fb23 	bl	800032a <_write>
 8000ce4:	1c43      	adds	r3, r0, #1
 8000ce6:	d102      	bne.n	8000cee <_write_r+0x1e>
 8000ce8:	6823      	ldr	r3, [r4, #0]
 8000cea:	b103      	cbz	r3, 8000cee <_write_r+0x1e>
 8000cec:	602b      	str	r3, [r5, #0]
 8000cee:	bd38      	pop	{r3, r4, r5, pc}
 8000cf0:	20000098 	.word	0x20000098

08000cf4 <_close_r>:
 8000cf4:	b538      	push	{r3, r4, r5, lr}
 8000cf6:	4c06      	ldr	r4, [pc, #24]	; (8000d10 <_close_r+0x1c>)
 8000cf8:	2300      	movs	r3, #0
 8000cfa:	4605      	mov	r5, r0
 8000cfc:	4608      	mov	r0, r1
 8000cfe:	6023      	str	r3, [r4, #0]
 8000d00:	f7ff fb2f 	bl	8000362 <_close>
 8000d04:	1c43      	adds	r3, r0, #1
 8000d06:	d102      	bne.n	8000d0e <_close_r+0x1a>
 8000d08:	6823      	ldr	r3, [r4, #0]
 8000d0a:	b103      	cbz	r3, 8000d0e <_close_r+0x1a>
 8000d0c:	602b      	str	r3, [r5, #0]
 8000d0e:	bd38      	pop	{r3, r4, r5, pc}
 8000d10:	20000098 	.word	0x20000098

08000d14 <_fstat_r>:
 8000d14:	b538      	push	{r3, r4, r5, lr}
 8000d16:	4c07      	ldr	r4, [pc, #28]	; (8000d34 <_fstat_r+0x20>)
 8000d18:	2300      	movs	r3, #0
 8000d1a:	4605      	mov	r5, r0
 8000d1c:	4608      	mov	r0, r1
 8000d1e:	4611      	mov	r1, r2
 8000d20:	6023      	str	r3, [r4, #0]
 8000d22:	f7ff fb29 	bl	8000378 <_fstat>
 8000d26:	1c43      	adds	r3, r0, #1
 8000d28:	d102      	bne.n	8000d30 <_fstat_r+0x1c>
 8000d2a:	6823      	ldr	r3, [r4, #0]
 8000d2c:	b103      	cbz	r3, 8000d30 <_fstat_r+0x1c>
 8000d2e:	602b      	str	r3, [r5, #0]
 8000d30:	bd38      	pop	{r3, r4, r5, pc}
 8000d32:	bf00      	nop
 8000d34:	20000098 	.word	0x20000098

08000d38 <_isatty_r>:
 8000d38:	b538      	push	{r3, r4, r5, lr}
 8000d3a:	4c06      	ldr	r4, [pc, #24]	; (8000d54 <_isatty_r+0x1c>)
 8000d3c:	2300      	movs	r3, #0
 8000d3e:	4605      	mov	r5, r0
 8000d40:	4608      	mov	r0, r1
 8000d42:	6023      	str	r3, [r4, #0]
 8000d44:	f7ff fb27 	bl	8000396 <_isatty>
 8000d48:	1c43      	adds	r3, r0, #1
 8000d4a:	d102      	bne.n	8000d52 <_isatty_r+0x1a>
 8000d4c:	6823      	ldr	r3, [r4, #0]
 8000d4e:	b103      	cbz	r3, 8000d52 <_isatty_r+0x1a>
 8000d50:	602b      	str	r3, [r5, #0]
 8000d52:	bd38      	pop	{r3, r4, r5, pc}
 8000d54:	20000098 	.word	0x20000098

08000d58 <_lseek_r>:
 8000d58:	b538      	push	{r3, r4, r5, lr}
 8000d5a:	4c07      	ldr	r4, [pc, #28]	; (8000d78 <_lseek_r+0x20>)
 8000d5c:	4605      	mov	r5, r0
 8000d5e:	4608      	mov	r0, r1
 8000d60:	4611      	mov	r1, r2
 8000d62:	2200      	movs	r2, #0
 8000d64:	6022      	str	r2, [r4, #0]
 8000d66:	461a      	mov	r2, r3
 8000d68:	f7ff fb1f 	bl	80003aa <_lseek>
 8000d6c:	1c43      	adds	r3, r0, #1
 8000d6e:	d102      	bne.n	8000d76 <_lseek_r+0x1e>
 8000d70:	6823      	ldr	r3, [r4, #0]
 8000d72:	b103      	cbz	r3, 8000d76 <_lseek_r+0x1e>
 8000d74:	602b      	str	r3, [r5, #0]
 8000d76:	bd38      	pop	{r3, r4, r5, pc}
 8000d78:	20000098 	.word	0x20000098

08000d7c <__malloc_lock>:
 8000d7c:	4770      	bx	lr

08000d7e <__malloc_unlock>:
 8000d7e:	4770      	bx	lr

08000d80 <_read_r>:
 8000d80:	b538      	push	{r3, r4, r5, lr}
 8000d82:	4c07      	ldr	r4, [pc, #28]	; (8000da0 <_read_r+0x20>)
 8000d84:	4605      	mov	r5, r0
 8000d86:	4608      	mov	r0, r1
 8000d88:	4611      	mov	r1, r2
 8000d8a:	2200      	movs	r2, #0
 8000d8c:	6022      	str	r2, [r4, #0]
 8000d8e:	461a      	mov	r2, r3
 8000d90:	f7ff faae 	bl	80002f0 <_read>
 8000d94:	1c43      	adds	r3, r0, #1
 8000d96:	d102      	bne.n	8000d9e <_read_r+0x1e>
 8000d98:	6823      	ldr	r3, [r4, #0]
 8000d9a:	b103      	cbz	r3, 8000d9e <_read_r+0x1e>
 8000d9c:	602b      	str	r3, [r5, #0]
 8000d9e:	bd38      	pop	{r3, r4, r5, pc}
 8000da0:	20000098 	.word	0x20000098

08000da4 <_init>:
 8000da4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000da6:	bf00      	nop
 8000da8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000daa:	bc08      	pop	{r3}
 8000dac:	469e      	mov	lr, r3
 8000dae:	4770      	bx	lr

08000db0 <_fini>:
 8000db0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000db2:	bf00      	nop
 8000db4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000db6:	bc08      	pop	{r3}
 8000db8:	469e      	mov	lr, r3
 8000dba:	4770      	bx	lr

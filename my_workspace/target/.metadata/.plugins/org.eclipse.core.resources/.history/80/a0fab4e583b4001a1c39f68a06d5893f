/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
 * All rights reserved.</center></h2>
 *
 * This software component is licensed by ST under BSD 3-Clause license,
 * the "License"; You may not use this file except in compliance with the
 * License. You may obtain a copy of the License at:
 *                        opensource.org/licenses/BSD-3-Clause
 *
 ******************************************************************************
 */

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

#include<stdio.h>
#include<stdint.h>

int main(void)
{
	uint32_t *pSHCSR_address = (uint32_t*)0xE000ED24;
	*pSHCSR_address |= (0x7 << 16);

	uint32_t *pSRAM = (uint32_t*)0x20010000;
	*pSRAM = 0xFFFFFFFF;

	void (*some_address) (void);
	some_address = (void*)0x20010000;//if LSB is 0 it causes invalid state exception

	some_address();
	for(;;);
}


void HardFault_Handler(void)
{
	printf("Exception: HardFault_Handler\n");
	while(1);
}

void MemManage_Handler(void)
{
	printf("Exception: MemManage_Handler\n");
	while(1);
}

void BusFault_Handler(void)
{
	printf("Exception: BusFault_Handler\n");
	while(1);
}

void UsageFault_Handler(void)
{
	__asm ("MRS r0, MSP");
	register uint32_t msp_value __asm("r0");
	uint32_t *pMSP = (uint32_t*)msp_value;

	uint32_t *pUFSR = (uint32_t*)0xE000ED2A;
	printf("Exception: UsageFault_Handler\n");
	printf("UFSR: %lx\n", (*pUFSR) & 0xFFFF);
	while(1);
}

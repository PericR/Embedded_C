
007ReadPinAbstaction.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000164  080001c4  080001c4  000101c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000328  08000330  00010330  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000328  08000328  00010330  2**0
                  CONTENTS
  4 .ARM          00000000  08000328  08000328  00010330  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000328  08000330  00010330  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000328  08000328  00010328  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800032c  0800032c  0001032c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010330  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000330  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000330  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00010330  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000057b  00000000  00000000  0001035a  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000000a2  00000000  00000000  000108d5  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000048  00000000  00000000  00010978  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000030  00000000  00000000  000109c0  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00000f06  00000000  00000000  000109f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   000003f4  00000000  00000000  000118f6  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00003c67  00000000  00000000  00011cea  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  00015951  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000058  00000000  00000000  000159cc  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	; (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	08000310 	.word	0x08000310

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	; (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	; (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	; (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	08000310 	.word	0x08000310

08000204 <main>:

#include<stdint.h>
#include "main.h"

int main(void)
{
 8000204:	b480      	push	{r7}
 8000206:	b087      	sub	sp, #28
 8000208:	af00      	add	r7, sp, #0
	RCC_AHB1ENR_t *pClkCtrlReg = (uint32_t*)0x40023830;//RCC
 800020a:	4b16      	ldr	r3, [pc, #88]	; (8000264 <main+0x60>)
 800020c:	617b      	str	r3, [r7, #20]
	GPIOx_MODER_t *pPortAModeReg = (uint32_t*)0x40020000;
 800020e:	4b16      	ldr	r3, [pc, #88]	; (8000268 <main+0x64>)
 8000210:	613b      	str	r3, [r7, #16]
	GPIOx_ODR_t *pPortAOutReg = (uint32_t*)0x40020014;
 8000212:	4b16      	ldr	r3, [pc, #88]	; (800026c <main+0x68>)
 8000214:	60fb      	str	r3, [r7, #12]
	GPIOx_IDR_t *pPortAInReg = (uint32_t*)0x40020010;
 8000216:	4b16      	ldr	r3, [pc, #88]	; (8000270 <main+0x6c>)
 8000218:	60bb      	str	r3, [r7, #8]

	//Enable the clock for GPIOA peripheral in the AHB1ENR
	pClkCtrlReg->gpioa_en = 1;
 800021a:	697a      	ldr	r2, [r7, #20]
 800021c:	7813      	ldrb	r3, [r2, #0]
 800021e:	f043 0301 	orr.w	r3, r3, #1
 8000222:	7013      	strb	r3, [r2, #0]

	//configure the mode of the IO pin 5 as output
	pPortAModeReg->pin_5 = 1;
 8000224:	693a      	ldr	r2, [r7, #16]
 8000226:	7853      	ldrb	r3, [r2, #1]
 8000228:	2101      	movs	r1, #1
 800022a:	f361 0383 	bfi	r3, r1, #2, #2
 800022e:	7053      	strb	r3, [r2, #1]

	//configure the mode of the IO pin 0 as input
	pPortAModeReg->pin_0 = 0;
 8000230:	693a      	ldr	r2, [r7, #16]
 8000232:	7813      	ldrb	r3, [r2, #0]
 8000234:	f36f 0301 	bfc	r3, #0, #2
 8000238:	7013      	strb	r3, [r2, #0]

	uint32_t in_a0;

	while(1){
		 in_a0 = pPortAInReg->pin_0;
 800023a:	68bb      	ldr	r3, [r7, #8]
 800023c:	781b      	ldrb	r3, [r3, #0]
 800023e:	f3c3 0300 	ubfx	r3, r3, #0, #1
 8000242:	b2db      	uxtb	r3, r3
 8000244:	607b      	str	r3, [r7, #4]

		if(in_a0){
 8000246:	687b      	ldr	r3, [r7, #4]
 8000248:	2b00      	cmp	r3, #0
 800024a:	d005      	beq.n	8000258 <main+0x54>
			pPortAOutReg->pin_5 = 1; //turn on
 800024c:	68fa      	ldr	r2, [r7, #12]
 800024e:	7813      	ldrb	r3, [r2, #0]
 8000250:	f043 0320 	orr.w	r3, r3, #32
 8000254:	7013      	strb	r3, [r2, #0]
 8000256:	e7f0      	b.n	800023a <main+0x36>
		}
		else{
			pPortAOutReg->pin_5 = 0; //turn off
 8000258:	68fa      	ldr	r2, [r7, #12]
 800025a:	7813      	ldrb	r3, [r2, #0]
 800025c:	f36f 1345 	bfc	r3, #5, #1
 8000260:	7013      	strb	r3, [r2, #0]
		 in_a0 = pPortAInReg->pin_0;
 8000262:	e7ea      	b.n	800023a <main+0x36>
 8000264:	40023830 	.word	0x40023830
 8000268:	40020000 	.word	0x40020000
 800026c:	40020014 	.word	0x40020014
 8000270:	40020010 	.word	0x40020010

08000274 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000274:	480d      	ldr	r0, [pc, #52]	; (80002ac <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000276:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000278:	480d      	ldr	r0, [pc, #52]	; (80002b0 <LoopForever+0x6>)
  ldr r1, =_edata
 800027a:	490e      	ldr	r1, [pc, #56]	; (80002b4 <LoopForever+0xa>)
  ldr r2, =_sidata
 800027c:	4a0e      	ldr	r2, [pc, #56]	; (80002b8 <LoopForever+0xe>)
  movs r3, #0
 800027e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000280:	e002      	b.n	8000288 <LoopCopyDataInit>

08000282 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000282:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000284:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000286:	3304      	adds	r3, #4

08000288 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000288:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800028a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800028c:	d3f9      	bcc.n	8000282 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800028e:	4a0b      	ldr	r2, [pc, #44]	; (80002bc <LoopForever+0x12>)
  ldr r4, =_ebss
 8000290:	4c0b      	ldr	r4, [pc, #44]	; (80002c0 <LoopForever+0x16>)
  movs r3, #0
 8000292:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000294:	e001      	b.n	800029a <LoopFillZerobss>

08000296 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000296:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000298:	3204      	adds	r2, #4

0800029a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800029a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800029c:	d3fb      	bcc.n	8000296 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 800029e:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 80002a2:	f000 f811 	bl	80002c8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002a6:	f7ff ffad 	bl	8000204 <main>

080002aa <LoopForever>:

LoopForever:
    b LoopForever
 80002aa:	e7fe      	b.n	80002aa <LoopForever>
  ldr   r0, =_estack
 80002ac:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002b0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002b4:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002b8:	08000330 	.word	0x08000330
  ldr r2, =_sbss
 80002bc:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002c0:	2000001c 	.word	0x2000001c

080002c4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002c4:	e7fe      	b.n	80002c4 <ADC_IRQHandler>
	...

080002c8 <__libc_init_array>:
 80002c8:	b570      	push	{r4, r5, r6, lr}
 80002ca:	4e0d      	ldr	r6, [pc, #52]	; (8000300 <__libc_init_array+0x38>)
 80002cc:	4c0d      	ldr	r4, [pc, #52]	; (8000304 <__libc_init_array+0x3c>)
 80002ce:	1ba4      	subs	r4, r4, r6
 80002d0:	10a4      	asrs	r4, r4, #2
 80002d2:	2500      	movs	r5, #0
 80002d4:	42a5      	cmp	r5, r4
 80002d6:	d109      	bne.n	80002ec <__libc_init_array+0x24>
 80002d8:	4e0b      	ldr	r6, [pc, #44]	; (8000308 <__libc_init_array+0x40>)
 80002da:	4c0c      	ldr	r4, [pc, #48]	; (800030c <__libc_init_array+0x44>)
 80002dc:	f000 f818 	bl	8000310 <_init>
 80002e0:	1ba4      	subs	r4, r4, r6
 80002e2:	10a4      	asrs	r4, r4, #2
 80002e4:	2500      	movs	r5, #0
 80002e6:	42a5      	cmp	r5, r4
 80002e8:	d105      	bne.n	80002f6 <__libc_init_array+0x2e>
 80002ea:	bd70      	pop	{r4, r5, r6, pc}
 80002ec:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80002f0:	4798      	blx	r3
 80002f2:	3501      	adds	r5, #1
 80002f4:	e7ee      	b.n	80002d4 <__libc_init_array+0xc>
 80002f6:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80002fa:	4798      	blx	r3
 80002fc:	3501      	adds	r5, #1
 80002fe:	e7f2      	b.n	80002e6 <__libc_init_array+0x1e>
 8000300:	08000328 	.word	0x08000328
 8000304:	08000328 	.word	0x08000328
 8000308:	08000328 	.word	0x08000328
 800030c:	0800032c 	.word	0x0800032c

08000310 <_init>:
 8000310:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000312:	bf00      	nop
 8000314:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000316:	bc08      	pop	{r3}
 8000318:	469e      	mov	lr, r3
 800031a:	4770      	bx	lr

0800031c <_fini>:
 800031c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800031e:	bf00      	nop
 8000320:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000322:	bc08      	pop	{r3}
 8000324:	469e      	mov	lr, r3
 8000326:	4770      	bx	lr
